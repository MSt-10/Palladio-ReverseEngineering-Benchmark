<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_ZDzCHNanEe60X8FDZehb0Q">
  <components__Repository xsi:type="repository:BasicComponent" id="_ZDccx9anEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_api_CardServiceController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZDccxtanEe60X8FDZehb0Q" entityName="card-service/api[*] Provider" providedInterface__OperationProvidedRole="_ZDccw9anEe60X8FDZehb0Q"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_ZC3N-tanEe60X8FDZehb0Q" describedService__SEFF="_Y8PBhNanEe60X8FDZehb0Q">
      <steps_Behaviour xsi:type="seff:StartAction" id="_ZC3N99anEe60X8FDZehb0Q" entityName="Start Action" successor_AbstractAction="_ZC3N-NanEe60X8FDZehb0Q"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZC3N-NanEe60X8FDZehb0Q" entityName="fakeRepo" predecessor_AbstractAction="_ZC3N99anEe60X8FDZehb0Q" successor_AbstractAction="_ZC3N-danEe60X8FDZehb0Q">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.fakeRepo"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRepo"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_ZC3N-danEe60X8FDZehb0Q" entityName="Stop Action" predecessor_AbstractAction="_ZC3N-NanEe60X8FDZehb0Q"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_ZC2m59anEe60X8FDZehb0Q" describedService__SEFF="_Y8PBgdanEe60X8FDZehb0Q">
      <steps_Behaviour xsi:type="seff:StartAction" id="_ZC2m5NanEe60X8FDZehb0Q" entityName="Start Action" successor_AbstractAction="_ZC2m5danEe60X8FDZehb0Q"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZC2m5danEe60X8FDZehb0Q" entityName="Optional.ofNullable(fakeRepo.stream().filter((card) -> card.getId().equals(cardId)).reduce(null,(u,v) -> {&#xA;  if (u != null &amp;&amp; v != null)   throw new IllegalStateException(&quot;More than one CardId found&quot;);&#xA; else   return u == null ? v : u;&#xA;}&#xA;)).get()" predecessor_AbstractAction="_ZC2m5NanEe60X8FDZehb0Q" successor_AbstractAction="_ZC2m5tanEe60X8FDZehb0Q">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.Optional.ofNullable(fakeRepo.stream().filter((card) -> card.getId().equals(cardId)).reduce(null,(u,v) -> {&#xA;  if (u != null &amp;&amp; v != null)   throw new IllegalStateException(&quot;More than one CardId found&quot;);&#xA; else   return u == null ? v : u;&#xA;}&#xA;)).get()"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="Optional.ofNullable(fakeRepo.stream().filter((card) -> card.getId().equals(cardId)).reduce(null,(u,v) -> {&#xA;  if (u != null &amp;&amp; v != null)   throw new IllegalStateException(&quot;More than one CardId found&quot;);&#xA; else   return u == null ? v : u;&#xA;}&#xA;)).get()"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_ZC2m5tanEe60X8FDZehb0Q" entityName="Stop Action" predecessor_AbstractAction="_ZC2m5danEe60X8FDZehb0Q"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_ZC3N9tanEe60X8FDZehb0Q" describedService__SEFF="_Y8QPodanEe60X8FDZehb0Q">
      <steps_Behaviour xsi:type="seff:StartAction" id="_ZC2m6NanEe60X8FDZehb0Q" entityName="Start Action" successor_AbstractAction="_ZC3N89anEe60X8FDZehb0Q"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_ZC3N89anEe60X8FDZehb0Q" entityName="If Branch" predecessor_AbstractAction="_ZC2m6NanEe60X8FDZehb0Q" successor_AbstractAction="_ZC3N9NanEe60X8FDZehb0Q">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZC3N8NanEe60X8FDZehb0Q" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_ZC3N8tanEe60X8FDZehb0Q">
            <steps_Behaviour xsi:type="seff:StartAction" id="_ZC2m6danEe60X8FDZehb0Q" entityName="Start Action" successor_AbstractAction="_ZC2m6tanEe60X8FDZehb0Q"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_ZC2m6tanEe60X8FDZehb0Q" entityName="fakeRepo.add(newCard)" predecessor_AbstractAction="_ZC2m6danEe60X8FDZehb0Q" successor_AbstractAction="_ZC2m69anEe60X8FDZehb0Q"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_ZC2m69anEe60X8FDZehb0Q" entityName="Stop Action" predecessor_AbstractAction="_ZC2m6tanEe60X8FDZehb0Q"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(newCard.getId() != null)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_ZC3N9NanEe60X8FDZehb0Q" entityName="System.out.println(&quot;New card passing: &quot; + newCard)" predecessor_AbstractAction="_ZC3N89anEe60X8FDZehb0Q" successor_AbstractAction="_ZC3N9danEe60X8FDZehb0Q"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_ZC3N9danEe60X8FDZehb0Q" entityName="Stop Action" predecessor_AbstractAction="_ZC3N9NanEe60X8FDZehb0Q"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_ZDk_q9anEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_service_CardStatementServiceController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZDk_qNanEe60X8FDZehb0Q" entityName="card-statement-composite/api/statement-by-card Provider" providedInterface__OperationProvidedRole="_ZDccxdanEe60X8FDZehb0Q"/>
    <requiredRoles_InterfaceRequiringEntity xsi:type="repository:OperationRequiredRole" id="_ZDk_qdanEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_service_StatementClient Consumer" requiredInterface__OperationRequiredRole="_ZDccwtanEe60X8FDZehb0Q"/>
    <requiredRoles_InterfaceRequiringEntity xsi:type="repository:OperationRequiredRole" id="_ZDk_qtanEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_service_CardClient Consumer" requiredInterface__OperationRequiredRole="_ZDccxNanEe60X8FDZehb0Q"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_ZCy8gtanEe60X8FDZehb0Q" describedService__SEFF="_Y8L-MNanEe60X8FDZehb0Q">
      <steps_Behaviour xsi:type="seff:StartAction" id="_Y86-AdanEe60X8FDZehb0Q" entityName="Start Action" successor_AbstractAction="_Y89aQNanEe60X8FDZehb0Q"/>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_Y89aQNanEe60X8FDZehb0Q" entityName="response.put(cardClient.getCard(cardId),statementClient.getStatements(cardId))" predecessor_AbstractAction="_Y86-AdanEe60X8FDZehb0Q" successor_AbstractAction="_ZCy8gNanEe60X8FDZehb0Q"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZCy8gNanEe60X8FDZehb0Q" entityName="new ResponseEntity&lt;Map&lt;CardVO,List&lt;StatementVO>>>(response,HttpStatus.OK)" predecessor_AbstractAction="_Y89aQNanEe60X8FDZehb0Q" successor_AbstractAction="_ZCy8gdanEe60X8FDZehb0Q">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.new ResponseEntity&lt;Map&lt;CardVO,List&lt;StatementVO>>>(response,HttpStatus.OK)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="new ResponseEntity&lt;Map&lt;CardVO,List&lt;StatementVO>>>(response,HttpStatus.OK)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_ZCy8gdanEe60X8FDZehb0Q" entityName="Stop Action" predecessor_AbstractAction="_ZCy8gNanEe60X8FDZehb0Q"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_ZDnb5danEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_api_StatementServiceController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZDnb5NanEe60X8FDZehb0Q" entityName="statement-service/api[*] Provider" providedInterface__OperationProvidedRole="_ZDccwNanEe60X8FDZehb0Q"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_ZC2m4tanEe60X8FDZehb0Q" describedService__SEFF="_Y8RdxtanEe60X8FDZehb0Q">
      <steps_Behaviour xsi:type="seff:StartAction" id="_ZC1_2NanEe60X8FDZehb0Q" entityName="Start Action" successor_AbstractAction="_ZC2m4NanEe60X8FDZehb0Q"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZC2m4NanEe60X8FDZehb0Q" entityName="Optional.ofNullable(fakeRepo.stream().filter((statement) -> statement.getId().equals(statementId)).reduce(null,(u,v) -> {&#xA;  if (u != null &amp;&amp; v != null)   throw new IllegalStateException(&quot;More than one StatementId found&quot;);&#xA; else   return u == null ? v : u;&#xA;}&#xA;)).get()" predecessor_AbstractAction="_ZC1_2NanEe60X8FDZehb0Q" successor_AbstractAction="_ZC2m4danEe60X8FDZehb0Q">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.Optional.ofNullable(fakeRepo.stream().filter((statement) -> statement.getId().equals(statementId)).reduce(null,(u,v) -> {&#xA;  if (u != null &amp;&amp; v != null)   throw new IllegalStateException(&quot;More than one StatementId found&quot;);&#xA; else   return u == null ? v : u;&#xA;}&#xA;)).get()"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="Optional.ofNullable(fakeRepo.stream().filter((statement) -> statement.getId().equals(statementId)).reduce(null,(u,v) -> {&#xA;  if (u != null &amp;&amp; v != null)   throw new IllegalStateException(&quot;More than one StatementId found&quot;);&#xA; else   return u == null ? v : u;&#xA;}&#xA;)).get()"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_ZC2m4danEe60X8FDZehb0Q" entityName="Stop Action" predecessor_AbstractAction="_ZC2m4NanEe60X8FDZehb0Q"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_ZC1_19anEe60X8FDZehb0Q" describedService__SEFF="_Y8SE0danEe60X8FDZehb0Q">
      <steps_Behaviour xsi:type="seff:StartAction" id="_ZC1_1NanEe60X8FDZehb0Q" entityName="Start Action" successor_AbstractAction="_ZC1_1danEe60X8FDZehb0Q"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZC1_1danEe60X8FDZehb0Q" entityName="fakeRepo" predecessor_AbstractAction="_ZC1_1NanEe60X8FDZehb0Q" successor_AbstractAction="_ZC1_1tanEe60X8FDZehb0Q">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.fakeRepo"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRepo"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_ZC1_1tanEe60X8FDZehb0Q" entityName="Stop Action" predecessor_AbstractAction="_ZC1_1danEe60X8FDZehb0Q"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_ZC1_09anEe60X8FDZehb0Q" describedService__SEFF="_Y8Rdw9anEe60X8FDZehb0Q">
      <steps_Behaviour xsi:type="seff:StartAction" id="_ZCzjkdanEe60X8FDZehb0Q" entityName="Start Action" successor_AbstractAction="_ZC1_0NanEe60X8FDZehb0Q"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_ZC1_0NanEe60X8FDZehb0Q" entityName="If Branch" predecessor_AbstractAction="_ZCzjkdanEe60X8FDZehb0Q" successor_AbstractAction="_ZC1_0danEe60X8FDZehb0Q">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZC0xsNanEe60X8FDZehb0Q" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_ZC1YwNanEe60X8FDZehb0Q">
            <steps_Behaviour xsi:type="seff:StartAction" id="_ZCzjktanEe60X8FDZehb0Q" entityName="Start Action" successor_AbstractAction="_ZC0KoNanEe60X8FDZehb0Q"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZC0KoNanEe60X8FDZehb0Q" entityName="fakeRepo.stream().filter((statement) -> statement.getCardId().equals(cardId)).collect(Collectors.toList())" predecessor_AbstractAction="_ZCzjktanEe60X8FDZehb0Q" successor_AbstractAction="_ZC0KodanEe60X8FDZehb0Q">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRepo.stream().filter((statement) -> statement.getCardId().equals(cardId)).collect(Collectors.toList())"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRepo.stream().filter((statement) -> statement.getCardId().equals(cardId)).collect(Collectors.toList())"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_ZC0KodanEe60X8FDZehb0Q" entityName="Stop Action" predecessor_AbstractAction="_ZC0KoNanEe60X8FDZehb0Q"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(cardId != null)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZC1_0danEe60X8FDZehb0Q" entityName="null" predecessor_AbstractAction="_ZC1_0NanEe60X8FDZehb0Q" successor_AbstractAction="_ZC1_0tanEe60X8FDZehb0Q">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.null"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="null"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_ZC1_0tanEe60X8FDZehb0Q" entityName="Stop Action" predecessor_AbstractAction="_ZC1_0danEe60X8FDZehb0Q"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_ZDuJntanEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_service_StatementClient">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZDuJndanEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_service_StatementClient Provider" providedInterface__OperationProvidedRole="_ZDccwtanEe60X8FDZehb0Q"/>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_ZDuJoNanEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_service_CardClient">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZDuJn9anEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_service_CardClient Provider" providedInterface__OperationProvidedRole="_ZDccxNanEe60X8FDZehb0Q"/>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_ZDuJotanEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_MonitorDashboardApplication">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZDuJodanEe60X8FDZehb0Q" entityName="monitor-dashboard/ Provider" providedInterface__OperationProvidedRole="_ZDccwdanEe60X8FDZehb0Q"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_ZC3N_9anEe60X8FDZehb0Q" describedService__SEFF="_Y8Q2stanEe60X8FDZehb0Q">
      <steps_Behaviour xsi:type="seff:StartAction" id="_ZC3N_NanEe60X8FDZehb0Q" entityName="Start Action" successor_AbstractAction="_ZC3N_danEe60X8FDZehb0Q"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZC3N_danEe60X8FDZehb0Q" entityName="&quot;forward:/hystrix&quot;" predecessor_AbstractAction="_ZC3N_NanEe60X8FDZehb0Q" successor_AbstractAction="_ZC3N_tanEe60X8FDZehb0Q">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.STRING"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="STRING"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_ZC3N_tanEe60X8FDZehb0Q" entityName="Stop Action" predecessor_AbstractAction="_ZC3N_danEe60X8FDZehb0Q"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_ZDxz8danEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_api_CardServiceController">
    <assemblyContexts__ComposedStructure id="_ZDzCGtanEe60X8FDZehb0Q" encapsulatedComponent__AssemblyContext="_ZDccx9anEe60X8FDZehb0Q"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_ZD1eU9anEe60X8FDZehb0Q" innerProvidedRole_ProvidedDelegationConnector="_ZDccxtanEe60X8FDZehb0Q" outerProvidedRole_ProvidedDelegationConnector="_ZDxz8NanEe60X8FDZehb0Q" assemblyContext_ProvidedDelegationConnector="_ZDzCGtanEe60X8FDZehb0Q"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZDxz8NanEe60X8FDZehb0Q" entityName="card-service/api[*] Provider" providedInterface__OperationProvidedRole="_ZDccw9anEe60X8FDZehb0Q"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_ZDybAdanEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_service">
    <assemblyContexts__ComposedStructure id="_ZDzCFNanEe60X8FDZehb0Q" encapsulatedComponent__AssemblyContext="_ZDk_q9anEe60X8FDZehb0Q"/>
    <assemblyContexts__ComposedStructure id="_ZDzCFtanEe60X8FDZehb0Q" encapsulatedComponent__AssemblyContext="_ZDuJntanEe60X8FDZehb0Q"/>
    <assemblyContexts__ComposedStructure id="_ZDzCGNanEe60X8FDZehb0Q" encapsulatedComponent__AssemblyContext="_ZDuJoNanEe60X8FDZehb0Q"/>
    <connectors__ComposedStructure xsi:type="composition:AssemblyConnector" id="_ZD0QMNanEe60X8FDZehb0Q" requiringAssemblyContext_AssemblyConnector="_ZDzCFNanEe60X8FDZehb0Q" providingAssemblyContext_AssemblyConnector="_ZDzCFtanEe60X8FDZehb0Q" providedRole_AssemblyConnector="_ZDuJndanEe60X8FDZehb0Q" requiredRole_AssemblyConnector="_ZDk_qdanEe60X8FDZehb0Q"/>
    <connectors__ComposedStructure xsi:type="composition:AssemblyConnector" id="_ZD0QMdanEe60X8FDZehb0Q" requiringAssemblyContext_AssemblyConnector="_ZDzCFNanEe60X8FDZehb0Q" providingAssemblyContext_AssemblyConnector="_ZDzCGNanEe60X8FDZehb0Q" providedRole_AssemblyConnector="_ZDuJn9anEe60X8FDZehb0Q" requiredRole_AssemblyConnector="_ZDk_qtanEe60X8FDZehb0Q"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_ZD1eUdanEe60X8FDZehb0Q" innerProvidedRole_ProvidedDelegationConnector="_ZDk_qNanEe60X8FDZehb0Q" outerProvidedRole_ProvidedDelegationConnector="_ZDybANanEe60X8FDZehb0Q" assemblyContext_ProvidedDelegationConnector="_ZDzCFNanEe60X8FDZehb0Q"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZDybANanEe60X8FDZehb0Q" entityName="card-statement-composite/api/statement-by-card Provider" providedInterface__OperationProvidedRole="_ZDccxdanEe60X8FDZehb0Q"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_ZDybA9anEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_MonitorDashboardApplication">
    <assemblyContexts__ComposedStructure id="_ZDzCENanEe60X8FDZehb0Q" encapsulatedComponent__AssemblyContext="_ZDuJotanEe60X8FDZehb0Q"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_ZD1eUNanEe60X8FDZehb0Q" innerProvidedRole_ProvidedDelegationConnector="_ZDuJodanEe60X8FDZehb0Q" outerProvidedRole_ProvidedDelegationConnector="_ZDybAtanEe60X8FDZehb0Q" assemblyContext_ProvidedDelegationConnector="_ZDzCENanEe60X8FDZehb0Q"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZDybAtanEe60X8FDZehb0Q" entityName="monitor-dashboard/ Provider" providedInterface__OperationProvidedRole="_ZDccwdanEe60X8FDZehb0Q"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_ZDybBdanEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_api_StatementServiceController">
    <assemblyContexts__ComposedStructure id="_ZDzCEtanEe60X8FDZehb0Q" encapsulatedComponent__AssemblyContext="_ZDnb5danEe60X8FDZehb0Q"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_ZD1eUtanEe60X8FDZehb0Q" innerProvidedRole_ProvidedDelegationConnector="_ZDnb5NanEe60X8FDZehb0Q" outerProvidedRole_ProvidedDelegationConnector="_ZDybBNanEe60X8FDZehb0Q" assemblyContext_ProvidedDelegationConnector="_ZDzCEtanEe60X8FDZehb0Q"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZDybBNanEe60X8FDZehb0Q" entityName="statement-service/api[*] Provider" providedInterface__OperationProvidedRole="_ZDccwNanEe60X8FDZehb0Q"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_ZDccwNanEe60X8FDZehb0Q" entityName="statement-service/api[*]">
    <signatures__OperationInterface id="_Y8RdxtanEe60X8FDZehb0Q" entityName="statement-service/api/statement$2" returnType__OperationSignature="_Y8RdxdanEe60X8FDZehb0Q">
      <parameters__OperationSignature dataType__Parameter="_Y8KJANanEe60X8FDZehb0Q" parameterName="Long" modifier__Parameter="in"/>
    </signatures__OperationInterface>
    <signatures__OperationInterface id="_Y8SE0danEe60X8FDZehb0Q" entityName="statement-service/api/statements" returnType__OperationSignature="_Y8PBg9anEe60X8FDZehb0Q"/>
    <signatures__OperationInterface id="_Y8Rdw9anEe60X8FDZehb0Q" entityName="statement-service/api/statement" returnType__OperationSignature="_Y8PBg9anEe60X8FDZehb0Q">
      <parameters__OperationSignature dataType__Parameter="_Y8KJANanEe60X8FDZehb0Q" parameterName="Long" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_ZDccwdanEe60X8FDZehb0Q" entityName="monitor-dashboard/">
    <signatures__OperationInterface id="_Y8Q2stanEe60X8FDZehb0Q" entityName="monitor-dashboard/">
      <returnType__OperationSignature xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_ZDccwtanEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_service_StatementClient"/>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_ZDccw9anEe60X8FDZehb0Q" entityName="card-service/api[*]">
    <signatures__OperationInterface id="_Y8PBhNanEe60X8FDZehb0Q" entityName="card-service/api/cards" returnType__OperationSignature="_Y8PBg9anEe60X8FDZehb0Q"/>
    <signatures__OperationInterface id="_Y8PBgdanEe60X8FDZehb0Q" entityName="card-service/api/card" returnType__OperationSignature="_Y8PBgNanEe60X8FDZehb0Q">
      <parameters__OperationSignature dataType__Parameter="_Y8KJANanEe60X8FDZehb0Q" parameterName="Long" modifier__Parameter="in"/>
    </signatures__OperationInterface>
    <signatures__OperationInterface id="_Y8QPodanEe60X8FDZehb0Q" entityName="card-service/api/new-card" returnType__OperationSignature="_Y8QPoNanEe60X8FDZehb0Q">
      <parameters__OperationSignature dataType__Parameter="_Y8PBgNanEe60X8FDZehb0Q" parameterName="Card" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_ZDccxNanEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_service_CardClient"/>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_ZDccxdanEe60X8FDZehb0Q" entityName="card-statement-composite/api/statement-by-card">
    <signatures__OperationInterface id="_Y8L-MNanEe60X8FDZehb0Q" entityName="card-statement-composite/api/statement-by-card" returnType__OperationSignature="_Y8LXINanEe60X8FDZehb0Q">
      <parameters__OperationSignature dataType__Parameter="_Y8KJANanEe60X8FDZehb0Q" parameterName="Long" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_Y8KJANanEe60X8FDZehb0Q" entityName="java_lang_Long"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_Y8LXINanEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_service_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_Y8PBgNanEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_model_Card"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_Y8PBg9anEe60X8FDZehb0Q" entityName="java_util_List"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_Y8QPoNanEe60X8FDZehb0Q" entityName="Void"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_Y8RdxdanEe60X8FDZehb0Q" entityName="com_spring_netflix_oss_microservices_model_Statement"/>
</repository:Repository>
