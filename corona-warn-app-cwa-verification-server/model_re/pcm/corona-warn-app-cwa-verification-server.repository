<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_GEz7fO8EEe65MbHZfMi_dA">
  <components__Repository xsi:type="repository:BasicComponent" id="_GEi1te8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_GEi1t-8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_GEi1tu8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_GEi1tO8EEe65MbHZfMi_dA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_GDj-Qu8EEe65MbHZfMi_dA" describedService__SEFF="_F858oe8EEe65MbHZfMi_dA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_GDg69O8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDhiAO8EEe65MbHZfMi_dA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_GDhiAO8EEe65MbHZfMi_dA" entityName="If Branch" predecessor_AbstractAction="_GDg69O8EEe65MbHZfMi_dA" successor_AbstractAction="_GDhiAe8EEe65MbHZfMi_dA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDg6-O8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_GDg6-u8EEe65MbHZfMi_dA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_GDg69e8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDg69u8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_GDg69u8EEe65MbHZfMi_dA" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_GDg69e8EEe65MbHZfMi_dA" successor_AbstractAction="_GDg69-8EEe65MbHZfMi_dA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_GDg69-8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDg69u8EEe65MbHZfMi_dA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_GDhiAe8EEe65MbHZfMi_dA" entityName="stopWatch.start()" predecessor_AbstractAction="_GDhiAO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDjXQO8EEe65MbHZfMi_dA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_GDjXQO8EEe65MbHZfMi_dA" entityName="If Branch" predecessor_AbstractAction="_GDhiAe8EEe65MbHZfMi_dA" successor_AbstractAction="_GDj-QO8EEe65MbHZfMi_dA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDjXPe8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_GDjXP-8EEe65MbHZfMi_dA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_GDhiAu8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDjXO-8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_GDjXO-8EEe65MbHZfMi_dA" entityName="Switch Branch" predecessor_AbstractAction="_GDhiAu8EEe65MbHZfMi_dA" successor_AbstractAction="_GDjXPO8EEe65MbHZfMi_dA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDiwIu8EEe65MbHZfMi_dA">
                <branchBehaviour_BranchTransition id="_GDiwJO8EEe65MbHZfMi_dA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_GDhiA-8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDhiBO8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDhiBO8EEe65MbHZfMi_dA" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_GDhiA-8EEe65MbHZfMi_dA" successor_AbstractAction="_GDhiEO8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_GDhiEO8EEe65MbHZfMi_dA" entityName="If Branch" predecessor_AbstractAction="_GDhiBO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDiJEO8EEe65MbHZfMi_dA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDhiDe8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_GDhiD-8EEe65MbHZfMi_dA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_GDhiBe8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDhiC-8EEe65MbHZfMi_dA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_GDhiC-8EEe65MbHZfMi_dA" entityName="If Branch" predecessor_AbstractAction="_GDhiBe8EEe65MbHZfMi_dA" successor_AbstractAction="_GDhiDO8EEe65MbHZfMi_dA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDhiCO8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_GDhiCu8EEe65MbHZfMi_dA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_GDhiBu8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDhiB-8EEe65MbHZfMi_dA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_GDhiB-8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDhiBu8EEe65MbHZfMi_dA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_GDhiDO8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDhiC-8EEe65MbHZfMi_dA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDiJEO8EEe65MbHZfMi_dA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_GDhiEO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDiJEe8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDiJEe8EEe65MbHZfMi_dA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_GDiJEO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDiJEu8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDiJEu8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDiJEe8EEe65MbHZfMi_dA" successor_AbstractAction="_GDiJE-8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDiJE-8EEe65MbHZfMi_dA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_GDiJEu8EEe65MbHZfMi_dA" successor_AbstractAction="_GDiJFO8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDiJFO8EEe65MbHZfMi_dA" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_GDiJE-8EEe65MbHZfMi_dA" successor_AbstractAction="_GDiJFe8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_GDiJFe8EEe65MbHZfMi_dA" entityName="deferredResult" predecessor_AbstractAction="_GDiJFO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDiJFu8EEe65MbHZfMi_dA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDiJFu8EEe65MbHZfMi_dA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_GDiJFe8EEe65MbHZfMi_dA" successor_AbstractAction="_GDiJF-8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDiJF-8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDiJFu8EEe65MbHZfMi_dA" successor_AbstractAction="_GDiJGO8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDiJGO8EEe65MbHZfMi_dA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_GDiJF-8EEe65MbHZfMi_dA" successor_AbstractAction="_GDiJGe8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDiJGe8EEe65MbHZfMi_dA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_GDiJGO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDiJGu8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_GDiJGu8EEe65MbHZfMi_dA" entityName="deferredResult" predecessor_AbstractAction="_GDiJGe8EEe65MbHZfMi_dA" successor_AbstractAction="_GDiwIO8EEe65MbHZfMi_dA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDiwIO8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDiJGu8EEe65MbHZfMi_dA" successor_AbstractAction="_GDiwIe8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_GDiwIe8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDiwIO8EEe65MbHZfMi_dA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDjXMu8EEe65MbHZfMi_dA">
                <branchBehaviour_BranchTransition id="_GDjXNO8EEe65MbHZfMi_dA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_GDiwJe8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDiwJu8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDiwJu8EEe65MbHZfMi_dA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_GDiwJe8EEe65MbHZfMi_dA" successor_AbstractAction="_GDiwJ-8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDiwJ-8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDiwJu8EEe65MbHZfMi_dA" successor_AbstractAction="_GDiwKO8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDiwKO8EEe65MbHZfMi_dA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_GDiwJ-8EEe65MbHZfMi_dA" successor_AbstractAction="_GDiwKe8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDiwKe8EEe65MbHZfMi_dA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_GDiwKO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDiwKu8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_GDiwKu8EEe65MbHZfMi_dA" entityName="deferredResult" predecessor_AbstractAction="_GDiwKe8EEe65MbHZfMi_dA" successor_AbstractAction="_GDjXMO8EEe65MbHZfMi_dA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDjXMO8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDiwKu8EEe65MbHZfMi_dA" successor_AbstractAction="_GDjXMe8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_GDjXMe8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDjXMO8EEe65MbHZfMi_dA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDjXOO8EEe65MbHZfMi_dA">
                <branchBehaviour_BranchTransition id="_GDjXOu8EEe65MbHZfMi_dA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_GDjXNe8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDjXNu8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDjXNu8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDjXNe8EEe65MbHZfMi_dA" successor_AbstractAction="_GDjXN-8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_GDjXN-8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDjXNu8EEe65MbHZfMi_dA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_GDjXPO8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDjXO-8EEe65MbHZfMi_dA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_GDj-QO8EEe65MbHZfMi_dA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_GDjXQO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDj-Qe8EEe65MbHZfMi_dA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_GDj-Qe8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDj-QO8EEe65MbHZfMi_dA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_GEl5BO8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_GEl5A-8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_GEi1se8EEe65MbHZfMi_dA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_GDdQke8EEe65MbHZfMi_dA" describedService__SEFF="_F86jsO8EEe65MbHZfMi_dA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_GDaNSe8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDa0UO8EEe65MbHZfMi_dA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_GDa0UO8EEe65MbHZfMi_dA" entityName="If Branch" predecessor_AbstractAction="_GDaNSe8EEe65MbHZfMi_dA" successor_AbstractAction="_GDa0Ue8EEe65MbHZfMi_dA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDaNTe8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_GDaNT-8EEe65MbHZfMi_dA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_GDaNSu8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDaNS-8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_GDaNS-8EEe65MbHZfMi_dA" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_GDaNSu8EEe65MbHZfMi_dA" successor_AbstractAction="_GDaNTO8EEe65MbHZfMi_dA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController.generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController.generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_GDaNTO8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDaNS-8EEe65MbHZfMi_dA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_GDa0Ue8EEe65MbHZfMi_dA" entityName="stopWatch.start()" predecessor_AbstractAction="_GDa0UO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDcpju8EEe65MbHZfMi_dA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_GDcpju8EEe65MbHZfMi_dA" entityName="Switch Branch" predecessor_AbstractAction="_GDa0Ue8EEe65MbHZfMi_dA" successor_AbstractAction="_GDdQkO8EEe65MbHZfMi_dA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDbba-8EEe65MbHZfMi_dA">
          <branchBehaviour_BranchTransition id="_GDcCcO8EEe65MbHZfMi_dA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_GDa0Uu8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDa0U-8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_GDa0U-8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDa0Uu8EEe65MbHZfMi_dA" successor_AbstractAction="_GDa0VO8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_GDa0VO8EEe65MbHZfMi_dA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_GDa0U-8EEe65MbHZfMi_dA" successor_AbstractAction="_GDa0Ve8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_GDa0Ve8EEe65MbHZfMi_dA" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_GDa0VO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDa0Vu8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_GDa0Vu8EEe65MbHZfMi_dA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_GDa0Ve8EEe65MbHZfMi_dA" successor_AbstractAction="_GDa0V-8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_GDa0V-8EEe65MbHZfMi_dA" entityName="deferredResult" predecessor_AbstractAction="_GDa0Vu8EEe65MbHZfMi_dA" successor_AbstractAction="_GDbbZ-8EEe65MbHZfMi_dA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_GDbbZ-8EEe65MbHZfMi_dA" entityName="If Branch" predecessor_AbstractAction="_GDa0V-8EEe65MbHZfMi_dA" successor_AbstractAction="_GDbbaO8EEe65MbHZfMi_dA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDbbZO8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_GDbbZu8EEe65MbHZfMi_dA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_GDa0WO8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDa0We8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDa0We8EEe65MbHZfMi_dA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_GDa0WO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDa0Wu8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDa0Wu8EEe65MbHZfMi_dA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_GDa0We8EEe65MbHZfMi_dA" successor_AbstractAction="_GDa0W-8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDa0W-8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDa0Wu8EEe65MbHZfMi_dA" successor_AbstractAction="_GDa0XO8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDa0XO8EEe65MbHZfMi_dA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_GDa0W-8EEe65MbHZfMi_dA" successor_AbstractAction="_GDbbYO8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDbbYO8EEe65MbHZfMi_dA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_GDa0XO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDbbYe8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDbbYe8EEe65MbHZfMi_dA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_GDbbYO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDbbYu8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_GDbbYu8EEe65MbHZfMi_dA" entityName="deferredResult" predecessor_AbstractAction="_GDbbYe8EEe65MbHZfMi_dA" successor_AbstractAction="_GDbbY-8EEe65MbHZfMi_dA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_GDbbY-8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDbbYu8EEe65MbHZfMi_dA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_GDbbaO8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDbbZ-8EEe65MbHZfMi_dA" successor_AbstractAction="_GDbbae8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_GDbbae8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDbbaO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDbbau8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_GDbbau8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDbbae8EEe65MbHZfMi_dA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDcphe8EEe65MbHZfMi_dA">
          <branchBehaviour_BranchTransition id="_GDcph-8EEe65MbHZfMi_dA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_GDcCce8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDcpge8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_GDcpge8EEe65MbHZfMi_dA" entityName="If Branch" predecessor_AbstractAction="_GDcCce8EEe65MbHZfMi_dA" successor_AbstractAction="_GDcpgu8EEe65MbHZfMi_dA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDcCe-8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_GDcpgO8EEe65MbHZfMi_dA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_GDcCcu8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDcCc-8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDcCc-8EEe65MbHZfMi_dA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_GDcCcu8EEe65MbHZfMi_dA" successor_AbstractAction="_GDcCdO8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDcCdO8EEe65MbHZfMi_dA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_GDcCc-8EEe65MbHZfMi_dA" successor_AbstractAction="_GDcCde8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDcCde8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDcCdO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDcCdu8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDcCdu8EEe65MbHZfMi_dA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_GDcCde8EEe65MbHZfMi_dA" successor_AbstractAction="_GDcCd-8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDcCd-8EEe65MbHZfMi_dA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_GDcCdu8EEe65MbHZfMi_dA" successor_AbstractAction="_GDcCeO8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDcCeO8EEe65MbHZfMi_dA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_GDcCd-8EEe65MbHZfMi_dA" successor_AbstractAction="_GDcCee8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_GDcCee8EEe65MbHZfMi_dA" entityName="deferredResult" predecessor_AbstractAction="_GDcCeO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDcCeu8EEe65MbHZfMi_dA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_GDcCeu8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDcCee8EEe65MbHZfMi_dA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_GDcpgu8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDcpge8EEe65MbHZfMi_dA" successor_AbstractAction="_GDcpg-8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_GDcpg-8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDcpgu8EEe65MbHZfMi_dA" successor_AbstractAction="_GDcphO8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_GDcphO8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDcpg-8EEe65MbHZfMi_dA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDcpi-8EEe65MbHZfMi_dA">
          <branchBehaviour_BranchTransition id="_GDcpje8EEe65MbHZfMi_dA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_GDcpiO8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDcpie8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_GDcpie8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDcpiO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDcpiu8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_GDcpiu8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDcpie8EEe65MbHZfMi_dA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_GDdQkO8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDcpju8EEe65MbHZfMi_dA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_GEoVTO8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_GEoVSu8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_GEi1su8EEe65MbHZfMi_dA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_GEoVS-8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_GEiOqu8EEe65MbHZfMi_dA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_GDgT6-8EEe65MbHZfMi_dA" describedService__SEFF="_F87Kw-8EEe65MbHZfMi_dA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_GDfFyu8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDfs1O8EEe65MbHZfMi_dA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_GDfs1O8EEe65MbHZfMi_dA" entityName="If Branch" predecessor_AbstractAction="_GDfFyu8EEe65MbHZfMi_dA" successor_AbstractAction="_GDgT6e8EEe65MbHZfMi_dA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDfFzu8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_GDfF0O8EEe65MbHZfMi_dA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_GDfFy-8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDfFzO8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_GDfFzO8EEe65MbHZfMi_dA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_GDfFy-8EEe65MbHZfMi_dA" successor_AbstractAction="_GDfFze8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_GDfFze8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDfFzO8EEe65MbHZfMi_dA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDfs0e8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_GDfs0-8EEe65MbHZfMi_dA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_GDfF0e8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDfF0u8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_GDfF0u8EEe65MbHZfMi_dA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_GDfF0e8EEe65MbHZfMi_dA" successor_AbstractAction="_GDfs0O8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_GDfs0O8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDfF0u8EEe65MbHZfMi_dA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_GDgT6e8EEe65MbHZfMi_dA" entityName="If Branch" predecessor_AbstractAction="_GDfs1O8EEe65MbHZfMi_dA" successor_AbstractAction="_GDgT6u8EEe65MbHZfMi_dA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDgT5u8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_GDgT6O8EEe65MbHZfMi_dA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_GDfs1e8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDgT5O8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_GDgT5O8EEe65MbHZfMi_dA" entityName="If Branch" predecessor_AbstractAction="_GDfs1e8EEe65MbHZfMi_dA" successor_AbstractAction="_GDgT5e8EEe65MbHZfMi_dA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDfs2u8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_GDfs3O8EEe65MbHZfMi_dA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_GDfs1u8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDfs1-8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDfs1-8EEe65MbHZfMi_dA" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_GDfs1u8EEe65MbHZfMi_dA" successor_AbstractAction="_GDfs2O8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_GDfs2O8EEe65MbHZfMi_dA" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_GDfs1-8EEe65MbHZfMi_dA" successor_AbstractAction="_GDfs2e8EEe65MbHZfMi_dA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_GDfs2e8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDfs2O8EEe65MbHZfMi_dA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDgT4e8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_GDgT4-8EEe65MbHZfMi_dA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_GDfs3e8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDgT4O8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_GDgT4O8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDfs3e8EEe65MbHZfMi_dA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_GDgT5e8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDgT5O8EEe65MbHZfMi_dA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_GDgT6u8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDgT6e8EEe65MbHZfMi_dA"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_GDg68u8EEe65MbHZfMi_dA" describedService__SEFF="_F87x0e8EEe65MbHZfMi_dA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_GDgT7e8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDg68O8EEe65MbHZfMi_dA"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_GDg68O8EEe65MbHZfMi_dA" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_GDgT7e8EEe65MbHZfMi_dA" successor_AbstractAction="_GDg68e8EEe65MbHZfMi_dA">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_GDg68e8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDg68O8EEe65MbHZfMi_dA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_GEtNwe8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_GEtNwO8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_GEi1s-8EEe65MbHZfMi_dA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_GDaNR-8EEe65MbHZfMi_dA" describedService__SEFF="_F8GEUe8EEe65MbHZfMi_dA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_F9bhEe8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDaNRO8EEe65MbHZfMi_dA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_GDaNRO8EEe65MbHZfMi_dA" entityName="If Branch" predecessor_AbstractAction="_F9bhEe8EEe65MbHZfMi_dA" successor_AbstractAction="_GDaNRe8EEe65MbHZfMi_dA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDaNQe8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_GDaNQ-8EEe65MbHZfMi_dA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_F9dWQO8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDZmQO8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_GDZmQO8EEe65MbHZfMi_dA" entityName="Switch Branch" predecessor_AbstractAction="_F9dWQO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDaNQO8EEe65MbHZfMi_dA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDZmMu8EEe65MbHZfMi_dA">
                <branchBehaviour_BranchTransition id="_GDZmNO8EEe65MbHZfMi_dA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_F9d9UO8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDV71e8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_GDV71e8EEe65MbHZfMi_dA" entityName="If Branch" predecessor_AbstractAction="_F9d9UO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDWi4O8EEe65MbHZfMi_dA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDV70u8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_GDV71O8EEe65MbHZfMi_dA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_F9d9Ue8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDV70O8EEe65MbHZfMi_dA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_GDV70O8EEe65MbHZfMi_dA" entityName="If Branch" predecessor_AbstractAction="_F9d9Ue8EEe65MbHZfMi_dA" successor_AbstractAction="_GDV70e8EEe65MbHZfMi_dA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_F9ekYO8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_F9fLcO8EEe65MbHZfMi_dA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_F9d9Uu8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_F9d9U-8EEe65MbHZfMi_dA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_F9d9U-8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_F9d9Uu8EEe65MbHZfMi_dA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_GDV70e8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDV70O8EEe65MbHZfMi_dA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDWi4O8EEe65MbHZfMi_dA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_GDV71e8EEe65MbHZfMi_dA" successor_AbstractAction="_GDWi4e8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDWi4e8EEe65MbHZfMi_dA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_GDWi4O8EEe65MbHZfMi_dA" successor_AbstractAction="_GDY_IO8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_GDY_IO8EEe65MbHZfMi_dA" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_GDWi4e8EEe65MbHZfMi_dA" successor_AbstractAction="_GDZmMO8EEe65MbHZfMi_dA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDZmMO8EEe65MbHZfMi_dA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_GDY_IO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDZmMe8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_GDZmMe8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDZmMO8EEe65MbHZfMi_dA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDZmOO8EEe65MbHZfMi_dA">
                <branchBehaviour_BranchTransition id="_GDZmOu8EEe65MbHZfMi_dA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_GDZmNe8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDZmNu8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDZmNu8EEe65MbHZfMi_dA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_GDZmNe8EEe65MbHZfMi_dA" successor_AbstractAction="_GDZmN-8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_GDZmN-8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDZmNu8EEe65MbHZfMi_dA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDZmPe8EEe65MbHZfMi_dA">
                <branchBehaviour_BranchTransition id="_GDZmP-8EEe65MbHZfMi_dA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_GDZmO-8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDZmPO8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_GDZmPO8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDZmO-8EEe65MbHZfMi_dA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_GDaNQO8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDZmQO8EEe65MbHZfMi_dA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_GDaNRe8EEe65MbHZfMi_dA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_GDaNRO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDaNRu8EEe65MbHZfMi_dA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_GDaNRu8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDaNRe8EEe65MbHZfMi_dA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_GEvC_u8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_GEvC_e8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_GEi1sO8EEe65MbHZfMi_dA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_GDfFyO8EEe65MbHZfMi_dA" describedService__SEFF="_F86js-8EEe65MbHZfMi_dA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_GDdQk-8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDdQmu8EEe65MbHZfMi_dA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_GDdQmu8EEe65MbHZfMi_dA" entityName="If Branch" predecessor_AbstractAction="_GDdQk-8EEe65MbHZfMi_dA" successor_AbstractAction="_GDdQm-8EEe65MbHZfMi_dA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDdQl-8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_GDdQme8EEe65MbHZfMi_dA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_GDdQlO8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDdQle8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_GDdQle8EEe65MbHZfMi_dA" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_GDdQlO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDdQlu8EEe65MbHZfMi_dA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_GDdQlu8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDdQle8EEe65MbHZfMi_dA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_GDdQm-8EEe65MbHZfMi_dA" entityName="stopWatch.start()" predecessor_AbstractAction="_GDdQmu8EEe65MbHZfMi_dA" successor_AbstractAction="_GDfFxu8EEe65MbHZfMi_dA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_GDfFxu8EEe65MbHZfMi_dA" entityName="If Branch" predecessor_AbstractAction="_GDdQm-8EEe65MbHZfMi_dA" successor_AbstractAction="_GDfFx-8EEe65MbHZfMi_dA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDfFw-8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_GDfFxe8EEe65MbHZfMi_dA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_GDdQnO8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDfFwe8EEe65MbHZfMi_dA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_GDfFwe8EEe65MbHZfMi_dA" entityName="If Branch" predecessor_AbstractAction="_GDdQnO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDfFwu8EEe65MbHZfMi_dA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDeev-8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_GDfFwO8EEe65MbHZfMi_dA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_GDdQne8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDeete8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_GDeete8EEe65MbHZfMi_dA" entityName="Switch Branch" predecessor_AbstractAction="_GDdQne8EEe65MbHZfMi_dA" successor_AbstractAction="_GDeetu8EEe65MbHZfMi_dA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDd3qO8EEe65MbHZfMi_dA">
                      <branchBehaviour_BranchTransition id="_GDd3qu8EEe65MbHZfMi_dA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_GDdQnu8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDd3pe8EEe65MbHZfMi_dA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_GDd3pe8EEe65MbHZfMi_dA" entityName="If Branch" predecessor_AbstractAction="_GDdQnu8EEe65MbHZfMi_dA" successor_AbstractAction="_GDd3pu8EEe65MbHZfMi_dA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDd3ou8EEe65MbHZfMi_dA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_GDd3pO8EEe65MbHZfMi_dA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_GDdQn-8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDd3oO8EEe65MbHZfMi_dA"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_GDd3oO8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDdQn-8EEe65MbHZfMi_dA" successor_AbstractAction="_GDd3oe8EEe65MbHZfMi_dA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_GDd3oe8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDd3oO8EEe65MbHZfMi_dA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_GDd3pu8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDd3pe8EEe65MbHZfMi_dA" successor_AbstractAction="_GDd3p-8EEe65MbHZfMi_dA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_GDd3p-8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDd3pu8EEe65MbHZfMi_dA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDd3ru8EEe65MbHZfMi_dA">
                      <branchBehaviour_BranchTransition id="_GDd3sO8EEe65MbHZfMi_dA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_GDd3q-8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDd3rO8EEe65MbHZfMi_dA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_GDd3rO8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDd3q-8EEe65MbHZfMi_dA" successor_AbstractAction="_GDd3re8EEe65MbHZfMi_dA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_GDd3re8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDd3rO8EEe65MbHZfMi_dA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_GDeesu8EEe65MbHZfMi_dA">
                      <branchBehaviour_BranchTransition id="_GDeetO8EEe65MbHZfMi_dA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_GDd3se8EEe65MbHZfMi_dA" entityName="Start Action" successor_AbstractAction="_GDeesO8EEe65MbHZfMi_dA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_GDeesO8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDd3se8EEe65MbHZfMi_dA" successor_AbstractAction="_GDeese8EEe65MbHZfMi_dA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_GDeese8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDeesO8EEe65MbHZfMi_dA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDeetu8EEe65MbHZfMi_dA" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_GDeete8EEe65MbHZfMi_dA" successor_AbstractAction="_GDeet-8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDeet-8EEe65MbHZfMi_dA" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_GDeetu8EEe65MbHZfMi_dA" successor_AbstractAction="_GDeeuO8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDeeuO8EEe65MbHZfMi_dA" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_GDeet-8EEe65MbHZfMi_dA" successor_AbstractAction="_GDeeue8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDeeue8EEe65MbHZfMi_dA" entityName="stopWatch.stop()" predecessor_AbstractAction="_GDeeuO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDeeuu8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDeeuu8EEe65MbHZfMi_dA" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_GDeeue8EEe65MbHZfMi_dA" successor_AbstractAction="_GDeeu-8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDeeu-8EEe65MbHZfMi_dA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_GDeeuu8EEe65MbHZfMi_dA" successor_AbstractAction="_GDeevO8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_GDeevO8EEe65MbHZfMi_dA" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_GDeeu-8EEe65MbHZfMi_dA" successor_AbstractAction="_GDeeve8EEe65MbHZfMi_dA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_GDeeve8EEe65MbHZfMi_dA" entityName="deferredResult" predecessor_AbstractAction="_GDeevO8EEe65MbHZfMi_dA" successor_AbstractAction="_GDeevu8EEe65MbHZfMi_dA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_GDeevu8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDeeve8EEe65MbHZfMi_dA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_GDfFwu8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDfFwe8EEe65MbHZfMi_dA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_GDfFx-8EEe65MbHZfMi_dA" entityName="Stop Action" predecessor_AbstractAction="_GDfFxu8EEe65MbHZfMi_dA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_GEzUYe8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_GEz7eO8EEe65MbHZfMi_dA" encapsulatedComponent__AssemblyContext="_GEvC_u8EEe65MbHZfMi_dA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_GE1JkO8EEe65MbHZfMi_dA" innerProvidedRole_ProvidedDelegationConnector="_GEvC_e8EEe65MbHZfMi_dA" outerProvidedRole_ProvidedDelegationConnector="_GEzUYO8EEe65MbHZfMi_dA" assemblyContext_ProvidedDelegationConnector="_GEz7eO8EEe65MbHZfMi_dA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_GEzUYO8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_GEi1sO8EEe65MbHZfMi_dA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_GEzUZO8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_GEz7dO8EEe65MbHZfMi_dA" encapsulatedComponent__AssemblyContext="_GEoVTO8EEe65MbHZfMi_dA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_GE0ige8EEe65MbHZfMi_dA" innerProvidedRole_ProvidedDelegationConnector="_GEoVS-8EEe65MbHZfMi_dA" outerProvidedRole_ProvidedDelegationConnector="_GEzUYu8EEe65MbHZfMi_dA" assemblyContext_ProvidedDelegationConnector="_GEz7dO8EEe65MbHZfMi_dA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_GE1Jke8EEe65MbHZfMi_dA" innerProvidedRole_ProvidedDelegationConnector="_GEoVSu8EEe65MbHZfMi_dA" outerProvidedRole_ProvidedDelegationConnector="_GEzUY-8EEe65MbHZfMi_dA" assemblyContext_ProvidedDelegationConnector="_GEz7dO8EEe65MbHZfMi_dA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_GEzUYu8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_GEiOqu8EEe65MbHZfMi_dA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_GEzUY-8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_GEi1su8EEe65MbHZfMi_dA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_GEzUZu8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_GEz7eu8EEe65MbHZfMi_dA" encapsulatedComponent__AssemblyContext="_GEi1t-8EEe65MbHZfMi_dA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_GE0igO8EEe65MbHZfMi_dA" innerProvidedRole_ProvidedDelegationConnector="_GEi1tu8EEe65MbHZfMi_dA" outerProvidedRole_ProvidedDelegationConnector="_GEzUZe8EEe65MbHZfMi_dA" assemblyContext_ProvidedDelegationConnector="_GEz7eu8EEe65MbHZfMi_dA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_GEzUZe8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_GEi1tO8EEe65MbHZfMi_dA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_GEzUaO8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_GEz7du8EEe65MbHZfMi_dA" encapsulatedComponent__AssemblyContext="_GEl5BO8EEe65MbHZfMi_dA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_GE0igu8EEe65MbHZfMi_dA" innerProvidedRole_ProvidedDelegationConnector="_GEl5A-8EEe65MbHZfMi_dA" outerProvidedRole_ProvidedDelegationConnector="_GEzUZ-8EEe65MbHZfMi_dA" assemblyContext_ProvidedDelegationConnector="_GEz7du8EEe65MbHZfMi_dA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_GEzUZ-8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_GEi1se8EEe65MbHZfMi_dA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_GEzUae8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_GEz7cu8EEe65MbHZfMi_dA" encapsulatedComponent__AssemblyContext="_GEi1te8EEe65MbHZfMi_dA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_GEzUa-8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_GEz7cO8EEe65MbHZfMi_dA" encapsulatedComponent__AssemblyContext="_GEtNwe8EEe65MbHZfMi_dA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_GE1Jku8EEe65MbHZfMi_dA" innerProvidedRole_ProvidedDelegationConnector="_GEtNwO8EEe65MbHZfMi_dA" outerProvidedRole_ProvidedDelegationConnector="_GEzUau8EEe65MbHZfMi_dA" assemblyContext_ProvidedDelegationConnector="_GEz7cO8EEe65MbHZfMi_dA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_GEzUau8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_GEi1s-8EEe65MbHZfMi_dA"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_GEiOqu8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_F87x0e8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_F8GEUO8EEe65MbHZfMi_dA">
      <parameters__OperationSignature dataType__Parameter="_F87x0O8EEe65MbHZfMi_dA" parameterName="Tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_GEi1sO8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_F86js-8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_F858oO8EEe65MbHZfMi_dA">
      <parameters__OperationSignature dataType__Parameter="_F8E2MO8EEe65MbHZfMi_dA" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_GEi1se8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_F86jsO8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_F858oO8EEe65MbHZfMi_dA">
      <parameters__OperationSignature dataType__Parameter="_F858pO8EEe65MbHZfMi_dA" parameterName="RegistrationTokenRequest" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_GEi1su8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_F87Kw-8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_F8GEUO8EEe65MbHZfMi_dA">
      <parameters__OperationSignature dataType__Parameter="_F87Kwe8EEe65MbHZfMi_dA" parameterName="AuthorizationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_F87Kwu8EEe65MbHZfMi_dA" parameterName="TeleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_GEi1s-8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_F8GEUe8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_F8GEUO8EEe65MbHZfMi_dA">
      <parameters__OperationSignature dataType__Parameter="_F8E2MO8EEe65MbHZfMi_dA" parameterName="RegistrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_GEi1tO8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_F858oe8EEe65MbHZfMi_dA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_F858oO8EEe65MbHZfMi_dA">
      <parameters__OperationSignature dataType__Parameter="_F8E2MO8EEe65MbHZfMi_dA" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_F8E2MO8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_F8GEUO8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_F858oO8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_F858pO8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_F87Kwe8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_F87Kwu8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_F87x0O8EEe65MbHZfMi_dA" entityName="app_coronawarn_verification_model_Tan"/>
</repository:Repository>
