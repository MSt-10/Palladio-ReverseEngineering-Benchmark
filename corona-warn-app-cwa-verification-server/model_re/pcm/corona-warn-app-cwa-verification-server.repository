<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_0ArmDD_0Ee-FrctyGezvmw">
  <components__Repository xsi:type="repository:BasicComponent" id="_0AbHVz_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0AbHVj_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_0AbHVD_0Ee-FrctyGezvmw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_z_xAEz_0Ee-FrctyGezvmw" describedService__SEFF="_z5D7ED_0Ee-FrctyGezvmw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_z_vx7j_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_xAED_0Ee-FrctyGezvmw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_z_xAED_0Ee-FrctyGezvmw" entityName="If Branch" predecessor_AbstractAction="_z_vx7j_0Ee-FrctyGezvmw" successor_AbstractAction="_z_xAET_0Ee-FrctyGezvmw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_xADT_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_z_xADz_0Ee-FrctyGezvmw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_z_wY8D_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_xACz_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_z_xACz_0Ee-FrctyGezvmw" entityName="Switch Branch" predecessor_AbstractAction="_z_wY8D_0Ee-FrctyGezvmw" successor_AbstractAction="_z_xADD_0Ee-FrctyGezvmw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_wZAz_0Ee-FrctyGezvmw">
                <branchBehaviour_BranchTransition id="_z_wZBT_0Ee-FrctyGezvmw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_z_wY8T_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_wY_T_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_z_wY_T_0Ee-FrctyGezvmw" entityName="If Branch" predecessor_AbstractAction="_z_wY8T_0Ee-FrctyGezvmw" successor_AbstractAction="_z_wY_j_0Ee-FrctyGezvmw">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_wY-j_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_z_wY_D_0Ee-FrctyGezvmw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_z_wY8j_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_wY-D_0Ee-FrctyGezvmw"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_z_wY-D_0Ee-FrctyGezvmw" entityName="If Branch" predecessor_AbstractAction="_z_wY8j_0Ee-FrctyGezvmw" successor_AbstractAction="_z_wY-T_0Ee-FrctyGezvmw">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_wY9T_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_z_wY9z_0Ee-FrctyGezvmw">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_z_wY8z_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_wY9D_0Ee-FrctyGezvmw"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_z_wY9D_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_wY8z_0Ee-FrctyGezvmw"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_z_wY-T_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_wY-D_0Ee-FrctyGezvmw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_wY_j_0Ee-FrctyGezvmw" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_z_wY_T_0Ee-FrctyGezvmw" successor_AbstractAction="_z_wY_z_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_wY_z_0Ee-FrctyGezvmw" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_z_wY_j_0Ee-FrctyGezvmw" successor_AbstractAction="_z_wZAD_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_z_wZAD_0Ee-FrctyGezvmw" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_z_wY_z_0Ee-FrctyGezvmw" successor_AbstractAction="_z_wZAT_0Ee-FrctyGezvmw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_wZAT_0Ee-FrctyGezvmw" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_z_wZAD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_wZAj_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_z_wZAj_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_wZAT_0Ee-FrctyGezvmw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_xAAz_0Ee-FrctyGezvmw">
                <branchBehaviour_BranchTransition id="_z_xABT_0Ee-FrctyGezvmw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_z_xAAD_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_xAAT_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_xAAT_0Ee-FrctyGezvmw" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_z_xAAD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_xAAj_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_z_xAAj_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_xAAT_0Ee-FrctyGezvmw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_xACD_0Ee-FrctyGezvmw">
                <branchBehaviour_BranchTransition id="_z_xACj_0Ee-FrctyGezvmw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_z_xABj_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_xABz_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_z_xABz_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_xABj_0Ee-FrctyGezvmw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_z_xADD_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_xACz_0Ee-FrctyGezvmw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_z_xAET_0Ee-FrctyGezvmw" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_z_xAED_0Ee-FrctyGezvmw" successor_AbstractAction="_z_xAEj_0Ee-FrctyGezvmw"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_z_xAEj_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_xAET_0Ee-FrctyGezvmw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_0AeKpz_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_0AeKqj_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0AeKqD_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_0AbHUD_0Ee-FrctyGezvmw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0AeKqT_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_0AbHVT_0Ee-FrctyGezvmw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_z_vx7D_0Ee-FrctyGezvmw" describedService__SEFF="_z50JBj_0Ee-FrctyGezvmw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_z_vx6T_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_vx6j_0Ee-FrctyGezvmw"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_z_vx6j_0Ee-FrctyGezvmw" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_z_vx6T_0Ee-FrctyGezvmw" successor_AbstractAction="_z_vx6z_0Ee-FrctyGezvmw">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_z_vx6z_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_vx6j_0Ee-FrctyGezvmw"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_z_vx5z_0Ee-FrctyGezvmw" describedService__SEFF="_z50JAj_0Ee-FrctyGezvmw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_z_ujzT_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_vK1z_0Ee-FrctyGezvmw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_z_vK1z_0Ee-FrctyGezvmw" entityName="If Branch" predecessor_AbstractAction="_z_ujzT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_vx5T_0Ee-FrctyGezvmw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_uj0T_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_z_vK0D_0Ee-FrctyGezvmw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_z_ujzj_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_ujzz_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_z_ujzz_0Ee-FrctyGezvmw" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_z_ujzj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_uj0D_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_z_uj0D_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_ujzz_0Ee-FrctyGezvmw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_vK1D_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_z_vK1j_0Ee-FrctyGezvmw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_z_vK0T_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_vK0j_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_z_vK0j_0Ee-FrctyGezvmw" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_z_vK0T_0Ee-FrctyGezvmw" successor_AbstractAction="_z_vK0z_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_z_vK0z_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_vK0j_0Ee-FrctyGezvmw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_z_vx5T_0Ee-FrctyGezvmw" entityName="If Branch" predecessor_AbstractAction="_z_vK1z_0Ee-FrctyGezvmw" successor_AbstractAction="_z_vx5j_0Ee-FrctyGezvmw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_vx4j_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_z_vx5D_0Ee-FrctyGezvmw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_z_vK2D_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_vx4D_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_z_vx4D_0Ee-FrctyGezvmw" entityName="If Branch" predecessor_AbstractAction="_z_vK2D_0Ee-FrctyGezvmw" successor_AbstractAction="_z_vx4T_0Ee-FrctyGezvmw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_vK3T_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_z_vK3z_0Ee-FrctyGezvmw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_z_vK2T_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_vK2j_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_vK2j_0Ee-FrctyGezvmw" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_z_vK2T_0Ee-FrctyGezvmw" successor_AbstractAction="_z_vK2z_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_z_vK2z_0Ee-FrctyGezvmw" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_z_vK2j_0Ee-FrctyGezvmw" successor_AbstractAction="_z_vK3D_0Ee-FrctyGezvmw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_z_vK3D_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_vK2z_0Ee-FrctyGezvmw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_vK4j_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_z_vK5D_0Ee-FrctyGezvmw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_z_vK4D_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_vK4T_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_z_vK4T_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_vK4D_0Ee-FrctyGezvmw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_z_vx4T_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_vx4D_0Ee-FrctyGezvmw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_z_vx5j_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_vx5T_0Ee-FrctyGezvmw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_0AjDIT_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0AjDID_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_0AbHUj_0Ee-FrctyGezvmw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_z_ujyz_0Ee-FrctyGezvmw" describedService__SEFF="_z5y64T_0Ee-FrctyGezvmw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_z6OYsT_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_sHgD_0Ee-FrctyGezvmw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_z_sHgD_0Ee-FrctyGezvmw" entityName="If Branch" predecessor_AbstractAction="_z6OYsT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_sukD_0Ee-FrctyGezvmw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_q5YD_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_z_rgcD_0Ee-FrctyGezvmw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_z6QN4D_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_qSUD_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_z_qSUD_0Ee-FrctyGezvmw" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_z6QN4D_0Ee-FrctyGezvmw" successor_AbstractAction="_z_qSUT_0Ee-FrctyGezvmw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_z_qSUT_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_qSUD_0Ee-FrctyGezvmw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_z_sukD_0Ee-FrctyGezvmw" entityName="stopWatch.start()" predecessor_AbstractAction="_z_sHgD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_ujyT_0Ee-FrctyGezvmw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_z_ujyT_0Ee-FrctyGezvmw" entityName="If Branch" predecessor_AbstractAction="_z_sukD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_ujyj_0Ee-FrctyGezvmw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_ujxj_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_z_ujyD_0Ee-FrctyGezvmw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_z_sukT_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_ujxD_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_z_ujxD_0Ee-FrctyGezvmw" entityName="If Branch" predecessor_AbstractAction="_z_sukT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_ujxT_0Ee-FrctyGezvmw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_ujwT_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_z_ujwz_0Ee-FrctyGezvmw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_z_sukj_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_t8tT_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_z_t8tT_0Ee-FrctyGezvmw" entityName="Switch Branch" predecessor_AbstractAction="_z_sukj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_t8tj_0Ee-FrctyGezvmw">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_tVqj_0Ee-FrctyGezvmw">
                      <branchBehaviour_BranchTransition id="_z_tVrD_0Ee-FrctyGezvmw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_z_tVoD_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_tVpz_0Ee-FrctyGezvmw"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_z_tVpz_0Ee-FrctyGezvmw" entityName="If Branch" predecessor_AbstractAction="_z_tVoD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_tVqD_0Ee-FrctyGezvmw">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_tVpD_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_z_tVpj_0Ee-FrctyGezvmw">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_z_tVoT_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_tVoj_0Ee-FrctyGezvmw"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_z_tVoj_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_tVoT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_tVoz_0Ee-FrctyGezvmw"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_z_tVoz_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_tVoj_0Ee-FrctyGezvmw"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_z_tVqD_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_tVpz_0Ee-FrctyGezvmw" successor_AbstractAction="_z_tVqT_0Ee-FrctyGezvmw"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_z_tVqT_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_tVqD_0Ee-FrctyGezvmw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_tVsD_0Ee-FrctyGezvmw">
                      <branchBehaviour_BranchTransition id="_z_tVsj_0Ee-FrctyGezvmw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_z_tVrT_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_tVrj_0Ee-FrctyGezvmw"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_z_tVrj_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_tVrT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_tVrz_0Ee-FrctyGezvmw"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_z_tVrz_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_tVrj_0Ee-FrctyGezvmw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_t8sj_0Ee-FrctyGezvmw">
                      <branchBehaviour_BranchTransition id="_z_t8tD_0Ee-FrctyGezvmw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_z_tVsz_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_t8sD_0Ee-FrctyGezvmw"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_z_t8sD_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_tVsz_0Ee-FrctyGezvmw" successor_AbstractAction="_z_t8sT_0Ee-FrctyGezvmw"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_z_t8sT_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_t8sD_0Ee-FrctyGezvmw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_t8tj_0Ee-FrctyGezvmw" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_z_t8tT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_t8tz_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_t8tz_0Ee-FrctyGezvmw" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_z_t8tj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_t8uD_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_t8uD_0Ee-FrctyGezvmw" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_z_t8tz_0Ee-FrctyGezvmw" successor_AbstractAction="_z_t8uT_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_t8uT_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_t8uD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_t8uj_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_t8uj_0Ee-FrctyGezvmw" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_z_t8uT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_t8uz_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_t8uz_0Ee-FrctyGezvmw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_z_t8uj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_t8vD_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_t8vD_0Ee-FrctyGezvmw" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_z_t8uz_0Ee-FrctyGezvmw" successor_AbstractAction="_z_t8vT_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_z_t8vT_0Ee-FrctyGezvmw" entityName="deferredResult" predecessor_AbstractAction="_z_t8vD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_ujwD_0Ee-FrctyGezvmw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_z_ujwD_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_t8vT_0Ee-FrctyGezvmw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_z_ujxT_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_ujxD_0Ee-FrctyGezvmw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_z_ujyj_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_ujyT_0Ee-FrctyGezvmw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_0Ak4Wj_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0Ak4WT_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_0AbHUT_0Ee-FrctyGezvmw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_z_zcQT_0Ee-FrctyGezvmw" describedService__SEFF="_z5zh8D_0Ee-FrctyGezvmw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_z_xAFT_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_xnFT_0Ee-FrctyGezvmw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_z_xnFT_0Ee-FrctyGezvmw" entityName="If Branch" predecessor_AbstractAction="_z_xAFT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_xnFj_0Ee-FrctyGezvmw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_xnEj_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_z_xnFD_0Ee-FrctyGezvmw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_z_xAFj_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_xnED_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_z_xnED_0Ee-FrctyGezvmw" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_z_xAFj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_xnET_0Ee-FrctyGezvmw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_z_xnET_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_xnED_0Ee-FrctyGezvmw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_z_xnFj_0Ee-FrctyGezvmw" entityName="stopWatch.start()" predecessor_AbstractAction="_z_xnFT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_y1Qj_0Ee-FrctyGezvmw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_z_y1Qj_0Ee-FrctyGezvmw" entityName="If Branch" predecessor_AbstractAction="_z_xnFj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_y1Qz_0Ee-FrctyGezvmw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_y1Pz_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_z_y1QT_0Ee-FrctyGezvmw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_z_xnFz_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_y1PT_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_z_y1PT_0Ee-FrctyGezvmw" entityName="Switch Branch" predecessor_AbstractAction="_z_xnFz_0Ee-FrctyGezvmw" successor_AbstractAction="_z_y1Pj_0Ee-FrctyGezvmw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_yOKT_0Ee-FrctyGezvmw">
                <branchBehaviour_BranchTransition id="_z_yOKz_0Ee-FrctyGezvmw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_z_xnGD_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_xnGT_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_xnGT_0Ee-FrctyGezvmw" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_z_xnGD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_xnJT_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_z_xnJT_0Ee-FrctyGezvmw" entityName="If Branch" predecessor_AbstractAction="_z_xnGT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_xnJj_0Ee-FrctyGezvmw">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_xnIj_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_z_xnJD_0Ee-FrctyGezvmw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_z_xnGj_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_xnID_0Ee-FrctyGezvmw"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_z_xnID_0Ee-FrctyGezvmw" entityName="If Branch" predecessor_AbstractAction="_z_xnGj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_xnIT_0Ee-FrctyGezvmw">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_xnHT_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_z_xnHz_0Ee-FrctyGezvmw">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_z_xnGz_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_xnHD_0Ee-FrctyGezvmw"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_z_xnHD_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_xnGz_0Ee-FrctyGezvmw"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_z_xnIT_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_xnID_0Ee-FrctyGezvmw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_xnJj_0Ee-FrctyGezvmw" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_z_xnJT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_xnJz_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_xnJz_0Ee-FrctyGezvmw" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_z_xnJj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_xnKD_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_xnKD_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_xnJz_0Ee-FrctyGezvmw" successor_AbstractAction="_z_xnKT_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_xnKT_0Ee-FrctyGezvmw" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_z_xnKD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_yOID_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_yOID_0Ee-FrctyGezvmw" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_z_xnKT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_yOIT_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_z_yOIT_0Ee-FrctyGezvmw" entityName="deferredResult" predecessor_AbstractAction="_z_yOID_0Ee-FrctyGezvmw" successor_AbstractAction="_z_yOIj_0Ee-FrctyGezvmw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_yOIj_0Ee-FrctyGezvmw" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_z_yOIT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_yOIz_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_yOIz_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_yOIj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_yOJD_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_yOJD_0Ee-FrctyGezvmw" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_z_yOIz_0Ee-FrctyGezvmw" successor_AbstractAction="_z_yOJT_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_yOJT_0Ee-FrctyGezvmw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_z_yOJD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_yOJj_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_z_yOJj_0Ee-FrctyGezvmw" entityName="deferredResult" predecessor_AbstractAction="_z_yOJT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_yOJz_0Ee-FrctyGezvmw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_yOJz_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_yOJj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_yOKD_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_z_yOKD_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_yOJz_0Ee-FrctyGezvmw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_y1ND_0Ee-FrctyGezvmw">
                <branchBehaviour_BranchTransition id="_z_y1Nj_0Ee-FrctyGezvmw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_z_yOLD_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_yOLT_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_yOLT_0Ee-FrctyGezvmw" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_z_yOLD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_yOLj_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_yOLj_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_yOLT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_yOLz_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_yOLz_0Ee-FrctyGezvmw" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_z_yOLj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_y1MD_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_y1MD_0Ee-FrctyGezvmw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_z_yOLz_0Ee-FrctyGezvmw" successor_AbstractAction="_z_y1MT_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_z_y1MT_0Ee-FrctyGezvmw" entityName="deferredResult" predecessor_AbstractAction="_z_y1MD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_y1Mj_0Ee-FrctyGezvmw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_y1Mj_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_y1MT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_y1Mz_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_z_y1Mz_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_y1Mj_0Ee-FrctyGezvmw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_y1Oj_0Ee-FrctyGezvmw">
                <branchBehaviour_BranchTransition id="_z_y1PD_0Ee-FrctyGezvmw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_z_y1Nz_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_y1OD_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_y1OD_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_y1Nz_0Ee-FrctyGezvmw" successor_AbstractAction="_z_y1OT_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_z_y1OT_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_y1OD_0Ee-FrctyGezvmw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_z_y1Pj_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_y1PT_0Ee-FrctyGezvmw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_z_y1Qz_0Ee-FrctyGezvmw" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_z_y1Qj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_zcQD_0Ee-FrctyGezvmw"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_z_zcQD_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_y1Qz_0Ee-FrctyGezvmw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_0Amtjj_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0AmtjT_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_0AbHUz_0Ee-FrctyGezvmw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_z_1Rfz_0Ee-FrctyGezvmw" describedService__SEFF="_z5zh9D_0Ee-FrctyGezvmw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_z_zcQz_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_zcSj_0Ee-FrctyGezvmw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_z_zcSj_0Ee-FrctyGezvmw" entityName="If Branch" predecessor_AbstractAction="_z_zcQz_0Ee-FrctyGezvmw" successor_AbstractAction="_z_zcSz_0Ee-FrctyGezvmw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_zcRz_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_z_zcST_0Ee-FrctyGezvmw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_z_zcRD_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_zcRT_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_z_zcRT_0Ee-FrctyGezvmw" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_z_zcRD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_zcRj_0Ee-FrctyGezvmw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController_generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController_generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_z_zcRj_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_zcRT_0Ee-FrctyGezvmw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_z_zcSz_0Ee-FrctyGezvmw" entityName="stopWatch.start()" predecessor_AbstractAction="_z_zcSj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_1RfT_0Ee-FrctyGezvmw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_z_1RfT_0Ee-FrctyGezvmw" entityName="Switch Branch" predecessor_AbstractAction="_z_zcSz_0Ee-FrctyGezvmw" successor_AbstractAction="_z_1Rfj_0Ee-FrctyGezvmw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_0qYT_0Ee-FrctyGezvmw">
          <branchBehaviour_BranchTransition id="_z_0qYz_0Ee-FrctyGezvmw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_z_zcTD_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_zcTT_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_z_zcTT_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_zcTD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_zcTj_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_z_zcTj_0Ee-FrctyGezvmw" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_z_zcTT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_zcTz_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_z_zcTz_0Ee-FrctyGezvmw" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_z_zcTj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_zcUD_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_z_zcUD_0Ee-FrctyGezvmw" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_z_zcTz_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0DUD_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_z_0DUD_0Ee-FrctyGezvmw" entityName="deferredResult" predecessor_AbstractAction="_z_zcUD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0DXT_0Ee-FrctyGezvmw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_z_0DXT_0Ee-FrctyGezvmw" entityName="If Branch" predecessor_AbstractAction="_z_0DUD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0DXj_0Ee-FrctyGezvmw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_0DWj_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_z_0DXD_0Ee-FrctyGezvmw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_z_0DUT_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_0DUj_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_0DUj_0Ee-FrctyGezvmw" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_z_0DUT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0DUz_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_0DUz_0Ee-FrctyGezvmw" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_z_0DUj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0DVD_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_0DVD_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_0DUz_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0DVT_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_0DVT_0Ee-FrctyGezvmw" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_z_0DVD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0DVj_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_0DVj_0Ee-FrctyGezvmw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_z_0DVT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0DVz_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_0DVz_0Ee-FrctyGezvmw" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_z_0DVj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0DWD_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_z_0DWD_0Ee-FrctyGezvmw" entityName="deferredResult" predecessor_AbstractAction="_z_0DVz_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0DWT_0Ee-FrctyGezvmw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_z_0DWT_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_0DWD_0Ee-FrctyGezvmw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_z_0DXj_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_0DXT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0DXz_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_z_0DXz_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_0DXj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0qYD_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_z_0qYD_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_0DXz_0Ee-FrctyGezvmw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_1RdD_0Ee-FrctyGezvmw">
          <branchBehaviour_BranchTransition id="_z_1Rdj_0Ee-FrctyGezvmw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_z_0qZD_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_1RcD_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_z_1RcD_0Ee-FrctyGezvmw" entityName="If Branch" predecessor_AbstractAction="_z_0qZD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_1RcT_0Ee-FrctyGezvmw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_0qbj_0Ee-FrctyGezvmw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_z_0qcD_0Ee-FrctyGezvmw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_z_0qZT_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_0qZj_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_0qZj_0Ee-FrctyGezvmw" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_z_0qZT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0qZz_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_0qZz_0Ee-FrctyGezvmw" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_z_0qZj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0qaD_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_0qaD_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_0qZz_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0qaT_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_0qaT_0Ee-FrctyGezvmw" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_z_0qaD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0qaj_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_0qaj_0Ee-FrctyGezvmw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_z_0qaT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0qaz_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_z_0qaz_0Ee-FrctyGezvmw" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_z_0qaj_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0qbD_0Ee-FrctyGezvmw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_z_0qbD_0Ee-FrctyGezvmw" entityName="deferredResult" predecessor_AbstractAction="_z_0qaz_0Ee-FrctyGezvmw" successor_AbstractAction="_z_0qbT_0Ee-FrctyGezvmw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_z_0qbT_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_0qbD_0Ee-FrctyGezvmw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_z_1RcT_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_1RcD_0Ee-FrctyGezvmw" successor_AbstractAction="_z_1Rcj_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_z_1Rcj_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_1RcT_0Ee-FrctyGezvmw" successor_AbstractAction="_z_1Rcz_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_z_1Rcz_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_1Rcj_0Ee-FrctyGezvmw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_z_1Rej_0Ee-FrctyGezvmw">
          <branchBehaviour_BranchTransition id="_z_1RfD_0Ee-FrctyGezvmw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_z_1Rdz_0Ee-FrctyGezvmw" entityName="Start Action" successor_AbstractAction="_z_1ReD_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_z_1ReD_0Ee-FrctyGezvmw" entityName="stopWatch.stop()" predecessor_AbstractAction="_z_1Rdz_0Ee-FrctyGezvmw" successor_AbstractAction="_z_1ReT_0Ee-FrctyGezvmw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_z_1ReT_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_1ReD_0Ee-FrctyGezvmw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_z_1Rfj_0Ee-FrctyGezvmw" entityName="Stop Action" predecessor_AbstractAction="_z_1RfT_0Ee-FrctyGezvmw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_0Aq-8T_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_0ArmBD_0Ee-FrctyGezvmw" encapsulatedComponent__AssemblyContext="_0Amtjj_0Ee-FrctyGezvmw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_0AsNED_0Ee-FrctyGezvmw" innerProvidedRole_ProvidedDelegationConnector="_0AmtjT_0Ee-FrctyGezvmw" outerProvidedRole_ProvidedDelegationConnector="_0Aq-8D_0Ee-FrctyGezvmw" assemblyContext_ProvidedDelegationConnector="_0ArmBD_0Ee-FrctyGezvmw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0Aq-8D_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_0AbHUz_0Ee-FrctyGezvmw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_0Aq-8z_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_0ArmBj_0Ee-FrctyGezvmw" encapsulatedComponent__AssemblyContext="_0AbHVz_0Ee-FrctyGezvmw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_0AsNFT_0Ee-FrctyGezvmw" innerProvidedRole_ProvidedDelegationConnector="_0AbHVj_0Ee-FrctyGezvmw" outerProvidedRole_ProvidedDelegationConnector="_0Aq-8j_0Ee-FrctyGezvmw" assemblyContext_ProvidedDelegationConnector="_0ArmBj_0Ee-FrctyGezvmw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0Aq-8j_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_0AbHVD_0Ee-FrctyGezvmw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_0Aq-9D_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_0ArmAj_0Ee-FrctyGezvmw" encapsulatedComponent__AssemblyContext="_0AeKpz_0Ee-FrctyGezvmw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_0Aq-9z_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_0ArmCj_0Ee-FrctyGezvmw" encapsulatedComponent__AssemblyContext="_0AeKqj_0Ee-FrctyGezvmw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_0AsNEj_0Ee-FrctyGezvmw" innerProvidedRole_ProvidedDelegationConnector="_0AeKqD_0Ee-FrctyGezvmw" outerProvidedRole_ProvidedDelegationConnector="_0Aq-9j_0Ee-FrctyGezvmw" assemblyContext_ProvidedDelegationConnector="_0ArmCj_0Ee-FrctyGezvmw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_0AsNEz_0Ee-FrctyGezvmw" innerProvidedRole_ProvidedDelegationConnector="_0AeKqT_0Ee-FrctyGezvmw" outerProvidedRole_ProvidedDelegationConnector="_0Aq-9T_0Ee-FrctyGezvmw" assemblyContext_ProvidedDelegationConnector="_0ArmCj_0Ee-FrctyGezvmw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0Aq-9T_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_0AbHVT_0Ee-FrctyGezvmw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0Aq-9j_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_0AbHUD_0Ee-FrctyGezvmw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_0Aq--T_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_0ArmCD_0Ee-FrctyGezvmw" encapsulatedComponent__AssemblyContext="_0Ak4Wj_0Ee-FrctyGezvmw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_0AsNFD_0Ee-FrctyGezvmw" innerProvidedRole_ProvidedDelegationConnector="_0Ak4WT_0Ee-FrctyGezvmw" outerProvidedRole_ProvidedDelegationConnector="_0Aq--D_0Ee-FrctyGezvmw" assemblyContext_ProvidedDelegationConnector="_0ArmCD_0Ee-FrctyGezvmw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0Aq--D_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_0AbHUT_0Ee-FrctyGezvmw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_0Aq--z_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_0ArmAD_0Ee-FrctyGezvmw" encapsulatedComponent__AssemblyContext="_0AjDIT_0Ee-FrctyGezvmw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_0AsNET_0Ee-FrctyGezvmw" innerProvidedRole_ProvidedDelegationConnector="_0AjDID_0Ee-FrctyGezvmw" outerProvidedRole_ProvidedDelegationConnector="_0Aq--j_0Ee-FrctyGezvmw" assemblyContext_ProvidedDelegationConnector="_0ArmAD_0Ee-FrctyGezvmw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0Aq--j_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_0AbHUj_0Ee-FrctyGezvmw"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_0AbHUD_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_z50JBj_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_z5DUAD_0Ee-FrctyGezvmw">
      <parameters__OperationSignature dataType__Parameter="_z50JBT_0Ee-FrctyGezvmw" parameterName="tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_0AbHUT_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_z5zh8D_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_z5y64D_0Ee-FrctyGezvmw">
      <parameters__OperationSignature dataType__Parameter="_z5CF4D_0Ee-FrctyGezvmw" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_0AbHUj_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_z5y64T_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_z5y64D_0Ee-FrctyGezvmw">
      <parameters__OperationSignature dataType__Parameter="_z5CF4D_0Ee-FrctyGezvmw" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_0AbHUz_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_z5zh9D_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_z5y64D_0Ee-FrctyGezvmw">
      <parameters__OperationSignature dataType__Parameter="_z5zh8z_0Ee-FrctyGezvmw" parameterName="request" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_0AbHVD_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_z5D7ED_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_z5DUAD_0Ee-FrctyGezvmw">
      <parameters__OperationSignature dataType__Parameter="_z5CF4D_0Ee-FrctyGezvmw" parameterName="registrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_0AbHVT_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_z50JAj_0Ee-FrctyGezvmw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_z5DUAD_0Ee-FrctyGezvmw">
      <parameters__OperationSignature dataType__Parameter="_z50JAD_0Ee-FrctyGezvmw" parameterName="authorization" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_z50JAT_0Ee-FrctyGezvmw" parameterName="teleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_z5CF4D_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_z5DUAD_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_z5y64D_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_z5zh8z_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_z50JAD_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_z50JAT_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_z50JBT_0Ee-FrctyGezvmw" entityName="app_coronawarn_verification_model_Tan"/>
</repository:Repository>
