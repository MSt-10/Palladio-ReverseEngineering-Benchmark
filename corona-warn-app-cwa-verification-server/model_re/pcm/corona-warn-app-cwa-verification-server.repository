<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_gZL5bC0ZEe-re8DiDroCqA">
  <components__Repository xsi:type="repository:BasicComponent" id="_gY5lhy0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_gY5lhi0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_gY5lhS0ZEe-re8DiDroCqA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_gYR6dC0ZEe-re8DiDroCqA" describedService__SEFF="_gSMgkS0ZEe-re8DiDroCqA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_gYQsVC0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYR6cS0ZEe-re8DiDroCqA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_gYR6cS0ZEe-re8DiDroCqA" entityName="If Branch" predecessor_AbstractAction="_gYQsVC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYR6ci0ZEe-re8DiDroCqA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYRTcy0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_gYR6cC0ZEe-re8DiDroCqA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_gYQsVS0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYRTcS0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_gYRTcS0ZEe-re8DiDroCqA" entityName="Switch Branch" predecessor_AbstractAction="_gYQsVS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYRTci0ZEe-re8DiDroCqA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYRTYy0ZEe-re8DiDroCqA">
                <branchBehaviour_BranchTransition id="_gYRTZS0ZEe-re8DiDroCqA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_gYQsVi0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYQsYi0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_gYQsYi0ZEe-re8DiDroCqA" entityName="If Branch" predecessor_AbstractAction="_gYQsVi0ZEe-re8DiDroCqA" successor_AbstractAction="_gYQsYy0ZEe-re8DiDroCqA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYQsXy0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_gYQsYS0ZEe-re8DiDroCqA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_gYQsVy0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYQsXS0ZEe-re8DiDroCqA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_gYQsXS0ZEe-re8DiDroCqA" entityName="If Branch" predecessor_AbstractAction="_gYQsVy0ZEe-re8DiDroCqA" successor_AbstractAction="_gYQsXi0ZEe-re8DiDroCqA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYQsWi0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_gYQsXC0ZEe-re8DiDroCqA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_gYQsWC0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYQsWS0ZEe-re8DiDroCqA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_gYQsWS0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYQsWC0ZEe-re8DiDroCqA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_gYQsXi0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYQsXS0ZEe-re8DiDroCqA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYQsYy0ZEe-re8DiDroCqA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_gYQsYi0ZEe-re8DiDroCqA" successor_AbstractAction="_gYQsZC0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYQsZC0ZEe-re8DiDroCqA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_gYQsYy0ZEe-re8DiDroCqA" successor_AbstractAction="_gYRTYC0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_gYRTYC0ZEe-re8DiDroCqA" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_gYQsZC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYRTYS0ZEe-re8DiDroCqA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYRTYS0ZEe-re8DiDroCqA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_gYRTYC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYRTYi0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_gYRTYi0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYRTYS0ZEe-re8DiDroCqA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYRTaS0ZEe-re8DiDroCqA">
                <branchBehaviour_BranchTransition id="_gYRTay0ZEe-re8DiDroCqA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_gYRTZi0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYRTZy0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYRTZy0ZEe-re8DiDroCqA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_gYRTZi0ZEe-re8DiDroCqA" successor_AbstractAction="_gYRTaC0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_gYRTaC0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYRTZy0ZEe-re8DiDroCqA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYRTbi0ZEe-re8DiDroCqA">
                <branchBehaviour_BranchTransition id="_gYRTcC0ZEe-re8DiDroCqA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_gYRTbC0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYRTbS0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_gYRTbS0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYRTbC0ZEe-re8DiDroCqA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_gYRTci0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYRTcS0ZEe-re8DiDroCqA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_gYR6ci0ZEe-re8DiDroCqA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_gYR6cS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYR6cy0ZEe-re8DiDroCqA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_gYR6cy0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYR6ci0ZEe-re8DiDroCqA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_gY9P4C0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_gY9P4i0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_gY9P4S0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_gY5lgC0ZEe-re8DiDroCqA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_gYNpFC0ZEe-re8DiDroCqA" describedService__SEFF="_gSNHoi0ZEe-re8DiDroCqA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_gYLz3i0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYMa5S0ZEe-re8DiDroCqA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_gYMa5S0ZEe-re8DiDroCqA" entityName="If Branch" predecessor_AbstractAction="_gYLz3i0ZEe-re8DiDroCqA" successor_AbstractAction="_gYMa5i0ZEe-re8DiDroCqA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYMa4i0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_gYMa5C0ZEe-re8DiDroCqA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_gYLz3y0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYMa4C0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_gYMa4C0ZEe-re8DiDroCqA" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_gYLz3y0ZEe-re8DiDroCqA" successor_AbstractAction="_gYMa4S0ZEe-re8DiDroCqA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_gYMa4S0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYMa4C0ZEe-re8DiDroCqA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_gYMa5i0ZEe-re8DiDroCqA" entityName="stopWatch.start()" predecessor_AbstractAction="_gYMa5S0ZEe-re8DiDroCqA" successor_AbstractAction="_gYNpEi0ZEe-re8DiDroCqA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_gYNpEi0ZEe-re8DiDroCqA" entityName="If Branch" predecessor_AbstractAction="_gYMa5i0ZEe-re8DiDroCqA" successor_AbstractAction="_gYNpEy0ZEe-re8DiDroCqA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYNpDy0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_gYNpES0ZEe-re8DiDroCqA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_gYMa5y0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYNpDS0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_gYNpDS0ZEe-re8DiDroCqA" entityName="If Branch" predecessor_AbstractAction="_gYMa5y0ZEe-re8DiDroCqA" successor_AbstractAction="_gYNpDi0ZEe-re8DiDroCqA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYNpCi0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_gYNpDC0ZEe-re8DiDroCqA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_gYMa6C0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYNpAC0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_gYNpAC0ZEe-re8DiDroCqA" entityName="Switch Branch" predecessor_AbstractAction="_gYMa6C0ZEe-re8DiDroCqA" successor_AbstractAction="_gYNpAS0ZEe-re8DiDroCqA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYMa8y0ZEe-re8DiDroCqA">
                      <branchBehaviour_BranchTransition id="_gYNB8C0ZEe-re8DiDroCqA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_gYMa6S0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYMa8C0ZEe-re8DiDroCqA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_gYMa8C0ZEe-re8DiDroCqA" entityName="If Branch" predecessor_AbstractAction="_gYMa6S0ZEe-re8DiDroCqA" successor_AbstractAction="_gYMa8S0ZEe-re8DiDroCqA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYMa7S0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_gYMa7y0ZEe-re8DiDroCqA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_gYMa6i0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYMa6y0ZEe-re8DiDroCqA"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_gYMa6y0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYMa6i0ZEe-re8DiDroCqA" successor_AbstractAction="_gYMa7C0ZEe-re8DiDroCqA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_gYMa7C0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYMa6y0ZEe-re8DiDroCqA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_gYMa8S0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYMa8C0ZEe-re8DiDroCqA" successor_AbstractAction="_gYMa8i0ZEe-re8DiDroCqA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_gYMa8i0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYMa8S0ZEe-re8DiDroCqA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYNB9C0ZEe-re8DiDroCqA">
                      <branchBehaviour_BranchTransition id="_gYNB9i0ZEe-re8DiDroCqA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_gYNB8S0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYNB8i0ZEe-re8DiDroCqA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_gYNB8i0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYNB8S0ZEe-re8DiDroCqA" successor_AbstractAction="_gYNB8y0ZEe-re8DiDroCqA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_gYNB8y0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYNB8i0ZEe-re8DiDroCqA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYNB-i0ZEe-re8DiDroCqA">
                      <branchBehaviour_BranchTransition id="_gYNB_C0ZEe-re8DiDroCqA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_gYNB9y0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYNB-C0ZEe-re8DiDroCqA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_gYNB-C0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYNB9y0ZEe-re8DiDroCqA" successor_AbstractAction="_gYNB-S0ZEe-re8DiDroCqA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_gYNB-S0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYNB-C0ZEe-re8DiDroCqA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYNpAS0ZEe-re8DiDroCqA" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_gYNpAC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYNpAi0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYNpAi0ZEe-re8DiDroCqA" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_gYNpAS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYNpAy0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYNpAy0ZEe-re8DiDroCqA" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_gYNpAi0ZEe-re8DiDroCqA" successor_AbstractAction="_gYNpBC0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYNpBC0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYNpAy0ZEe-re8DiDroCqA" successor_AbstractAction="_gYNpBS0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYNpBS0ZEe-re8DiDroCqA" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_gYNpBC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYNpBi0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYNpBi0ZEe-re8DiDroCqA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_gYNpBS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYNpBy0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYNpBy0ZEe-re8DiDroCqA" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_gYNpBi0ZEe-re8DiDroCqA" successor_AbstractAction="_gYNpCC0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_gYNpCC0ZEe-re8DiDroCqA" entityName="deferredResult" predecessor_AbstractAction="_gYNpBy0ZEe-re8DiDroCqA" successor_AbstractAction="_gYNpCS0ZEe-re8DiDroCqA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_gYNpCS0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYNpCC0ZEe-re8DiDroCqA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_gYNpDi0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYNpDS0ZEe-re8DiDroCqA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_gYNpEy0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYNpEi0ZEe-re8DiDroCqA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_gY_sJy0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_gY_sJS0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_gY5lgy0ZEe-re8DiDroCqA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_gY_sJi0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_gY5lhC0ZEe-re8DiDroCqA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_gYOQEi0ZEe-re8DiDroCqA" describedService__SEFF="_gSMglS0ZEe-re8DiDroCqA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_gYNpFi0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYOQEC0ZEe-re8DiDroCqA"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_gYOQEC0ZEe-re8DiDroCqA" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_gYNpFi0ZEe-re8DiDroCqA" successor_AbstractAction="_gYOQES0ZEe-re8DiDroCqA">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_gYOQES0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYOQEC0ZEe-re8DiDroCqA"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_gYO3Jy0ZEe-re8DiDroCqA" describedService__SEFF="_gSOVwC0ZEe-re8DiDroCqA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_gYOQFC0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYOQIS0ZEe-re8DiDroCqA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_gYOQIS0ZEe-re8DiDroCqA" entityName="If Branch" predecessor_AbstractAction="_gYOQFC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYO3JS0ZEe-re8DiDroCqA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYOQGC0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_gYOQGi0ZEe-re8DiDroCqA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_gYOQFS0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYOQFi0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_gYOQFi0ZEe-re8DiDroCqA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_gYOQFS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYOQFy0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_gYOQFy0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYOQFi0ZEe-re8DiDroCqA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYOQHi0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_gYOQIC0ZEe-re8DiDroCqA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_gYOQGy0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYOQHC0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_gYOQHC0ZEe-re8DiDroCqA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_gYOQGy0ZEe-re8DiDroCqA" successor_AbstractAction="_gYOQHS0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_gYOQHS0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYOQHC0ZEe-re8DiDroCqA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_gYO3JS0ZEe-re8DiDroCqA" entityName="If Branch" predecessor_AbstractAction="_gYOQIS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYO3Ji0ZEe-re8DiDroCqA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYO3Ii0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_gYO3JC0ZEe-re8DiDroCqA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_gYOQIi0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYO3IC0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_gYO3IC0ZEe-re8DiDroCqA" entityName="If Branch" predecessor_AbstractAction="_gYOQIi0ZEe-re8DiDroCqA" successor_AbstractAction="_gYO3IS0ZEe-re8DiDroCqA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYOQJy0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_gYOQKS0ZEe-re8DiDroCqA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_gYOQIy0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYOQJC0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYOQJC0ZEe-re8DiDroCqA" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_gYOQIy0ZEe-re8DiDroCqA" successor_AbstractAction="_gYOQJS0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_gYOQJS0ZEe-re8DiDroCqA" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_gYOQJC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYOQJi0ZEe-re8DiDroCqA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_gYOQJi0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYOQJS0ZEe-re8DiDroCqA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYOQLC0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_gYOQLi0ZEe-re8DiDroCqA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_gYOQKi0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYOQKy0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_gYOQKy0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYOQKi0ZEe-re8DiDroCqA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_gYO3IS0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYO3IC0ZEe-re8DiDroCqA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_gYO3Ji0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYO3JS0ZEe-re8DiDroCqA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_gZEkpS0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_gZEkpC0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_gY5lgS0ZEe-re8DiDroCqA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_gYLz3C0ZEe-re8DiDroCqA" describedService__SEFF="_gRbEgS0ZEe-re8DiDroCqA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_gSmwQS0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYIwgC0ZEe-re8DiDroCqA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_gYIwgC0ZEe-re8DiDroCqA" entityName="If Branch" predecessor_AbstractAction="_gSmwQS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYJXkC0ZEe-re8DiDroCqA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYHiYC0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_gYIJcC0ZEe-re8DiDroCqA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_gSolcC0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYG7UC0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_gYG7UC0ZEe-re8DiDroCqA" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_gSolcC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYG7US0ZEe-re8DiDroCqA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_gYG7US0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYG7UC0ZEe-re8DiDroCqA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_gYJXkC0ZEe-re8DiDroCqA" entityName="stopWatch.start()" predecessor_AbstractAction="_gYIwgC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYLz2S0ZEe-re8DiDroCqA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_gYLz2S0ZEe-re8DiDroCqA" entityName="If Branch" predecessor_AbstractAction="_gYJXkC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYLz2i0ZEe-re8DiDroCqA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYLz1i0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_gYLz2C0ZEe-re8DiDroCqA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_gYJXkS0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYLz1C0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_gYLz1C0ZEe-re8DiDroCqA" entityName="Switch Branch" predecessor_AbstractAction="_gYJXkS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYLz1S0ZEe-re8DiDroCqA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYKluC0ZEe-re8DiDroCqA">
                <branchBehaviour_BranchTransition id="_gYKlui0ZEe-re8DiDroCqA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_gYJXki0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYJXky0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYJXky0ZEe-re8DiDroCqA" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_gYJXki0ZEe-re8DiDroCqA" successor_AbstractAction="_gYJ-qi0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_gYJ-qi0ZEe-re8DiDroCqA" entityName="If Branch" predecessor_AbstractAction="_gYJXky0ZEe-re8DiDroCqA" successor_AbstractAction="_gYJ-qy0ZEe-re8DiDroCqA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYJ-py0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_gYJ-qS0ZEe-re8DiDroCqA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_gYJXlC0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYJ-pS0ZEe-re8DiDroCqA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_gYJ-pS0ZEe-re8DiDroCqA" entityName="If Branch" predecessor_AbstractAction="_gYJXlC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYJ-pi0ZEe-re8DiDroCqA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYJ-oi0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_gYJ-pC0ZEe-re8DiDroCqA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_gYJ-oC0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYJ-oS0ZEe-re8DiDroCqA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_gYJ-oS0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYJ-oC0ZEe-re8DiDroCqA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_gYJ-pi0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYJ-pS0ZEe-re8DiDroCqA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYJ-qy0ZEe-re8DiDroCqA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_gYJ-qi0ZEe-re8DiDroCqA" successor_AbstractAction="_gYJ-rC0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYJ-rC0ZEe-re8DiDroCqA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_gYJ-qy0ZEe-re8DiDroCqA" successor_AbstractAction="_gYJ-rS0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYJ-rS0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYJ-rC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYJ-ri0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYJ-ri0ZEe-re8DiDroCqA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_gYJ-rS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYJ-ry0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYJ-ry0ZEe-re8DiDroCqA" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_gYJ-ri0ZEe-re8DiDroCqA" successor_AbstractAction="_gYKlsC0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_gYKlsC0ZEe-re8DiDroCqA" entityName="deferredResult" predecessor_AbstractAction="_gYJ-ry0ZEe-re8DiDroCqA" successor_AbstractAction="_gYKlsS0ZEe-re8DiDroCqA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYKlsS0ZEe-re8DiDroCqA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_gYKlsC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYKlsi0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYKlsi0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYKlsS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYKlsy0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYKlsy0ZEe-re8DiDroCqA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_gYKlsi0ZEe-re8DiDroCqA" successor_AbstractAction="_gYKltC0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYKltC0ZEe-re8DiDroCqA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_gYKlsy0ZEe-re8DiDroCqA" successor_AbstractAction="_gYKltS0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_gYKltS0ZEe-re8DiDroCqA" entityName="deferredResult" predecessor_AbstractAction="_gYKltC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYKlti0ZEe-re8DiDroCqA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYKlti0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYKltS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYKlty0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_gYKlty0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYKlti0ZEe-re8DiDroCqA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYLMyC0ZEe-re8DiDroCqA">
                <branchBehaviour_BranchTransition id="_gYLMyi0ZEe-re8DiDroCqA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_gYLMwC0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYLMwS0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYLMwS0ZEe-re8DiDroCqA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_gYLMwC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYLMwi0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYLMwi0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYLMwS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYLMwy0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYLMwy0ZEe-re8DiDroCqA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_gYLMwi0ZEe-re8DiDroCqA" successor_AbstractAction="_gYLMxC0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYLMxC0ZEe-re8DiDroCqA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_gYLMwy0ZEe-re8DiDroCqA" successor_AbstractAction="_gYLMxS0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_gYLMxS0ZEe-re8DiDroCqA" entityName="deferredResult" predecessor_AbstractAction="_gYLMxC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYLMxi0ZEe-re8DiDroCqA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYLMxi0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYLMxS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYLMxy0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_gYLMxy0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYLMxi0ZEe-re8DiDroCqA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYLz0S0ZEe-re8DiDroCqA">
                <branchBehaviour_BranchTransition id="_gYLz0y0ZEe-re8DiDroCqA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_gYLMyy0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYLMzC0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYLMzC0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYLMyy0ZEe-re8DiDroCqA" successor_AbstractAction="_gYLz0C0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_gYLz0C0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYLMzC0ZEe-re8DiDroCqA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_gYLz1S0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYLz1C0ZEe-re8DiDroCqA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_gYLz2i0ZEe-re8DiDroCqA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_gYLz2S0ZEe-re8DiDroCqA" successor_AbstractAction="_gYLz2y0ZEe-re8DiDroCqA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_gYLz2y0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYLz2i0ZEe-re8DiDroCqA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_gZHA4y0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_gZHA4i0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_gY5lgi0ZEe-re8DiDroCqA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_gYQsUi0ZEe-re8DiDroCqA" describedService__SEFF="_gSNusC0ZEe-re8DiDroCqA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_gYO3KS0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYO3MC0ZEe-re8DiDroCqA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_gYO3MC0ZEe-re8DiDroCqA" entityName="If Branch" predecessor_AbstractAction="_gYO3KS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYO3MS0ZEe-re8DiDroCqA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYO3LS0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_gYO3Ly0ZEe-re8DiDroCqA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_gYO3Ki0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYO3Ky0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_gYO3Ky0ZEe-re8DiDroCqA" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_gYO3Ki0ZEe-re8DiDroCqA" successor_AbstractAction="_gYO3LC0ZEe-re8DiDroCqA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController.generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController.generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_gYO3LC0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYO3Ky0ZEe-re8DiDroCqA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_gYO3MS0ZEe-re8DiDroCqA" entityName="stopWatch.start()" predecessor_AbstractAction="_gYO3MC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYQsUC0ZEe-re8DiDroCqA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_gYQsUC0ZEe-re8DiDroCqA" entityName="Switch Branch" predecessor_AbstractAction="_gYO3MS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYQsUS0ZEe-re8DiDroCqA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYPeOS0ZEe-re8DiDroCqA">
          <branchBehaviour_BranchTransition id="_gYPeOy0ZEe-re8DiDroCqA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_gYO3Mi0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYO3My0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_gYO3My0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYO3Mi0ZEe-re8DiDroCqA" successor_AbstractAction="_gYO3NC0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_gYO3NC0ZEe-re8DiDroCqA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_gYO3My0ZEe-re8DiDroCqA" successor_AbstractAction="_gYO3NS0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_gYO3NS0ZEe-re8DiDroCqA" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_gYO3NC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYO3Ni0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_gYO3Ni0ZEe-re8DiDroCqA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_gYO3NS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYO3Ny0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_gYO3Ny0ZEe-re8DiDroCqA" entityName="deferredResult" predecessor_AbstractAction="_gYO3Ni0ZEe-re8DiDroCqA" successor_AbstractAction="_gYPeNS0ZEe-re8DiDroCqA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_gYPeNS0ZEe-re8DiDroCqA" entityName="If Branch" predecessor_AbstractAction="_gYO3Ny0ZEe-re8DiDroCqA" successor_AbstractAction="_gYPeNi0ZEe-re8DiDroCqA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYPeMi0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_gYPeNC0ZEe-re8DiDroCqA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_gYO3OC0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYO3OS0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYO3OS0ZEe-re8DiDroCqA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_gYO3OC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYO3Oi0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYO3Oi0ZEe-re8DiDroCqA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_gYO3OS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYO3Oy0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYO3Oy0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYO3Oi0ZEe-re8DiDroCqA" successor_AbstractAction="_gYO3PC0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYO3PC0ZEe-re8DiDroCqA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_gYO3Oy0ZEe-re8DiDroCqA" successor_AbstractAction="_gYO3PS0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYO3PS0ZEe-re8DiDroCqA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_gYO3PC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYO3Pi0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYO3Pi0ZEe-re8DiDroCqA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_gYO3PS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYPeMC0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_gYPeMC0ZEe-re8DiDroCqA" entityName="deferredResult" predecessor_AbstractAction="_gYO3Pi0ZEe-re8DiDroCqA" successor_AbstractAction="_gYPeMS0ZEe-re8DiDroCqA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_gYPeMS0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYPeMC0ZEe-re8DiDroCqA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_gYPeNi0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYPeNS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYPeNy0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_gYPeNy0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYPeNi0ZEe-re8DiDroCqA" successor_AbstractAction="_gYPeOC0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_gYPeOC0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYPeNy0ZEe-re8DiDroCqA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYQFTC0ZEe-re8DiDroCqA">
          <branchBehaviour_BranchTransition id="_gYQFTi0ZEe-re8DiDroCqA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_gYPePC0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYQFSC0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_gYQFSC0ZEe-re8DiDroCqA" entityName="If Branch" predecessor_AbstractAction="_gYPePC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYQFSS0ZEe-re8DiDroCqA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYQFRS0ZEe-re8DiDroCqA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_gYQFRy0ZEe-re8DiDroCqA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_gYPePS0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYPePi0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYPePi0ZEe-re8DiDroCqA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_gYPePS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYPePy0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYPePy0ZEe-re8DiDroCqA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_gYPePi0ZEe-re8DiDroCqA" successor_AbstractAction="_gYPeQC0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYPeQC0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYPePy0ZEe-re8DiDroCqA" successor_AbstractAction="_gYQFQC0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYQFQC0ZEe-re8DiDroCqA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_gYPeQC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYQFQS0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYQFQS0ZEe-re8DiDroCqA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_gYQFQC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYQFQi0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_gYQFQi0ZEe-re8DiDroCqA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_gYQFQS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYQFQy0ZEe-re8DiDroCqA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_gYQFQy0ZEe-re8DiDroCqA" entityName="deferredResult" predecessor_AbstractAction="_gYQFQi0ZEe-re8DiDroCqA" successor_AbstractAction="_gYQFRC0ZEe-re8DiDroCqA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_gYQFRC0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYQFQy0ZEe-re8DiDroCqA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_gYQFSS0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYQFSC0ZEe-re8DiDroCqA" successor_AbstractAction="_gYQFSi0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_gYQFSi0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYQFSS0ZEe-re8DiDroCqA" successor_AbstractAction="_gYQFSy0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_gYQFSy0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYQFSi0ZEe-re8DiDroCqA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_gYQFUi0ZEe-re8DiDroCqA">
          <branchBehaviour_BranchTransition id="_gYQFVC0ZEe-re8DiDroCqA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_gYQFTy0ZEe-re8DiDroCqA" entityName="Start Action" successor_AbstractAction="_gYQFUC0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_gYQFUC0ZEe-re8DiDroCqA" entityName="stopWatch.stop()" predecessor_AbstractAction="_gYQFTy0ZEe-re8DiDroCqA" successor_AbstractAction="_gYQFUS0ZEe-re8DiDroCqA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_gYQFUS0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYQFUC0ZEe-re8DiDroCqA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_gYQsUS0ZEe-re8DiDroCqA" entityName="Stop Action" predecessor_AbstractAction="_gYQsUC0ZEe-re8DiDroCqA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_gZKrQS0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_gZL5aC0ZEe-re8DiDroCqA" encapsulatedComponent__AssemblyContext="_gY9P4i0ZEe-re8DiDroCqA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_gZNHgC0ZEe-re8DiDroCqA" innerProvidedRole_ProvidedDelegationConnector="_gY9P4S0ZEe-re8DiDroCqA" outerProvidedRole_ProvidedDelegationConnector="_gZKrQC0ZEe-re8DiDroCqA" assemblyContext_ProvidedDelegationConnector="_gZL5aC0ZEe-re8DiDroCqA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_gZKrQC0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_gY5lgC0ZEe-re8DiDroCqA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_gZKrQy0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_gZL5ZC0ZEe-re8DiDroCqA" encapsulatedComponent__AssemblyContext="_gY5lhy0ZEe-re8DiDroCqA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_gZNHgy0ZEe-re8DiDroCqA" innerProvidedRole_ProvidedDelegationConnector="_gY5lhi0ZEe-re8DiDroCqA" outerProvidedRole_ProvidedDelegationConnector="_gZKrQi0ZEe-re8DiDroCqA" assemblyContext_ProvidedDelegationConnector="_gZL5ZC0ZEe-re8DiDroCqA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_gZKrQi0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_gY5lhS0ZEe-re8DiDroCqA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_gZLSUS0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_gZL5ai0ZEe-re8DiDroCqA" encapsulatedComponent__AssemblyContext="_gZHA4y0ZEe-re8DiDroCqA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_gZNHgS0ZEe-re8DiDroCqA" innerProvidedRole_ProvidedDelegationConnector="_gZHA4i0ZEe-re8DiDroCqA" outerProvidedRole_ProvidedDelegationConnector="_gZLSUC0ZEe-re8DiDroCqA" assemblyContext_ProvidedDelegationConnector="_gZL5ai0ZEe-re8DiDroCqA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_gZLSUC0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_gY5lgi0ZEe-re8DiDroCqA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_gZLSVC0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_gZL5YC0ZEe-re8DiDroCqA" encapsulatedComponent__AssemblyContext="_gY_sJy0ZEe-re8DiDroCqA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_gZMgcC0ZEe-re8DiDroCqA" innerProvidedRole_ProvidedDelegationConnector="_gY_sJS0ZEe-re8DiDroCqA" outerProvidedRole_ProvidedDelegationConnector="_gZLSUy0ZEe-re8DiDroCqA" assemblyContext_ProvidedDelegationConnector="_gZL5YC0ZEe-re8DiDroCqA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_gZNHhC0ZEe-re8DiDroCqA" innerProvidedRole_ProvidedDelegationConnector="_gY_sJi0ZEe-re8DiDroCqA" outerProvidedRole_ProvidedDelegationConnector="_gZLSUi0ZEe-re8DiDroCqA" assemblyContext_ProvidedDelegationConnector="_gZL5YC0ZEe-re8DiDroCqA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_gZLSUi0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_gY5lhC0ZEe-re8DiDroCqA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_gZLSUy0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_gY5lgy0ZEe-re8DiDroCqA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_gZLSVi0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_gZL5Zi0ZEe-re8DiDroCqA" encapsulatedComponent__AssemblyContext="_gZEkpS0ZEe-re8DiDroCqA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_gZNHgi0ZEe-re8DiDroCqA" innerProvidedRole_ProvidedDelegationConnector="_gZEkpC0ZEe-re8DiDroCqA" outerProvidedRole_ProvidedDelegationConnector="_gZLSVS0ZEe-re8DiDroCqA" assemblyContext_ProvidedDelegationConnector="_gZL5Zi0ZEe-re8DiDroCqA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_gZLSVS0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_gY5lgS0ZEe-re8DiDroCqA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_gZLSVy0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_gZL5Yi0ZEe-re8DiDroCqA" encapsulatedComponent__AssemblyContext="_gY9P4C0ZEe-re8DiDroCqA"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_gY5lgC0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_gSNHoi0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_gRbEgC0ZEe-re8DiDroCqA">
      <parameters__OperationSignature dataType__Parameter="_gRZ2YC0ZEe-re8DiDroCqA" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_gY5lgS0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_gRbEgS0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_gRbEgC0ZEe-re8DiDroCqA">
      <parameters__OperationSignature dataType__Parameter="_gRZ2YC0ZEe-re8DiDroCqA" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_gY5lgi0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_gSNusC0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_gRbEgC0ZEe-re8DiDroCqA">
      <parameters__OperationSignature dataType__Parameter="_gSNHpS0ZEe-re8DiDroCqA" parameterName="RegistrationTokenRequest" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_gY5lgy0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_gSMglS0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_gSMgkC0ZEe-re8DiDroCqA">
      <parameters__OperationSignature dataType__Parameter="_gSMglC0ZEe-re8DiDroCqA" parameterName="Tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_gY5lhC0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_gSOVwC0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_gSMgkC0ZEe-re8DiDroCqA">
      <parameters__OperationSignature dataType__Parameter="_gSNusy0ZEe-re8DiDroCqA" parameterName="AuthorizationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_gSNutC0ZEe-re8DiDroCqA" parameterName="TeleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_gY5lhS0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_gSMgkS0ZEe-re8DiDroCqA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_gSMgkC0ZEe-re8DiDroCqA">
      <parameters__OperationSignature dataType__Parameter="_gRZ2YC0ZEe-re8DiDroCqA" parameterName="RegistrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_gRZ2YC0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_gRbEgC0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_gSMgkC0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_gSMglC0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_gSNHpS0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_gSNusy0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_gSNutC0ZEe-re8DiDroCqA" entityName="app_coronawarn_verification_model_TeleTanType"/>
</repository:Repository>
