<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_za-k-la-Ee-tFYQhwGkieA">
  <components__Repository xsi:type="repository:BasicComponent" id="_zas4JFa-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_zas4I1a-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_zas4IVa-Ee-tFYQhwGkieA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_zaFNEVa-Ee-tFYQhwGkieA" describedService__SEFF="_zTqcAFa-Ee-tFYQhwGkieA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_zaCJ1Fa-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaCw1la-Ee-tFYQhwGkieA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_zaCw1la-Ee-tFYQhwGkieA" entityName="If Branch" predecessor_AbstractAction="_zaCJ1Fa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaCw11a-Ee-tFYQhwGkieA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaCw01a-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_zaCw1Va-Ee-tFYQhwGkieA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_zaCw0Fa-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaCw0Va-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_zaCw0Va-Ee-tFYQhwGkieA" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_zaCw0Fa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaCw0la-Ee-tFYQhwGkieA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController_generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController_generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_zaCw0la-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaCw0Va-Ee-tFYQhwGkieA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_zaCw11a-Ee-tFYQhwGkieA" entityName="stopWatch.start()" predecessor_AbstractAction="_zaCw1la-Ee-tFYQhwGkieA" successor_AbstractAction="_zaEmEFa-Ee-tFYQhwGkieA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_zaEmEFa-Ee-tFYQhwGkieA" entityName="Switch Branch" predecessor_AbstractAction="_zaCw11a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaFNEFa-Ee-tFYQhwGkieA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaDX71a-Ee-tFYQhwGkieA">
          <branchBehaviour_BranchTransition id="_zaD-8Fa-Ee-tFYQhwGkieA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_zaCw2Fa-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaCw2Va-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_zaCw2Va-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zaCw2Fa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaCw2la-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_zaCw2la-Ee-tFYQhwGkieA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_zaCw2Va-Ee-tFYQhwGkieA" successor_AbstractAction="_zaCw21a-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_zaCw21a-Ee-tFYQhwGkieA" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_zaCw2la-Ee-tFYQhwGkieA" successor_AbstractAction="_zaCw3Fa-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_zaCw3Fa-Ee-tFYQhwGkieA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_zaCw21a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaCw3Va-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_zaCw3Va-Ee-tFYQhwGkieA" entityName="deferredResult" predecessor_AbstractAction="_zaCw3Fa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaDX61a-Ee-tFYQhwGkieA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_zaDX61a-Ee-tFYQhwGkieA" entityName="If Branch" predecessor_AbstractAction="_zaCw3Va-Ee-tFYQhwGkieA" successor_AbstractAction="_zaDX7Fa-Ee-tFYQhwGkieA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaDX6Fa-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_zaDX6la-Ee-tFYQhwGkieA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_zaCw3la-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaDX4Fa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaDX4Fa-Ee-tFYQhwGkieA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_zaCw3la-Ee-tFYQhwGkieA" successor_AbstractAction="_zaDX4Va-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaDX4Va-Ee-tFYQhwGkieA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_zaDX4Fa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaDX4la-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaDX4la-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zaDX4Va-Ee-tFYQhwGkieA" successor_AbstractAction="_zaDX41a-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaDX41a-Ee-tFYQhwGkieA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_zaDX4la-Ee-tFYQhwGkieA" successor_AbstractAction="_zaDX5Fa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaDX5Fa-Ee-tFYQhwGkieA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_zaDX41a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaDX5Va-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaDX5Va-Ee-tFYQhwGkieA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_zaDX5Fa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaDX5la-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_zaDX5la-Ee-tFYQhwGkieA" entityName="deferredResult" predecessor_AbstractAction="_zaDX5Va-Ee-tFYQhwGkieA" successor_AbstractAction="_zaDX51a-Ee-tFYQhwGkieA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_zaDX51a-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaDX5la-Ee-tFYQhwGkieA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_zaDX7Fa-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zaDX61a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaDX7Va-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_zaDX7Va-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zaDX7Fa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaDX7la-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_zaDX7la-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaDX7Va-Ee-tFYQhwGkieA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaEmB1a-Ee-tFYQhwGkieA">
          <branchBehaviour_BranchTransition id="_zaEmCVa-Ee-tFYQhwGkieA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_zaD-8Va-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaEmA1a-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_zaEmA1a-Ee-tFYQhwGkieA" entityName="If Branch" predecessor_AbstractAction="_zaD-8Va-Ee-tFYQhwGkieA" successor_AbstractAction="_zaEmBFa-Ee-tFYQhwGkieA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaEmAFa-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_zaEmAla-Ee-tFYQhwGkieA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_zaD-8la-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaD-81a-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaD-81a-Ee-tFYQhwGkieA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_zaD-8la-Ee-tFYQhwGkieA" successor_AbstractAction="_zaD-9Fa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaD-9Fa-Ee-tFYQhwGkieA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_zaD-81a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaD-9Va-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaD-9Va-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zaD-9Fa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaD-9la-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaD-9la-Ee-tFYQhwGkieA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_zaD-9Va-Ee-tFYQhwGkieA" successor_AbstractAction="_zaD-91a-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaD-91a-Ee-tFYQhwGkieA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_zaD-9la-Ee-tFYQhwGkieA" successor_AbstractAction="_zaD--Fa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaD--Fa-Ee-tFYQhwGkieA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_zaD-91a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaD--Va-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_zaD--Va-Ee-tFYQhwGkieA" entityName="deferredResult" predecessor_AbstractAction="_zaD--Fa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaD--la-Ee-tFYQhwGkieA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_zaD--la-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaD--Va-Ee-tFYQhwGkieA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_zaEmBFa-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zaEmA1a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaEmBVa-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_zaEmBVa-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zaEmBFa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaEmBla-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_zaEmBla-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaEmBVa-Ee-tFYQhwGkieA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaEmDVa-Ee-tFYQhwGkieA">
          <branchBehaviour_BranchTransition id="_zaEmD1a-Ee-tFYQhwGkieA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_zaEmCla-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaEmC1a-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_zaEmC1a-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zaEmCla-Ee-tFYQhwGkieA" successor_AbstractAction="_zaEmDFa-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_zaEmDFa-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaEmC1a-Ee-tFYQhwGkieA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_zaFNEFa-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaEmEFa-Ee-tFYQhwGkieA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_zav7dFa-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_zav7c1a-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_zasRG1a-Ee-tFYQhwGkieA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_zaA7o1a-Ee-tFYQhwGkieA" describedService__SEFF="_zUWYgVa-Ee-tFYQhwGkieA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_zUydYVa-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zZ9RQVa-Ee-tFYQhwGkieA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_zZ9RQVa-Ee-tFYQhwGkieA" entityName="If Branch" predecessor_AbstractAction="_zUydYVa-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ94UFa-Ee-tFYQhwGkieA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zZ8qMFa-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_zZ9RQFa-Ee-tFYQhwGkieA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_zU0SkFa-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zZ8DIFa-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_zZ8DIFa-Ee-tFYQhwGkieA" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_zU0SkFa-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ8DIVa-Ee-tFYQhwGkieA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_zZ8DIVa-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zZ8DIFa-Ee-tFYQhwGkieA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_zZ94UFa-Ee-tFYQhwGkieA" entityName="stopWatch.start()" predecessor_AbstractAction="_zZ9RQVa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaA7oFa-Ee-tFYQhwGkieA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_zaA7oFa-Ee-tFYQhwGkieA" entityName="If Branch" predecessor_AbstractAction="_zZ94UFa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaA7oVa-Ee-tFYQhwGkieA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaAUnla-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_zaAUoFa-Ee-tFYQhwGkieA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_zZ94UVa-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaAUnFa-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_zaAUnFa-Ee-tFYQhwGkieA" entityName="Switch Branch" predecessor_AbstractAction="_zZ94UVa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaAUnVa-Ee-tFYQhwGkieA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zZ_tgla-Ee-tFYQhwGkieA">
                <branchBehaviour_BranchTransition id="_zZ_thFa-Ee-tFYQhwGkieA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_zZ-fYFa-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zZ-fYVa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zZ-fYVa-Ee-tFYQhwGkieA" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_zZ-fYFa-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ-fbVa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_zZ-fbVa-Ee-tFYQhwGkieA" entityName="If Branch" predecessor_AbstractAction="_zZ-fYVa-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ-fbla-Ee-tFYQhwGkieA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zZ-fala-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_zZ-fbFa-Ee-tFYQhwGkieA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_zZ-fYla-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zZ-faFa-Ee-tFYQhwGkieA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_zZ-faFa-Ee-tFYQhwGkieA" entityName="If Branch" predecessor_AbstractAction="_zZ-fYla-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ-faVa-Ee-tFYQhwGkieA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zZ-fZVa-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_zZ-fZ1a-Ee-tFYQhwGkieA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_zZ-fY1a-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zZ-fZFa-Ee-tFYQhwGkieA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_zZ-fZFa-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zZ-fY1a-Ee-tFYQhwGkieA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_zZ-faVa-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zZ-faFa-Ee-tFYQhwGkieA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zZ-fbla-Ee-tFYQhwGkieA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_zZ-fbVa-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ-fb1a-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zZ-fb1a-Ee-tFYQhwGkieA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_zZ-fbla-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ_GcFa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zZ_GcFa-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zZ-fb1a-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ_GcVa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zZ_GcVa-Ee-tFYQhwGkieA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_zZ_GcFa-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ_Gcla-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zZ_Gcla-Ee-tFYQhwGkieA" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_zZ_GcVa-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ_Gc1a-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_zZ_Gc1a-Ee-tFYQhwGkieA" entityName="deferredResult" predecessor_AbstractAction="_zZ_Gcla-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ_GdFa-Ee-tFYQhwGkieA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zZ_GdFa-Ee-tFYQhwGkieA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_zZ_Gc1a-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ_GdVa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zZ_GdVa-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zZ_GdFa-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ_Gdla-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zZ_Gdla-Ee-tFYQhwGkieA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_zZ_GdVa-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ_Gd1a-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zZ_Gd1a-Ee-tFYQhwGkieA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_zZ_Gdla-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ_GeFa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_zZ_GeFa-Ee-tFYQhwGkieA" entityName="deferredResult" predecessor_AbstractAction="_zZ_Gd1a-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ_tgFa-Ee-tFYQhwGkieA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zZ_tgFa-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zZ_GeFa-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ_tgVa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_zZ_tgVa-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zZ_tgFa-Ee-tFYQhwGkieA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaAUk1a-Ee-tFYQhwGkieA">
                <branchBehaviour_BranchTransition id="_zaAUlVa-Ee-tFYQhwGkieA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_zZ_thVa-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zZ_thla-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zZ_thla-Ee-tFYQhwGkieA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_zZ_thVa-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ_th1a-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zZ_th1a-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zZ_thla-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ_tiFa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zZ_tiFa-Ee-tFYQhwGkieA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_zZ_th1a-Ee-tFYQhwGkieA" successor_AbstractAction="_zZ_tiVa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zZ_tiVa-Ee-tFYQhwGkieA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_zZ_tiFa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaAUkFa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_zaAUkFa-Ee-tFYQhwGkieA" entityName="deferredResult" predecessor_AbstractAction="_zZ_tiVa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaAUkVa-Ee-tFYQhwGkieA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaAUkVa-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zaAUkFa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaAUkla-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_zaAUkla-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaAUkVa-Ee-tFYQhwGkieA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaAUmVa-Ee-tFYQhwGkieA">
                <branchBehaviour_BranchTransition id="_zaAUm1a-Ee-tFYQhwGkieA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_zaAUlla-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaAUl1a-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaAUl1a-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zaAUlla-Ee-tFYQhwGkieA" successor_AbstractAction="_zaAUmFa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_zaAUmFa-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaAUl1a-Ee-tFYQhwGkieA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_zaAUnVa-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaAUnFa-Ee-tFYQhwGkieA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_zaA7oVa-Ee-tFYQhwGkieA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_zaA7oFa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaA7ola-Ee-tFYQhwGkieA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_zaA7ola-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaA7oVa-Ee-tFYQhwGkieA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_zayXu1a-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_zayXuVa-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_zas4IFa-Ee-tFYQhwGkieA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_zayXula-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_zas4Ila-Ee-tFYQhwGkieA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_zaIQZla-Ee-tFYQhwGkieA" describedService__SEFF="_zUVxcla-Ee-tFYQhwGkieA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_zaIQY1a-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaIQZFa-Ee-tFYQhwGkieA"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_zaIQZFa-Ee-tFYQhwGkieA" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_zaIQY1a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaIQZVa-Ee-tFYQhwGkieA">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_zaIQZVa-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaIQZFa-Ee-tFYQhwGkieA"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_zaIQYVa-Ee-tFYQhwGkieA" describedService__SEFF="_zUXmpFa-Ee-tFYQhwGkieA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_zaHCSFa-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaHpUVa-Ee-tFYQhwGkieA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_zaHpUVa-Ee-tFYQhwGkieA" entityName="If Branch" predecessor_AbstractAction="_zaHCSFa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaHpZFa-Ee-tFYQhwGkieA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaHCTFa-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_zaHCTla-Ee-tFYQhwGkieA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_zaHCSVa-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaHCSla-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_zaHCSla-Ee-tFYQhwGkieA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_zaHCSVa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaHCS1a-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_zaHCS1a-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaHCSla-Ee-tFYQhwGkieA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaHCUla-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_zaHpUFa-Ee-tFYQhwGkieA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_zaHCT1a-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaHCUFa-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_zaHCUFa-Ee-tFYQhwGkieA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_zaHCT1a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaHCUVa-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_zaHCUVa-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaHCUFa-Ee-tFYQhwGkieA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_zaHpZFa-Ee-tFYQhwGkieA" entityName="If Branch" predecessor_AbstractAction="_zaHpUVa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaIQYFa-Ee-tFYQhwGkieA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaHpYVa-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_zaHpY1a-Ee-tFYQhwGkieA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_zaHpUla-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaHpX1a-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_zaHpX1a-Ee-tFYQhwGkieA" entityName="If Branch" predecessor_AbstractAction="_zaHpUla-Ee-tFYQhwGkieA" successor_AbstractAction="_zaHpYFa-Ee-tFYQhwGkieA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaHpV1a-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_zaHpWVa-Ee-tFYQhwGkieA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_zaHpU1a-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaHpVFa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaHpVFa-Ee-tFYQhwGkieA" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_zaHpU1a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaHpVVa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_zaHpVVa-Ee-tFYQhwGkieA" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_zaHpVFa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaHpVla-Ee-tFYQhwGkieA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_zaHpVla-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaHpVVa-Ee-tFYQhwGkieA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaHpXFa-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_zaHpXla-Ee-tFYQhwGkieA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_zaHpWla-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaHpW1a-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_zaHpW1a-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaHpWla-Ee-tFYQhwGkieA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_zaHpYFa-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaHpX1a-Ee-tFYQhwGkieA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_zaIQYFa-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaHpZFa-Ee-tFYQhwGkieA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_za3QNFa-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_za3QNla-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_za3QNVa-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_zasRGla-Ee-tFYQhwGkieA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_zaHCRla-Ee-tFYQhwGkieA" describedService__SEFF="_zUW_kFa-Ee-tFYQhwGkieA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_zaFNE1a-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaFNGla-Ee-tFYQhwGkieA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_zaFNGla-Ee-tFYQhwGkieA" entityName="If Branch" predecessor_AbstractAction="_zaFNE1a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaFNG1a-Ee-tFYQhwGkieA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaFNF1a-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_zaFNGVa-Ee-tFYQhwGkieA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_zaFNFFa-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaFNFVa-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_zaFNFVa-Ee-tFYQhwGkieA" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_zaFNFFa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaFNFla-Ee-tFYQhwGkieA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_zaFNFla-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaFNFVa-Ee-tFYQhwGkieA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_zaFNG1a-Ee-tFYQhwGkieA" entityName="stopWatch.start()" predecessor_AbstractAction="_zaFNGla-Ee-tFYQhwGkieA" successor_AbstractAction="_zaHCRFa-Ee-tFYQhwGkieA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_zaHCRFa-Ee-tFYQhwGkieA" entityName="If Branch" predecessor_AbstractAction="_zaFNG1a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaHCRVa-Ee-tFYQhwGkieA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaHCQVa-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_zaHCQ1a-Ee-tFYQhwGkieA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_zaFNHFa-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaGbPVa-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_zaGbPVa-Ee-tFYQhwGkieA" entityName="If Branch" predecessor_AbstractAction="_zaFNHFa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaHCQFa-Ee-tFYQhwGkieA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaGbOla-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_zaGbPFa-Ee-tFYQhwGkieA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_zaFNHVa-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaGbMFa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_zaGbMFa-Ee-tFYQhwGkieA" entityName="Switch Branch" predecessor_AbstractAction="_zaFNHVa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaGbMVa-Ee-tFYQhwGkieA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaF0JFa-Ee-tFYQhwGkieA">
                      <branchBehaviour_BranchTransition id="_zaF0Jla-Ee-tFYQhwGkieA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_zaFNHla-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaF0IVa-Ee-tFYQhwGkieA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_zaF0IVa-Ee-tFYQhwGkieA" entityName="If Branch" predecessor_AbstractAction="_zaFNHla-Ee-tFYQhwGkieA" successor_AbstractAction="_zaF0Ila-Ee-tFYQhwGkieA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaFNIla-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_zaF0IFa-Ee-tFYQhwGkieA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_zaFNH1a-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaFNIFa-Ee-tFYQhwGkieA"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_zaFNIFa-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zaFNH1a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaFNIVa-Ee-tFYQhwGkieA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_zaFNIVa-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaFNIFa-Ee-tFYQhwGkieA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_zaF0Ila-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zaF0IVa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaF0I1a-Ee-tFYQhwGkieA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_zaF0I1a-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaF0Ila-Ee-tFYQhwGkieA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaF0Kla-Ee-tFYQhwGkieA">
                      <branchBehaviour_BranchTransition id="_zaF0LFa-Ee-tFYQhwGkieA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_zaF0J1a-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaF0KFa-Ee-tFYQhwGkieA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_zaF0KFa-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zaF0J1a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaF0KVa-Ee-tFYQhwGkieA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_zaF0KVa-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaF0KFa-Ee-tFYQhwGkieA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaF0MFa-Ee-tFYQhwGkieA">
                      <branchBehaviour_BranchTransition id="_zaF0Mla-Ee-tFYQhwGkieA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_zaF0LVa-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaF0Lla-Ee-tFYQhwGkieA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_zaF0Lla-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zaF0LVa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaF0L1a-Ee-tFYQhwGkieA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_zaF0L1a-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaF0Lla-Ee-tFYQhwGkieA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaGbMVa-Ee-tFYQhwGkieA" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_zaGbMFa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaGbMla-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaGbMla-Ee-tFYQhwGkieA" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_zaGbMVa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaGbM1a-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaGbM1a-Ee-tFYQhwGkieA" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_zaGbMla-Ee-tFYQhwGkieA" successor_AbstractAction="_zaGbNFa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaGbNFa-Ee-tFYQhwGkieA" entityName="stopWatch.stop()" predecessor_AbstractAction="_zaGbM1a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaGbNVa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaGbNVa-Ee-tFYQhwGkieA" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_zaGbNFa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaGbNla-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaGbNla-Ee-tFYQhwGkieA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_zaGbNVa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaGbN1a-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaGbN1a-Ee-tFYQhwGkieA" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_zaGbNla-Ee-tFYQhwGkieA" successor_AbstractAction="_zaGbOFa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_zaGbOFa-Ee-tFYQhwGkieA" entityName="deferredResult" predecessor_AbstractAction="_zaGbN1a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaGbOVa-Ee-tFYQhwGkieA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_zaGbOVa-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaGbOFa-Ee-tFYQhwGkieA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_zaHCQFa-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaGbPVa-Ee-tFYQhwGkieA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_zaHCRVa-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaHCRFa-Ee-tFYQhwGkieA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_za5scVa-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_za5scFa-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_zasRGVa-Ee-tFYQhwGkieA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_zaCJ0la-Ee-tFYQhwGkieA" describedService__SEFF="_zUW_k1a-Ee-tFYQhwGkieA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_zaA7pVa-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaCJz1a-Ee-tFYQhwGkieA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_zaCJz1a-Ee-tFYQhwGkieA" entityName="If Branch" predecessor_AbstractAction="_zaA7pVa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaCJ0Fa-Ee-tFYQhwGkieA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaCJzFa-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_zaCJzla-Ee-tFYQhwGkieA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_zaA7pla-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaCJyla-Ee-tFYQhwGkieA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_zaCJyla-Ee-tFYQhwGkieA" entityName="Switch Branch" predecessor_AbstractAction="_zaA7pla-Ee-tFYQhwGkieA" successor_AbstractAction="_zaCJy1a-Ee-tFYQhwGkieA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaBit1a-Ee-tFYQhwGkieA">
                <branchBehaviour_BranchTransition id="_zaBiuVa-Ee-tFYQhwGkieA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_zaA7p1a-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaBisVa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_zaBisVa-Ee-tFYQhwGkieA" entityName="If Branch" predecessor_AbstractAction="_zaA7p1a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaBisla-Ee-tFYQhwGkieA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaA7sFa-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_zaBisFa-Ee-tFYQhwGkieA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_zaA7qFa-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaA7rla-Ee-tFYQhwGkieA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_zaA7rla-Ee-tFYQhwGkieA" entityName="If Branch" predecessor_AbstractAction="_zaA7qFa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaA7r1a-Ee-tFYQhwGkieA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaA7q1a-Ee-tFYQhwGkieA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_zaA7rVa-Ee-tFYQhwGkieA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_zaA7qVa-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaA7qla-Ee-tFYQhwGkieA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_zaA7qla-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaA7qVa-Ee-tFYQhwGkieA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_zaA7r1a-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaA7rla-Ee-tFYQhwGkieA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaBisla-Ee-tFYQhwGkieA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_zaBisVa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaBis1a-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaBis1a-Ee-tFYQhwGkieA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_zaBisla-Ee-tFYQhwGkieA" successor_AbstractAction="_zaBitFa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_zaBitFa-Ee-tFYQhwGkieA" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_zaBis1a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaBitVa-Ee-tFYQhwGkieA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaBitVa-Ee-tFYQhwGkieA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_zaBitFa-Ee-tFYQhwGkieA" successor_AbstractAction="_zaBitla-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_zaBitla-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaBitVa-Ee-tFYQhwGkieA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaCJwla-Ee-tFYQhwGkieA">
                <branchBehaviour_BranchTransition id="_zaCJxFa-Ee-tFYQhwGkieA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_zaBiula-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaCJwFa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_zaCJwFa-Ee-tFYQhwGkieA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_zaBiula-Ee-tFYQhwGkieA" successor_AbstractAction="_zaCJwVa-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_zaCJwVa-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaCJwFa-Ee-tFYQhwGkieA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_zaCJx1a-Ee-tFYQhwGkieA">
                <branchBehaviour_BranchTransition id="_zaCJyVa-Ee-tFYQhwGkieA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_zaCJxVa-Ee-tFYQhwGkieA" entityName="Start Action" successor_AbstractAction="_zaCJxla-Ee-tFYQhwGkieA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_zaCJxla-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaCJxVa-Ee-tFYQhwGkieA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_zaCJy1a-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaCJyla-Ee-tFYQhwGkieA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_zaCJ0Fa-Ee-tFYQhwGkieA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_zaCJz1a-Ee-tFYQhwGkieA" successor_AbstractAction="_zaCJ0Va-Ee-tFYQhwGkieA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_zaCJ0Va-Ee-tFYQhwGkieA" entityName="Stop Action" predecessor_AbstractAction="_zaCJ0Fa-Ee-tFYQhwGkieA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_za994Fa-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_za-k9Fa-Ee-tFYQhwGkieA" encapsulatedComponent__AssemblyContext="_zav7dFa-Ee-tFYQhwGkieA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_za_MBVa-Ee-tFYQhwGkieA" innerProvidedRole_ProvidedDelegationConnector="_zav7c1a-Ee-tFYQhwGkieA" outerProvidedRole_ProvidedDelegationConnector="_za9W0Fa-Ee-tFYQhwGkieA" assemblyContext_ProvidedDelegationConnector="_za-k9Fa-Ee-tFYQhwGkieA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_za9W0Fa-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_zasRG1a-Ee-tFYQhwGkieA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_za994la-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_za-k8Fa-Ee-tFYQhwGkieA" encapsulatedComponent__AssemblyContext="_za3QNla-Ee-tFYQhwGkieA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_za_MAVa-Ee-tFYQhwGkieA" innerProvidedRole_ProvidedDelegationConnector="_za3QNVa-Ee-tFYQhwGkieA" outerProvidedRole_ProvidedDelegationConnector="_za994Va-Ee-tFYQhwGkieA" assemblyContext_ProvidedDelegationConnector="_za-k8Fa-Ee-tFYQhwGkieA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_za994Va-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_zasRGla-Ee-tFYQhwGkieA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_za9941a-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_za-k8la-Ee-tFYQhwGkieA" encapsulatedComponent__AssemblyContext="_za3QNFa-Ee-tFYQhwGkieA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_za995Va-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_za-k-Fa-Ee-tFYQhwGkieA" encapsulatedComponent__AssemblyContext="_zas4JFa-Ee-tFYQhwGkieA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_za_MAla-Ee-tFYQhwGkieA" innerProvidedRole_ProvidedDelegationConnector="_zas4I1a-Ee-tFYQhwGkieA" outerProvidedRole_ProvidedDelegationConnector="_za995Fa-Ee-tFYQhwGkieA" assemblyContext_ProvidedDelegationConnector="_za-k-Fa-Ee-tFYQhwGkieA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_za995Fa-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_zas4IVa-Ee-tFYQhwGkieA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_za996Fa-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_za9961a-Ee-tFYQhwGkieA" encapsulatedComponent__AssemblyContext="_zayXu1a-Ee-tFYQhwGkieA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_za_MAFa-Ee-tFYQhwGkieA" innerProvidedRole_ProvidedDelegationConnector="_zayXuVa-Ee-tFYQhwGkieA" outerProvidedRole_ProvidedDelegationConnector="_za9951a-Ee-tFYQhwGkieA" assemblyContext_ProvidedDelegationConnector="_za9961a-Ee-tFYQhwGkieA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_za_MA1a-Ee-tFYQhwGkieA" innerProvidedRole_ProvidedDelegationConnector="_zayXula-Ee-tFYQhwGkieA" outerProvidedRole_ProvidedDelegationConnector="_za995la-Ee-tFYQhwGkieA" assemblyContext_ProvidedDelegationConnector="_za9961a-Ee-tFYQhwGkieA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_za995la-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_zas4Ila-Ee-tFYQhwGkieA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_za9951a-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_zas4IFa-Ee-tFYQhwGkieA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_za996la-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_za-k9la-Ee-tFYQhwGkieA" encapsulatedComponent__AssemblyContext="_za5scVa-Ee-tFYQhwGkieA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_za_MBFa-Ee-tFYQhwGkieA" innerProvidedRole_ProvidedDelegationConnector="_za5scFa-Ee-tFYQhwGkieA" outerProvidedRole_ProvidedDelegationConnector="_za996Va-Ee-tFYQhwGkieA" assemblyContext_ProvidedDelegationConnector="_za-k9la-Ee-tFYQhwGkieA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_za996Va-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_zasRGVa-Ee-tFYQhwGkieA"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_zasRGVa-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_zUW_k1a-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_zUVxcVa-Ee-tFYQhwGkieA">
      <parameters__OperationSignature dataType__Parameter="_zUWYgFa-Ee-tFYQhwGkieA" parameterName="registrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_zasRGla-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_zUW_kFa-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_zTp08Fa-Ee-tFYQhwGkieA">
      <parameters__OperationSignature dataType__Parameter="_zUWYgFa-Ee-tFYQhwGkieA" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_zasRG1a-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_zUWYgVa-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_zTp08Fa-Ee-tFYQhwGkieA">
      <parameters__OperationSignature dataType__Parameter="_zUWYgFa-Ee-tFYQhwGkieA" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_zas4IFa-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_zUVxcla-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_zUVxcVa-Ee-tFYQhwGkieA">
      <parameters__OperationSignature dataType__Parameter="_zUVxcFa-Ee-tFYQhwGkieA" parameterName="tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_zas4IVa-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_zTqcAFa-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_zTp08Fa-Ee-tFYQhwGkieA">
      <parameters__OperationSignature dataType__Parameter="_zTom0Fa-Ee-tFYQhwGkieA" parameterName="request" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_zas4Ila-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_zUXmpFa-Ee-tFYQhwGkieA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_zUVxcVa-Ee-tFYQhwGkieA">
      <parameters__OperationSignature dataType__Parameter="_zUXmola-Ee-tFYQhwGkieA" parameterName="authorization" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_zUXmo1a-Ee-tFYQhwGkieA" parameterName="teleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_zTom0Fa-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_zTp08Fa-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_zUVxcFa-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_zUVxcVa-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_zUWYgFa-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_zUXmola-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_zUXmo1a-Ee-tFYQhwGkieA" entityName="app_coronawarn_verification_model_TeleTanType"/>
</repository:Repository>
