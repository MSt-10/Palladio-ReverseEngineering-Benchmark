<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_0GkRzCxPEe-awvKJQLRjUQ">
  <components__Repository xsi:type="repository:BasicComponent" id="_0GPhqSxPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_0GQIsSxPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0GQIsCxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_0GPhpSxPEe-awvKJQLRjUQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_0FpEwCxPEe-awvKJQLRjUQ" describedService__SEFF="_0AOZMixPEe-awvKJQLRjUQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_0FnPkCxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FnPlyxPEe-awvKJQLRjUQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_0FnPlyxPEe-awvKJQLRjUQ" entityName="If Branch" predecessor_AbstractAction="_0FnPkCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FnPmCxPEe-awvKJQLRjUQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FnPlCxPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_0FnPlixPEe-awvKJQLRjUQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_0FnPkSxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FnPkixPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_0FnPkixPEe-awvKJQLRjUQ" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_0FnPkSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FnPkyxPEe-awvKJQLRjUQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController.generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController.generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_0FnPkyxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FnPkixPEe-awvKJQLRjUQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_0FnPmCxPEe-awvKJQLRjUQ" entityName="stopWatch.start()" predecessor_AbstractAction="_0FnPlyxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FpEvixPEe-awvKJQLRjUQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_0FpEvixPEe-awvKJQLRjUQ" entityName="Switch Branch" predecessor_AbstractAction="_0FnPmCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FpEvyxPEe-awvKJQLRjUQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FodpCxPEe-awvKJQLRjUQ">
          <branchBehaviour_BranchTransition id="_0FodpixPEe-awvKJQLRjUQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_0Fn2kCxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0Fn2kSxPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_0Fn2kSxPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0Fn2kCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fn2kixPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_0Fn2kixPEe-awvKJQLRjUQ" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_0Fn2kSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fn2kyxPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_0Fn2kyxPEe-awvKJQLRjUQ" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_0Fn2kixPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fn2lCxPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_0Fn2lCxPEe-awvKJQLRjUQ" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_0Fn2kyxPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fn2lSxPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_0Fn2lSxPEe-awvKJQLRjUQ" entityName="deferredResult" predecessor_AbstractAction="_0Fn2lCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FodoCxPEe-awvKJQLRjUQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_0FodoCxPEe-awvKJQLRjUQ" entityName="If Branch" predecessor_AbstractAction="_0Fn2lSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FodoSxPEe-awvKJQLRjUQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0Fn2nyxPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_0Fn2oSxPEe-awvKJQLRjUQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_0Fn2lixPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0Fn2lyxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0Fn2lyxPEe-awvKJQLRjUQ" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_0Fn2lixPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fn2mCxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0Fn2mCxPEe-awvKJQLRjUQ" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_0Fn2lyxPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fn2mSxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0Fn2mSxPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0Fn2mCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fn2mixPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0Fn2mixPEe-awvKJQLRjUQ" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_0Fn2mSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fn2myxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0Fn2myxPEe-awvKJQLRjUQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_0Fn2mixPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fn2nCxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0Fn2nCxPEe-awvKJQLRjUQ" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_0Fn2myxPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fn2nSxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_0Fn2nSxPEe-awvKJQLRjUQ" entityName="deferredResult" predecessor_AbstractAction="_0Fn2nCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fn2nixPEe-awvKJQLRjUQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_0Fn2nixPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0Fn2nSxPEe-awvKJQLRjUQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_0FodoSxPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0FodoCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FodoixPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_0FodoixPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0FodoSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FodoyxPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_0FodoyxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FodoixPEe-awvKJQLRjUQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FpEtSxPEe-awvKJQLRjUQ">
          <branchBehaviour_BranchTransition id="_0FpEtyxPEe-awvKJQLRjUQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_0FodpyxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FpEsSxPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_0FpEsSxPEe-awvKJQLRjUQ" entityName="If Branch" predecessor_AbstractAction="_0FodpyxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FpEsixPEe-awvKJQLRjUQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FodsSxPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_0FpEsCxPEe-awvKJQLRjUQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_0FodqCxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FodqSxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FodqSxPEe-awvKJQLRjUQ" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_0FodqCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FodqixPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FodqixPEe-awvKJQLRjUQ" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_0FodqSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FodqyxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FodqyxPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0FodqixPEe-awvKJQLRjUQ" successor_AbstractAction="_0FodrCxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FodrCxPEe-awvKJQLRjUQ" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_0FodqyxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FodrSxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FodrSxPEe-awvKJQLRjUQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_0FodrCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FodrixPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FodrixPEe-awvKJQLRjUQ" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_0FodrSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FodryxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_0FodryxPEe-awvKJQLRjUQ" entityName="deferredResult" predecessor_AbstractAction="_0FodrixPEe-awvKJQLRjUQ" successor_AbstractAction="_0FodsCxPEe-awvKJQLRjUQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_0FodsCxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FodryxPEe-awvKJQLRjUQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_0FpEsixPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0FpEsSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FpEsyxPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_0FpEsyxPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0FpEsixPEe-awvKJQLRjUQ" successor_AbstractAction="_0FpEtCxPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_0FpEtCxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FpEsyxPEe-awvKJQLRjUQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FpEuyxPEe-awvKJQLRjUQ">
          <branchBehaviour_BranchTransition id="_0FpEvSxPEe-awvKJQLRjUQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_0FpEuCxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FpEuSxPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_0FpEuSxPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0FpEuCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FpEuixPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_0FpEuixPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FpEuSxPEe-awvKJQLRjUQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_0FpEvyxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FpEvixPEe-awvKJQLRjUQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_0GVoQixPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0GVoQCxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_0GPhqCxPEe-awvKJQLRjUQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0GVoQSxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_0GPhpCxPEe-awvKJQLRjUQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_0Fhv9ixPEe-awvKJQLRjUQ" describedService__SEFF="_0ANLESxPEe-awvKJQLRjUQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_0Fhv8yxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0Fhv9CxPEe-awvKJQLRjUQ"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_0Fhv9CxPEe-awvKJQLRjUQ" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_0Fhv8yxPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fhv9SxPEe-awvKJQLRjUQ">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_0Fhv9SxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0Fhv9CxPEe-awvKJQLRjUQ"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_0Fhv8SxPEe-awvKJQLRjUQ" describedService__SEFF="_z_YEoCxPEe-awvKJQLRjUQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_0ApP8SxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FeFkCxPEe-awvKJQLRjUQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_0FeFkCxPEe-awvKJQLRjUQ" entityName="If Branch" predecessor_AbstractAction="_0ApP8SxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FhI7yxPEe-awvKJQLRjUQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0AsTQCxPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_0As6UCxPEe-awvKJQLRjUQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_0ArFICxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0ArsMCxPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_0ArsMCxPEe-awvKJQLRjUQ" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_0ArFICxPEe-awvKJQLRjUQ" successor_AbstractAction="_0ArsMSxPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_0ArsMSxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0ArsMCxPEe-awvKJQLRjUQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FdegyxPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_0FdehSxPEe-awvKJQLRjUQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_0FdegCxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FdegSxPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_0FdegSxPEe-awvKJQLRjUQ" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_0FdegCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FdegixPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_0FdegixPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FdegSxPEe-awvKJQLRjUQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_0FhI7yxPEe-awvKJQLRjUQ" entityName="If Branch" predecessor_AbstractAction="_0FeFkCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fhv8CxPEe-awvKJQLRjUQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FhI7CxPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_0FhI7ixPEe-awvKJQLRjUQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_0FeFkSxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FhI6ixPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_0FhI6ixPEe-awvKJQLRjUQ" entityName="If Branch" predecessor_AbstractAction="_0FeFkSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FhI6yxPEe-awvKJQLRjUQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FhI4ixPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_0FhI5CxPEe-awvKJQLRjUQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_0FeFkixPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FeFkyxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FeFkyxPEe-awvKJQLRjUQ" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_0FeFkixPEe-awvKJQLRjUQ" successor_AbstractAction="_0FhI4CxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_0FhI4CxPEe-awvKJQLRjUQ" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_0FeFkyxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FhI4SxPEe-awvKJQLRjUQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_0FhI4SxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FhI4CxPEe-awvKJQLRjUQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FhI5yxPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_0FhI6SxPEe-awvKJQLRjUQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_0FhI5SxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FhI5ixPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_0FhI5ixPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FhI5SxPEe-awvKJQLRjUQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_0FhI6yxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FhI6ixPEe-awvKJQLRjUQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_0Fhv8CxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FhI7yxPEe-awvKJQLRjUQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_0GagxCxPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0GagwyxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_0GPhpixPEe-awvKJQLRjUQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_0FnPjixPEe-awvKJQLRjUQ" describedService__SEFF="_0ANyJCxPEe-awvKJQLRjUQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_0FlaWixPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FlaYSxPEe-awvKJQLRjUQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_0FlaYSxPEe-awvKJQLRjUQ" entityName="If Branch" predecessor_AbstractAction="_0FlaWixPEe-awvKJQLRjUQ" successor_AbstractAction="_0FlaYixPEe-awvKJQLRjUQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FlaXixPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_0FlaYCxPEe-awvKJQLRjUQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_0FlaWyxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FlaXCxPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_0FlaXCxPEe-awvKJQLRjUQ" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_0FlaWyxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FlaXSxPEe-awvKJQLRjUQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_0FlaXSxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FlaXCxPEe-awvKJQLRjUQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_0FlaYixPEe-awvKJQLRjUQ" entityName="stopWatch.start()" predecessor_AbstractAction="_0FlaYSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FnPiyxPEe-awvKJQLRjUQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_0FnPiyxPEe-awvKJQLRjUQ" entityName="If Branch" predecessor_AbstractAction="_0FlaYixPEe-awvKJQLRjUQ" successor_AbstractAction="_0FnPjCxPEe-awvKJQLRjUQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FnPiCxPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_0FnPiixPEe-awvKJQLRjUQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_0FlaYyxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FnPhixPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_0FnPhixPEe-awvKJQLRjUQ" entityName="Switch Branch" predecessor_AbstractAction="_0FlaYyxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FnPhyxPEe-awvKJQLRjUQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FmodCxPEe-awvKJQLRjUQ">
                <branchBehaviour_BranchTransition id="_0FmodixPEe-awvKJQLRjUQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_0FlaZCxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FmBYCxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FmBYCxPEe-awvKJQLRjUQ" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_0FlaZCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmBbCxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_0FmBbCxPEe-awvKJQLRjUQ" entityName="If Branch" predecessor_AbstractAction="_0FmBYCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmBbSxPEe-awvKJQLRjUQ">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FmBaSxPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_0FmBayxPEe-awvKJQLRjUQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_0FmBYSxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FmBZyxPEe-awvKJQLRjUQ"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_0FmBZyxPEe-awvKJQLRjUQ" entityName="If Branch" predecessor_AbstractAction="_0FmBYSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmBaCxPEe-awvKJQLRjUQ">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FmBZCxPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_0FmBZixPEe-awvKJQLRjUQ">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_0FmBYixPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FmBYyxPEe-awvKJQLRjUQ"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_0FmBYyxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FmBYixPEe-awvKJQLRjUQ"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_0FmBaCxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FmBZyxPEe-awvKJQLRjUQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FmBbSxPEe-awvKJQLRjUQ" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_0FmBbCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmBbixPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FmBbixPEe-awvKJQLRjUQ" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_0FmBbSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmBbyxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FmBbyxPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0FmBbixPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmBcCxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FmBcCxPEe-awvKJQLRjUQ" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_0FmBbyxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmBcSxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FmBcSxPEe-awvKJQLRjUQ" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_0FmBcCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmBcixPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_0FmBcixPEe-awvKJQLRjUQ" entityName="deferredResult" predecessor_AbstractAction="_0FmBcSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmBcyxPEe-awvKJQLRjUQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FmBcyxPEe-awvKJQLRjUQ" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_0FmBcixPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmBdCxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FmBdCxPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0FmBcyxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmBdSxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FmBdSxPEe-awvKJQLRjUQ" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_0FmBdCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmocCxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FmocCxPEe-awvKJQLRjUQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_0FmBdSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmocSxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_0FmocSxPEe-awvKJQLRjUQ" entityName="deferredResult" predecessor_AbstractAction="_0FmocCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmocixPEe-awvKJQLRjUQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FmocixPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0FmocSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmocyxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_0FmocyxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FmocixPEe-awvKJQLRjUQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FmofyxPEe-awvKJQLRjUQ">
                <branchBehaviour_BranchTransition id="_0FmogSxPEe-awvKJQLRjUQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_0FmodyxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FmoeCxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FmoeCxPEe-awvKJQLRjUQ" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_0FmodyxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmoeSxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FmoeSxPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0FmoeCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmoeixPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FmoeixPEe-awvKJQLRjUQ" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_0FmoeSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmoeyxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FmoeyxPEe-awvKJQLRjUQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_0FmoeixPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmofCxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_0FmofCxPEe-awvKJQLRjUQ" entityName="deferredResult" predecessor_AbstractAction="_0FmoeyxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmofSxPEe-awvKJQLRjUQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FmofSxPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0FmofCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FmofixPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_0FmofixPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FmofSxPEe-awvKJQLRjUQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FnPgyxPEe-awvKJQLRjUQ">
                <branchBehaviour_BranchTransition id="_0FnPhSxPEe-awvKJQLRjUQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_0FnPgCxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FnPgSxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FnPgSxPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0FnPgCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FnPgixPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_0FnPgixPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FnPgSxPEe-awvKJQLRjUQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_0FnPhyxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FnPhixPEe-awvKJQLRjUQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_0FnPjCxPEe-awvKJQLRjUQ" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_0FnPiyxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FnPjSxPEe-awvKJQLRjUQ"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_0FnPjSxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FnPjCxPEe-awvKJQLRjUQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_0Gc9ASxPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0Gc9ACxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_0GPhpyxPEe-awvKJQLRjUQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_0FjlMCxPEe-awvKJQLRjUQ" describedService__SEFF="_0APAQyxPEe-awvKJQLRjUQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_0Fhv-CxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FjlLSxPEe-awvKJQLRjUQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_0FjlLSxPEe-awvKJQLRjUQ" entityName="If Branch" predecessor_AbstractAction="_0Fhv-CxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FjlLixPEe-awvKJQLRjUQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FjlKixPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_0FjlLCxPEe-awvKJQLRjUQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_0FiXACxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FjlKCxPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_0FjlKCxPEe-awvKJQLRjUQ" entityName="Switch Branch" predecessor_AbstractAction="_0FiXACxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FjlKSxPEe-awvKJQLRjUQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0Fi-GixPEe-awvKJQLRjUQ">
                <branchBehaviour_BranchTransition id="_0Fi-HCxPEe-awvKJQLRjUQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_0FiXASxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0Fi-FCxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_0Fi-FCxPEe-awvKJQLRjUQ" entityName="If Branch" predecessor_AbstractAction="_0FiXASxPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fi-FSxPEe-awvKJQLRjUQ">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0Fi-ESxPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_0Fi-EyxPEe-awvKJQLRjUQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_0FiXAixPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FiXCCxPEe-awvKJQLRjUQ"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_0FiXCCxPEe-awvKJQLRjUQ" entityName="If Branch" predecessor_AbstractAction="_0FiXAixPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fi-ECxPEe-awvKJQLRjUQ">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FiXBSxPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_0FiXByxPEe-awvKJQLRjUQ">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_0FiXAyxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FiXBCxPEe-awvKJQLRjUQ"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_0FiXBCxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FiXAyxPEe-awvKJQLRjUQ"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_0Fi-ECxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FiXCCxPEe-awvKJQLRjUQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0Fi-FSxPEe-awvKJQLRjUQ" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_0Fi-FCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fi-FixPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0Fi-FixPEe-awvKJQLRjUQ" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_0Fi-FSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fi-FyxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_0Fi-FyxPEe-awvKJQLRjUQ" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_0Fi-FixPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fi-GCxPEe-awvKJQLRjUQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0Fi-GCxPEe-awvKJQLRjUQ" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_0Fi-FyxPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fi-GSxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_0Fi-GSxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0Fi-GCxPEe-awvKJQLRjUQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FjlICxPEe-awvKJQLRjUQ">
                <branchBehaviour_BranchTransition id="_0FjlIixPEe-awvKJQLRjUQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_0Fi-HSxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0Fi-HixPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0Fi-HixPEe-awvKJQLRjUQ" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_0Fi-HSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0Fi-HyxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_0Fi-HyxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0Fi-HixPEe-awvKJQLRjUQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FjlJSxPEe-awvKJQLRjUQ">
                <branchBehaviour_BranchTransition id="_0FjlJyxPEe-awvKJQLRjUQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_0FjlIyxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FjlJCxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_0FjlJCxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FjlIyxPEe-awvKJQLRjUQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_0FjlKSxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FjlKCxPEe-awvKJQLRjUQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_0FjlLixPEe-awvKJQLRjUQ" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_0FjlLSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FjlLyxPEe-awvKJQLRjUQ"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_0FjlLyxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FjlLixPEe-awvKJQLRjUQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_0GfZSixPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0GfZSSxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_0GPhoyxPEe-awvKJQLRjUQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_0FlaWCxPEe-awvKJQLRjUQ" describedService__SEFF="_0APAQCxPEe-awvKJQLRjUQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_0FjlMixPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FjlOSxPEe-awvKJQLRjUQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_0FjlOSxPEe-awvKJQLRjUQ" entityName="If Branch" predecessor_AbstractAction="_0FjlMixPEe-awvKJQLRjUQ" successor_AbstractAction="_0FkMMCxPEe-awvKJQLRjUQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FjlNixPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_0FjlOCxPEe-awvKJQLRjUQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_0FjlMyxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FjlNCxPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_0FjlNCxPEe-awvKJQLRjUQ" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_0FjlMyxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FjlNSxPEe-awvKJQLRjUQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_0FjlNSxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FjlNCxPEe-awvKJQLRjUQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_0FkMMCxPEe-awvKJQLRjUQ" entityName="stopWatch.start()" predecessor_AbstractAction="_0FjlOSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FlaVixPEe-awvKJQLRjUQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_0FlaVixPEe-awvKJQLRjUQ" entityName="If Branch" predecessor_AbstractAction="_0FkMMCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FlaVyxPEe-awvKJQLRjUQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FlaUyxPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_0FlaVSxPEe-awvKJQLRjUQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_0FkMMSxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FlaUSxPEe-awvKJQLRjUQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_0FlaUSxPEe-awvKJQLRjUQ" entityName="If Branch" predecessor_AbstractAction="_0FkMMSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FlaUixPEe-awvKJQLRjUQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FkzUCxPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_0FlaUCxPEe-awvKJQLRjUQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_0FkMMixPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FkzRixPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_0FkzRixPEe-awvKJQLRjUQ" entityName="Switch Branch" predecessor_AbstractAction="_0FkMMixPEe-awvKJQLRjUQ" successor_AbstractAction="_0FkzRyxPEe-awvKJQLRjUQ">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FkMPSxPEe-awvKJQLRjUQ">
                      <branchBehaviour_BranchTransition id="_0FkMPyxPEe-awvKJQLRjUQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_0FkMMyxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FkMOixPEe-awvKJQLRjUQ"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_0FkMOixPEe-awvKJQLRjUQ" entityName="If Branch" predecessor_AbstractAction="_0FkMMyxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FkMOyxPEe-awvKJQLRjUQ">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FkMNyxPEe-awvKJQLRjUQ" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_0FkMOSxPEe-awvKJQLRjUQ">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_0FkMNCxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FkMNSxPEe-awvKJQLRjUQ"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_0FkMNSxPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0FkMNCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FkMNixPEe-awvKJQLRjUQ"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_0FkMNixPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FkMNSxPEe-awvKJQLRjUQ"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_0FkMOyxPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0FkMOixPEe-awvKJQLRjUQ" successor_AbstractAction="_0FkMPCxPEe-awvKJQLRjUQ"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_0FkMPCxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FkMOyxPEe-awvKJQLRjUQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FkMQyxPEe-awvKJQLRjUQ">
                      <branchBehaviour_BranchTransition id="_0FkMRSxPEe-awvKJQLRjUQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_0FkMQCxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FkMQSxPEe-awvKJQLRjUQ"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_0FkMQSxPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0FkMQCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FkMQixPEe-awvKJQLRjUQ"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_0FkMQixPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FkMQSxPEe-awvKJQLRjUQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_0FkzQyxPEe-awvKJQLRjUQ">
                      <branchBehaviour_BranchTransition id="_0FkzRSxPEe-awvKJQLRjUQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_0FkzQCxPEe-awvKJQLRjUQ" entityName="Start Action" successor_AbstractAction="_0FkzQSxPEe-awvKJQLRjUQ"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_0FkzQSxPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0FkzQCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FkzQixPEe-awvKJQLRjUQ"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_0FkzQixPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FkzQSxPEe-awvKJQLRjUQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FkzRyxPEe-awvKJQLRjUQ" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_0FkzRixPEe-awvKJQLRjUQ" successor_AbstractAction="_0FkzSCxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FkzSCxPEe-awvKJQLRjUQ" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_0FkzRyxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FkzSSxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FkzSSxPEe-awvKJQLRjUQ" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_0FkzSCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FkzSixPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FkzSixPEe-awvKJQLRjUQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_0FkzSSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FkzSyxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FkzSyxPEe-awvKJQLRjUQ" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_0FkzSixPEe-awvKJQLRjUQ" successor_AbstractAction="_0FkzTCxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FkzTCxPEe-awvKJQLRjUQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_0FkzSyxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FkzTSxPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_0FkzTSxPEe-awvKJQLRjUQ" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_0FkzTCxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FkzTixPEe-awvKJQLRjUQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_0FkzTixPEe-awvKJQLRjUQ" entityName="deferredResult" predecessor_AbstractAction="_0FkzTSxPEe-awvKJQLRjUQ" successor_AbstractAction="_0FkzTyxPEe-awvKJQLRjUQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_0FkzTyxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FkzTixPEe-awvKJQLRjUQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_0FlaUixPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FlaUSxPEe-awvKJQLRjUQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_0FlaVyxPEe-awvKJQLRjUQ" entityName="Stop Action" predecessor_AbstractAction="_0FlaVixPEe-awvKJQLRjUQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_0GjqsSxPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_0GkRyixPEe-awvKJQLRjUQ" encapsulatedComponent__AssemblyContext="_0GVoQixPEe-awvKJQLRjUQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_0Glf4CxPEe-awvKJQLRjUQ" innerProvidedRole_ProvidedDelegationConnector="_0GVoQCxPEe-awvKJQLRjUQ" outerProvidedRole_ProvidedDelegationConnector="_0GjqsCxPEe-awvKJQLRjUQ" assemblyContext_ProvidedDelegationConnector="_0GkRyixPEe-awvKJQLRjUQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_0Glf4yxPEe-awvKJQLRjUQ" innerProvidedRole_ProvidedDelegationConnector="_0GVoQSxPEe-awvKJQLRjUQ" outerProvidedRole_ProvidedDelegationConnector="_0GjDoCxPEe-awvKJQLRjUQ" assemblyContext_ProvidedDelegationConnector="_0GkRyixPEe-awvKJQLRjUQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0GjDoCxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_0GPhpCxPEe-awvKJQLRjUQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0GjqsCxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_0GPhqCxPEe-awvKJQLRjUQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_0GjqsyxPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_0GkRyCxPEe-awvKJQLRjUQ" encapsulatedComponent__AssemblyContext="_0GfZSixPEe-awvKJQLRjUQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_0Glf4ixPEe-awvKJQLRjUQ" innerProvidedRole_ProvidedDelegationConnector="_0GfZSSxPEe-awvKJQLRjUQ" outerProvidedRole_ProvidedDelegationConnector="_0GjqsixPEe-awvKJQLRjUQ" assemblyContext_ProvidedDelegationConnector="_0GkRyCxPEe-awvKJQLRjUQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0GjqsixPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_0GPhoyxPEe-awvKJQLRjUQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_0GjqtSxPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_0GkRwCxPEe-awvKJQLRjUQ" encapsulatedComponent__AssemblyContext="_0Gc9ASxPEe-awvKJQLRjUQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_0Gk40SxPEe-awvKJQLRjUQ" innerProvidedRole_ProvidedDelegationConnector="_0Gc9ACxPEe-awvKJQLRjUQ" outerProvidedRole_ProvidedDelegationConnector="_0GjqtCxPEe-awvKJQLRjUQ" assemblyContext_ProvidedDelegationConnector="_0GkRwCxPEe-awvKJQLRjUQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0GjqtCxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_0GPhpyxPEe-awvKJQLRjUQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_0GjqtixPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_0GkRxCxPEe-awvKJQLRjUQ" encapsulatedComponent__AssemblyContext="_0GPhqSxPEe-awvKJQLRjUQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_0GjquCxPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_0GkRwixPEe-awvKJQLRjUQ" encapsulatedComponent__AssemblyContext="_0GagxCxPEe-awvKJQLRjUQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_0Glf4SxPEe-awvKJQLRjUQ" innerProvidedRole_ProvidedDelegationConnector="_0GagwyxPEe-awvKJQLRjUQ" outerProvidedRole_ProvidedDelegationConnector="_0GjqtyxPEe-awvKJQLRjUQ" assemblyContext_ProvidedDelegationConnector="_0GkRwixPEe-awvKJQLRjUQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0GjqtyxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_0GPhpixPEe-awvKJQLRjUQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_0GjquixPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_0GkRxixPEe-awvKJQLRjUQ" encapsulatedComponent__AssemblyContext="_0GQIsSxPEe-awvKJQLRjUQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_0Gk40CxPEe-awvKJQLRjUQ" innerProvidedRole_ProvidedDelegationConnector="_0GQIsCxPEe-awvKJQLRjUQ" outerProvidedRole_ProvidedDelegationConnector="_0GjquSxPEe-awvKJQLRjUQ" assemblyContext_ProvidedDelegationConnector="_0GkRxixPEe-awvKJQLRjUQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_0GjquSxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_0GPhpSxPEe-awvKJQLRjUQ"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_0GPhoyxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_0APAQCxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_0ANyIyxPEe-awvKJQLRjUQ">
      <parameters__OperationSignature dataType__Parameter="_0ANyIixPEe-awvKJQLRjUQ" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_0GPhpCxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_z_YEoCxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_z_XdkSxPEe-awvKJQLRjUQ">
      <parameters__OperationSignature dataType__Parameter="_z_WPcCxPEe-awvKJQLRjUQ" parameterName="AuthorizationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_z_XdkCxPEe-awvKJQLRjUQ" parameterName="TeleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_0GPhpSxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_0AOZMixPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_0ANyIyxPEe-awvKJQLRjUQ">
      <parameters__OperationSignature dataType__Parameter="_0AOZMSxPEe-awvKJQLRjUQ" parameterName="RegistrationTokenRequest" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_0GPhpixPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_0ANyJCxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_0ANyIyxPEe-awvKJQLRjUQ">
      <parameters__OperationSignature dataType__Parameter="_0ANyIixPEe-awvKJQLRjUQ" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_0GPhpyxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_0APAQyxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_z_XdkSxPEe-awvKJQLRjUQ">
      <parameters__OperationSignature dataType__Parameter="_0ANyIixPEe-awvKJQLRjUQ" parameterName="RegistrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_0GPhqCxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_0ANLESxPEe-awvKJQLRjUQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_z_XdkSxPEe-awvKJQLRjUQ">
      <parameters__OperationSignature dataType__Parameter="_0ANLECxPEe-awvKJQLRjUQ" parameterName="Tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_z_WPcCxPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_z_XdkCxPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_z_XdkSxPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_0ANLECxPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_0ANyIixPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_0ANyIyxPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_0AOZMSxPEe-awvKJQLRjUQ" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
</repository:Repository>
