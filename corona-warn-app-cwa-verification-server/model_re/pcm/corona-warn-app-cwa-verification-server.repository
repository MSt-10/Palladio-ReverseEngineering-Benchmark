<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_EfTYXEosEe-ZoP7GMLIdwA">
  <components__Repository xsi:type="repository:BasicComponent" id="_EfBEdEosEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_EfBEc0osEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_EfBEcUosEe-ZoP7GMLIdwA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_EeRdo0osEe-ZoP7GMLIdwA" describedService__SEFF="_EYFWBEosEe-ZoP7GMLIdwA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_EeQPfUosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeRdoEosEe-ZoP7GMLIdwA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_EeRdoEosEe-ZoP7GMLIdwA" entityName="If Branch" predecessor_AbstractAction="_EeQPfUosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeRdoUosEe-ZoP7GMLIdwA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeRdnUosEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_EeRdn0osEe-ZoP7GMLIdwA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_EeQPfkosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeRdm0osEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_EeRdm0osEe-ZoP7GMLIdwA" entityName="Switch Branch" predecessor_AbstractAction="_EeQPfkosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeRdnEosEe-ZoP7GMLIdwA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeQ2jEosEe-ZoP7GMLIdwA">
                <branchBehaviour_BranchTransition id="_EeQ2jkosEe-ZoP7GMLIdwA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_EeQPf0osEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeQ2hkosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_EeQ2hkosEe-ZoP7GMLIdwA" entityName="If Branch" predecessor_AbstractAction="_EeQPf0osEe-ZoP7GMLIdwA" successor_AbstractAction="_EeQ2h0osEe-ZoP7GMLIdwA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeQ2g0osEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_EeQ2hUosEe-ZoP7GMLIdwA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_EeQPgEosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeQ2gUosEe-ZoP7GMLIdwA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_EeQ2gUosEe-ZoP7GMLIdwA" entityName="If Branch" predecessor_AbstractAction="_EeQPgEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeQ2gkosEe-ZoP7GMLIdwA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeQPg0osEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_EeQ2gEosEe-ZoP7GMLIdwA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_EeQPgUosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeQPgkosEe-ZoP7GMLIdwA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_EeQPgkosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeQPgUosEe-ZoP7GMLIdwA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_EeQ2gkosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeQ2gUosEe-ZoP7GMLIdwA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeQ2h0osEe-ZoP7GMLIdwA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_EeQ2hkosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeQ2iEosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeQ2iEosEe-ZoP7GMLIdwA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_EeQ2h0osEe-ZoP7GMLIdwA" successor_AbstractAction="_EeQ2iUosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_EeQ2iUosEe-ZoP7GMLIdwA" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_EeQ2iEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeQ2ikosEe-ZoP7GMLIdwA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeQ2ikosEe-ZoP7GMLIdwA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_EeQ2iUosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeQ2i0osEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_EeQ2i0osEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeQ2ikosEe-ZoP7GMLIdwA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeRdk0osEe-ZoP7GMLIdwA">
                <branchBehaviour_BranchTransition id="_EeRdlUosEe-ZoP7GMLIdwA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_EeRdkEosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeRdkUosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeRdkUosEe-ZoP7GMLIdwA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_EeRdkEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeRdkkosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_EeRdkkosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeRdkUosEe-ZoP7GMLIdwA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeRdmEosEe-ZoP7GMLIdwA">
                <branchBehaviour_BranchTransition id="_EeRdmkosEe-ZoP7GMLIdwA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_EeRdlkosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeRdl0osEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_EeRdl0osEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeRdlkosEe-ZoP7GMLIdwA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_EeRdnEosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeRdm0osEe-ZoP7GMLIdwA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_EeRdoUosEe-ZoP7GMLIdwA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_EeRdoEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeRdokosEe-ZoP7GMLIdwA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_EeRdokosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeRdoUosEe-ZoP7GMLIdwA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_EfFV4UosEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_EfEu1kosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_EfAdaUosEe-ZoP7GMLIdwA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_EfFV4EosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_EfAdZ0osEe-ZoP7GMLIdwA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_EeQPe0osEe-ZoP7GMLIdwA" describedService__SEFF="_EYFWAUosEe-ZoP7GMLIdwA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_EePBVEosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EePoZkosEe-ZoP7GMLIdwA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_EePoZkosEe-ZoP7GMLIdwA" entityName="If Branch" predecessor_AbstractAction="_EePBVEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeQPeUosEe-ZoP7GMLIdwA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EePBWEosEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_EePBWkosEe-ZoP7GMLIdwA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_EePBVUosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EePBVkosEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_EePBVkosEe-ZoP7GMLIdwA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_EePBVUosEe-ZoP7GMLIdwA" successor_AbstractAction="_EePBV0osEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_EePBV0osEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EePBVkosEe-ZoP7GMLIdwA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EePoY0osEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_EePoZUosEe-ZoP7GMLIdwA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_EePoYEosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EePoYUosEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_EePoYUosEe-ZoP7GMLIdwA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_EePoYEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EePoYkosEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_EePoYkosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EePoYUosEe-ZoP7GMLIdwA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_EeQPeUosEe-ZoP7GMLIdwA" entityName="If Branch" predecessor_AbstractAction="_EePoZkosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeQPekosEe-ZoP7GMLIdwA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeQPdkosEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_EeQPeEosEe-ZoP7GMLIdwA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_EePoZ0osEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeQPdEosEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_EeQPdEosEe-ZoP7GMLIdwA" entityName="If Branch" predecessor_AbstractAction="_EePoZ0osEe-ZoP7GMLIdwA" successor_AbstractAction="_EeQPdUosEe-ZoP7GMLIdwA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EePobEosEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_EePobkosEe-ZoP7GMLIdwA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_EePoaEosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EePoaUosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EePoaUosEe-ZoP7GMLIdwA" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_EePoaEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EePoakosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_EePoakosEe-ZoP7GMLIdwA" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_EePoaUosEe-ZoP7GMLIdwA" successor_AbstractAction="_EePoa0osEe-ZoP7GMLIdwA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_EePoa0osEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EePoakosEe-ZoP7GMLIdwA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeQPcUosEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_EeQPc0osEe-ZoP7GMLIdwA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_EePob0osEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeQPcEosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_EeQPcEosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EePob0osEe-ZoP7GMLIdwA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_EeQPdUosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeQPdEosEe-ZoP7GMLIdwA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_EeQPekosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeQPeUosEe-ZoP7GMLIdwA"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_EePBUkosEe-ZoP7GMLIdwA" describedService__SEFF="_EXOaYEosEe-ZoP7GMLIdwA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_EeOaTkosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EePBUEosEe-ZoP7GMLIdwA"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_EePBUEosEe-ZoP7GMLIdwA" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_EeOaTkosEe-ZoP7GMLIdwA" successor_AbstractAction="_EePBUUosEe-ZoP7GMLIdwA">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_EePBUUosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EePBUEosEe-ZoP7GMLIdwA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_EfJnXkosEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_EfJnXUosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_EfBEcEosEe-ZoP7GMLIdwA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_EeWWEkosEe-ZoP7GMLIdwA" describedService__SEFF="_EYEu8kosEe-ZoP7GMLIdwA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_EeT51UosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeT53EosEe-ZoP7GMLIdwA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_EeT53EosEe-ZoP7GMLIdwA" entityName="If Branch" predecessor_AbstractAction="_EeT51UosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeT53UosEe-ZoP7GMLIdwA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeT52UosEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_EeT520osEe-ZoP7GMLIdwA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_EeT51kosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeT510osEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_EeT510osEe-ZoP7GMLIdwA" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_EeT51kosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeT52EosEe-ZoP7GMLIdwA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController_generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController_generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_EeT52EosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeT510osEe-ZoP7GMLIdwA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_EeT53UosEe-ZoP7GMLIdwA" entityName="stopWatch.start()" predecessor_AbstractAction="_EeT53EosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeWWEEosEe-ZoP7GMLIdwA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_EeWWEEosEe-ZoP7GMLIdwA" entityName="Switch Branch" predecessor_AbstractAction="_EeT53UosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeWWEUosEe-ZoP7GMLIdwA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeVH9EosEe-ZoP7GMLIdwA">
          <branchBehaviour_BranchTransition id="_EeVH9kosEe-ZoP7GMLIdwA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_EeT53kosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeT530osEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_EeT530osEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeT53kosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeT54EosEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_EeT54EosEe-ZoP7GMLIdwA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_EeT530osEe-ZoP7GMLIdwA" successor_AbstractAction="_EeUg4EosEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_EeUg4EosEe-ZoP7GMLIdwA" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_EeT54EosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeUg4UosEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_EeUg4UosEe-ZoP7GMLIdwA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_EeUg4EosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeUg4kosEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_EeUg4kosEe-ZoP7GMLIdwA" entityName="deferredResult" predecessor_AbstractAction="_EeUg4UosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeVH8EosEe-ZoP7GMLIdwA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_EeVH8EosEe-ZoP7GMLIdwA" entityName="If Branch" predecessor_AbstractAction="_EeUg4kosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeVH8UosEe-ZoP7GMLIdwA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeUg7EosEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_EeUg7kosEe-ZoP7GMLIdwA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_EeUg40osEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeUg5EosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeUg5EosEe-ZoP7GMLIdwA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_EeUg40osEe-ZoP7GMLIdwA" successor_AbstractAction="_EeUg5UosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeUg5UosEe-ZoP7GMLIdwA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_EeUg5EosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeUg5kosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeUg5kosEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeUg5UosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeUg50osEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeUg50osEe-ZoP7GMLIdwA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_EeUg5kosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeUg6EosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeUg6EosEe-ZoP7GMLIdwA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_EeUg50osEe-ZoP7GMLIdwA" successor_AbstractAction="_EeUg6UosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeUg6UosEe-ZoP7GMLIdwA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_EeUg6EosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeUg6kosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_EeUg6kosEe-ZoP7GMLIdwA" entityName="deferredResult" predecessor_AbstractAction="_EeUg6UosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeUg60osEe-ZoP7GMLIdwA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_EeUg60osEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeUg6kosEe-ZoP7GMLIdwA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_EeVH8UosEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeVH8EosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeVH8kosEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_EeVH8kosEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeVH8UosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeVH80osEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_EeVH80osEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeVH8kosEe-ZoP7GMLIdwA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeVvC0osEe-ZoP7GMLIdwA">
          <branchBehaviour_BranchTransition id="_EeVvDUosEe-ZoP7GMLIdwA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_EeVH90osEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeVvB0osEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_EeVvB0osEe-ZoP7GMLIdwA" entityName="If Branch" predecessor_AbstractAction="_EeVH90osEe-ZoP7GMLIdwA" successor_AbstractAction="_EeVvCEosEe-ZoP7GMLIdwA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeVvBEosEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_EeVvBkosEe-ZoP7GMLIdwA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_EeVH-EosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeVH-UosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeVH-UosEe-ZoP7GMLIdwA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_EeVH-EosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeVH-kosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeVH-kosEe-ZoP7GMLIdwA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_EeVH-UosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeVH-0osEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeVH-0osEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeVH-kosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeVH_EosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeVH_EosEe-ZoP7GMLIdwA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_EeVH-0osEe-ZoP7GMLIdwA" successor_AbstractAction="_EeVvAEosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeVvAEosEe-ZoP7GMLIdwA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_EeVH_EosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeVvAUosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeVvAUosEe-ZoP7GMLIdwA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_EeVvAEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeVvAkosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_EeVvAkosEe-ZoP7GMLIdwA" entityName="deferredResult" predecessor_AbstractAction="_EeVvAUosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeVvA0osEe-ZoP7GMLIdwA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_EeVvA0osEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeVvAkosEe-ZoP7GMLIdwA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_EeVvCEosEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeVvB0osEe-ZoP7GMLIdwA" successor_AbstractAction="_EeVvCUosEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_EeVvCUosEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeVvCEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeVvCkosEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_EeVvCkosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeVvCUosEe-ZoP7GMLIdwA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeVvEUosEe-ZoP7GMLIdwA">
          <branchBehaviour_BranchTransition id="_EeVvE0osEe-ZoP7GMLIdwA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_EeVvDkosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeVvD0osEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_EeVvD0osEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeVvDkosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeVvEEosEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_EeVvEEosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeVvD0osEe-ZoP7GMLIdwA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_EeWWEUosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeWWEEosEe-ZoP7GMLIdwA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_EfMDnEosEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_EfMDnkosEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_EfMDnUosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_EfBEckosEe-ZoP7GMLIdwA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_EeOaTEosEe-ZoP7GMLIdwA" describedService__SEFF="_EYEH4EosEe-ZoP7GMLIdwA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_EYha4UosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeLW8UosEe-ZoP7GMLIdwA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_EeLW8UosEe-ZoP7GMLIdwA" entityName="If Branch" predecessor_AbstractAction="_EYha4UosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeL-AEosEe-ZoP7GMLIdwA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeKv4EosEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_EeLW8EosEe-ZoP7GMLIdwA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_EYjQEEosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeKI0EosEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_EeKI0EosEe-ZoP7GMLIdwA" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_EYjQEEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeKI0UosEe-ZoP7GMLIdwA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_EeKI0UosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeKI0EosEe-ZoP7GMLIdwA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_EeL-AEosEe-ZoP7GMLIdwA" entityName="stopWatch.start()" predecessor_AbstractAction="_EeLW8UosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeOaSkosEe-ZoP7GMLIdwA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_EeOaSkosEe-ZoP7GMLIdwA" entityName="If Branch" predecessor_AbstractAction="_EeL-AEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeOaS0osEe-ZoP7GMLIdwA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeOaR0osEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_EeOaSUosEe-ZoP7GMLIdwA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_EeL-AUosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeOaRUosEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_EeOaRUosEe-ZoP7GMLIdwA" entityName="If Branch" predecessor_AbstractAction="_EeL-AUosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeOaRkosEe-ZoP7GMLIdwA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeOaQkosEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_EeOaREosEe-ZoP7GMLIdwA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_EeMlEEosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeNzNEosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_EeNzNEosEe-ZoP7GMLIdwA" entityName="Switch Branch" predecessor_AbstractAction="_EeMlEEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeNzNUosEe-ZoP7GMLIdwA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeNMKUosEe-ZoP7GMLIdwA">
                      <branchBehaviour_BranchTransition id="_EeNMK0osEe-ZoP7GMLIdwA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_EeMlEUosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeNMJkosEe-ZoP7GMLIdwA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_EeNMJkosEe-ZoP7GMLIdwA" entityName="If Branch" predecessor_AbstractAction="_EeMlEUosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeNMJ0osEe-ZoP7GMLIdwA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeNMI0osEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_EeNMJUosEe-ZoP7GMLIdwA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_EeNMIEosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeNMIUosEe-ZoP7GMLIdwA"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_EeNMIUosEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeNMIEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeNMIkosEe-ZoP7GMLIdwA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_EeNMIkosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeNMIUosEe-ZoP7GMLIdwA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_EeNMJ0osEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeNMJkosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeNMKEosEe-ZoP7GMLIdwA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_EeNMKEosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeNMJ0osEe-ZoP7GMLIdwA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeNML0osEe-ZoP7GMLIdwA">
                      <branchBehaviour_BranchTransition id="_EeNMMUosEe-ZoP7GMLIdwA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_EeNMLEosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeNMLUosEe-ZoP7GMLIdwA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_EeNMLUosEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeNMLEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeNMLkosEe-ZoP7GMLIdwA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_EeNMLkosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeNMLUosEe-ZoP7GMLIdwA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeNzMUosEe-ZoP7GMLIdwA">
                      <branchBehaviour_BranchTransition id="_EeNzM0osEe-ZoP7GMLIdwA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_EeNMMkosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeNMM0osEe-ZoP7GMLIdwA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_EeNMM0osEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeNMMkosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeNzMEosEe-ZoP7GMLIdwA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_EeNzMEosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeNMM0osEe-ZoP7GMLIdwA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeNzNUosEe-ZoP7GMLIdwA" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_EeNzNEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeNzNkosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeNzNkosEe-ZoP7GMLIdwA" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_EeNzNUosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeNzN0osEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeNzN0osEe-ZoP7GMLIdwA" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_EeNzNkosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeNzOEosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeNzOEosEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeNzN0osEe-ZoP7GMLIdwA" successor_AbstractAction="_EeNzOUosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeNzOUosEe-ZoP7GMLIdwA" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_EeNzOEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeNzOkosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeNzOkosEe-ZoP7GMLIdwA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_EeNzOUosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeNzO0osEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeNzO0osEe-ZoP7GMLIdwA" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_EeNzOkosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeOaQEosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_EeOaQEosEe-ZoP7GMLIdwA" entityName="deferredResult" predecessor_AbstractAction="_EeNzO0osEe-ZoP7GMLIdwA" successor_AbstractAction="_EeOaQUosEe-ZoP7GMLIdwA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_EeOaQUosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeOaQEosEe-ZoP7GMLIdwA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_EeOaRkosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeOaRUosEe-ZoP7GMLIdwA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_EeOaS0osEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeOaSkosEe-ZoP7GMLIdwA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_EfOf10osEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_EfOf1kosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_EfAdaEosEe-ZoP7GMLIdwA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_EeT500osEe-ZoP7GMLIdwA" describedService__SEFF="_EYEH40osEe-ZoP7GMLIdwA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_EeRdpUosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeSEpUosEe-ZoP7GMLIdwA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_EeSEpUosEe-ZoP7GMLIdwA" entityName="If Branch" predecessor_AbstractAction="_EeRdpUosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeSEpkosEe-ZoP7GMLIdwA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeSEokosEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_EeSEpEosEe-ZoP7GMLIdwA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_EeRdpkosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeSEoEosEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_EeSEoEosEe-ZoP7GMLIdwA" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_EeRdpkosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeSEoUosEe-ZoP7GMLIdwA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_EeSEoUosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeSEoEosEe-ZoP7GMLIdwA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_EeSEpkosEe-ZoP7GMLIdwA" entityName="stopWatch.start()" predecessor_AbstractAction="_EeSEpUosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeT50EosEe-ZoP7GMLIdwA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_EeT50EosEe-ZoP7GMLIdwA" entityName="If Branch" predecessor_AbstractAction="_EeSEpkosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeT50UosEe-ZoP7GMLIdwA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeTS00osEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_EeTS1UosEe-ZoP7GMLIdwA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_EeSEp0osEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeTS0UosEe-ZoP7GMLIdwA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_EeTS0UosEe-ZoP7GMLIdwA" entityName="Switch Branch" predecessor_AbstractAction="_EeSEp0osEe-ZoP7GMLIdwA" successor_AbstractAction="_EeTS0kosEe-ZoP7GMLIdwA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeSru0osEe-ZoP7GMLIdwA">
                <branchBehaviour_BranchTransition id="_EeSrvUosEe-ZoP7GMLIdwA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_EeSEqEosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeSEqUosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeSEqUosEe-ZoP7GMLIdwA" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_EeSEqEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeSEtUosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_EeSEtUosEe-ZoP7GMLIdwA" entityName="If Branch" predecessor_AbstractAction="_EeSEqUosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeSEtkosEe-ZoP7GMLIdwA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeSEskosEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_EeSEtEosEe-ZoP7GMLIdwA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_EeSEqkosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeSEsEosEe-ZoP7GMLIdwA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_EeSEsEosEe-ZoP7GMLIdwA" entityName="If Branch" predecessor_AbstractAction="_EeSEqkosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeSEsUosEe-ZoP7GMLIdwA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeSErUosEe-ZoP7GMLIdwA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_EeSEr0osEe-ZoP7GMLIdwA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_EeSEq0osEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeSErEosEe-ZoP7GMLIdwA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_EeSErEosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeSEq0osEe-ZoP7GMLIdwA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_EeSEsUosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeSEsEosEe-ZoP7GMLIdwA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeSEtkosEe-ZoP7GMLIdwA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_EeSEtUosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeSEt0osEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeSEt0osEe-ZoP7GMLIdwA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_EeSEtkosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeSrsEosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeSrsEosEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeSEt0osEe-ZoP7GMLIdwA" successor_AbstractAction="_EeSrsUosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeSrsUosEe-ZoP7GMLIdwA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_EeSrsEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeSrskosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeSrskosEe-ZoP7GMLIdwA" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_EeSrsUosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeSrs0osEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_EeSrs0osEe-ZoP7GMLIdwA" entityName="deferredResult" predecessor_AbstractAction="_EeSrskosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeSrtEosEe-ZoP7GMLIdwA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeSrtEosEe-ZoP7GMLIdwA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_EeSrs0osEe-ZoP7GMLIdwA" successor_AbstractAction="_EeSrtUosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeSrtUosEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeSrtEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeSrtkosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeSrtkosEe-ZoP7GMLIdwA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_EeSrtUosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeSrt0osEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeSrt0osEe-ZoP7GMLIdwA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_EeSrtkosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeSruEosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_EeSruEosEe-ZoP7GMLIdwA" entityName="deferredResult" predecessor_AbstractAction="_EeSrt0osEe-ZoP7GMLIdwA" successor_AbstractAction="_EeSruUosEe-ZoP7GMLIdwA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeSruUosEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeSruEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeSrukosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_EeSrukosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeSruUosEe-ZoP7GMLIdwA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeTSyEosEe-ZoP7GMLIdwA">
                <branchBehaviour_BranchTransition id="_EeTSykosEe-ZoP7GMLIdwA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_EeTSwEosEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeTSwUosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeTSwUosEe-ZoP7GMLIdwA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_EeTSwEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeTSwkosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeTSwkosEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeTSwUosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeTSw0osEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeTSw0osEe-ZoP7GMLIdwA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_EeTSwkosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeTSxEosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeTSxEosEe-ZoP7GMLIdwA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_EeTSw0osEe-ZoP7GMLIdwA" successor_AbstractAction="_EeTSxUosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_EeTSxUosEe-ZoP7GMLIdwA" entityName="deferredResult" predecessor_AbstractAction="_EeTSxEosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeTSxkosEe-ZoP7GMLIdwA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeTSxkosEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeTSxUosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeTSx0osEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_EeTSx0osEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeTSxkosEe-ZoP7GMLIdwA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_EeTSzkosEe-ZoP7GMLIdwA">
                <branchBehaviour_BranchTransition id="_EeTS0EosEe-ZoP7GMLIdwA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_EeTSy0osEe-ZoP7GMLIdwA" entityName="Start Action" successor_AbstractAction="_EeTSzEosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_EeTSzEosEe-ZoP7GMLIdwA" entityName="stopWatch.stop()" predecessor_AbstractAction="_EeTSy0osEe-ZoP7GMLIdwA" successor_AbstractAction="_EeTSzUosEe-ZoP7GMLIdwA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_EeTSzUosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeTSzEosEe-ZoP7GMLIdwA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_EeTS0kosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeTS0UosEe-ZoP7GMLIdwA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_EeT50UosEe-ZoP7GMLIdwA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_EeT50EosEe-ZoP7GMLIdwA" successor_AbstractAction="_EeT50kosEe-ZoP7GMLIdwA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_EeT50kosEe-ZoP7GMLIdwA" entityName="Stop Action" predecessor_AbstractAction="_EeT50UosEe-ZoP7GMLIdwA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_EfSxQUosEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_EfTYUkosEe-ZoP7GMLIdwA" encapsulatedComponent__AssemblyContext="_EfJnXkosEe-ZoP7GMLIdwA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_EfUmcEosEe-ZoP7GMLIdwA" innerProvidedRole_ProvidedDelegationConnector="_EfJnXUosEe-ZoP7GMLIdwA" outerProvidedRole_ProvidedDelegationConnector="_EfSxQEosEe-ZoP7GMLIdwA" assemblyContext_ProvidedDelegationConnector="_EfTYUkosEe-ZoP7GMLIdwA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_EfSxQEosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_EfBEcEosEe-ZoP7GMLIdwA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_EfSxQ0osEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_EfTYVEosEe-ZoP7GMLIdwA" encapsulatedComponent__AssemblyContext="_EfOf10osEe-ZoP7GMLIdwA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_EfUmdEosEe-ZoP7GMLIdwA" innerProvidedRole_ProvidedDelegationConnector="_EfOf1kosEe-ZoP7GMLIdwA" outerProvidedRole_ProvidedDelegationConnector="_EfSxQkosEe-ZoP7GMLIdwA" assemblyContext_ProvidedDelegationConnector="_EfTYVEosEe-ZoP7GMLIdwA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_EfSxQkosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_EfAdaEosEe-ZoP7GMLIdwA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_EfSxRkosEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_EfTYVkosEe-ZoP7GMLIdwA" encapsulatedComponent__AssemblyContext="_EfFV4UosEe-ZoP7GMLIdwA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_EfUmckosEe-ZoP7GMLIdwA" innerProvidedRole_ProvidedDelegationConnector="_EfEu1kosEe-ZoP7GMLIdwA" outerProvidedRole_ProvidedDelegationConnector="_EfSxRUosEe-ZoP7GMLIdwA" assemblyContext_ProvidedDelegationConnector="_EfTYVkosEe-ZoP7GMLIdwA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_EfUmc0osEe-ZoP7GMLIdwA" innerProvidedRole_ProvidedDelegationConnector="_EfFV4EosEe-ZoP7GMLIdwA" outerProvidedRole_ProvidedDelegationConnector="_EfSxREosEe-ZoP7GMLIdwA" assemblyContext_ProvidedDelegationConnector="_EfTYVkosEe-ZoP7GMLIdwA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_EfSxREosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_EfAdZ0osEe-ZoP7GMLIdwA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_EfSxRUosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_EfAdaUosEe-ZoP7GMLIdwA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_EfSxR0osEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_EfTYWEosEe-ZoP7GMLIdwA" encapsulatedComponent__AssemblyContext="_EfMDnEosEe-ZoP7GMLIdwA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_EfSxSUosEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_EfTYUEosEe-ZoP7GMLIdwA" encapsulatedComponent__AssemblyContext="_EfMDnkosEe-ZoP7GMLIdwA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_EfUmcUosEe-ZoP7GMLIdwA" innerProvidedRole_ProvidedDelegationConnector="_EfMDnUosEe-ZoP7GMLIdwA" outerProvidedRole_ProvidedDelegationConnector="_EfSxSEosEe-ZoP7GMLIdwA" assemblyContext_ProvidedDelegationConnector="_EfTYUEosEe-ZoP7GMLIdwA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_EfSxSEosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_EfBEckosEe-ZoP7GMLIdwA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_EfSxS0osEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_EfTYWkosEe-ZoP7GMLIdwA" encapsulatedComponent__AssemblyContext="_EfBEdEosEe-ZoP7GMLIdwA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_EfUmdUosEe-ZoP7GMLIdwA" innerProvidedRole_ProvidedDelegationConnector="_EfBEc0osEe-ZoP7GMLIdwA" outerProvidedRole_ProvidedDelegationConnector="_EfSxSkosEe-ZoP7GMLIdwA" assemblyContext_ProvidedDelegationConnector="_EfTYWkosEe-ZoP7GMLIdwA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_EfSxSkosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_EfBEcUosEe-ZoP7GMLIdwA"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_EfAdZ0osEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_EXOaYEosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_EXNzUEosEe-ZoP7GMLIdwA">
      <parameters__OperationSignature dataType__Parameter="_EXMlMEosEe-ZoP7GMLIdwA" parameterName="tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_EfAdaEosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_EYEH40osEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_EYDg0UosEe-ZoP7GMLIdwA">
      <parameters__OperationSignature dataType__Parameter="_EYDg0EosEe-ZoP7GMLIdwA" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_EfAdaUosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_EYFWAUosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_EXNzUEosEe-ZoP7GMLIdwA">
      <parameters__OperationSignature dataType__Parameter="_EYEu9UosEe-ZoP7GMLIdwA" parameterName="authorization" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_EYFWAEosEe-ZoP7GMLIdwA" parameterName="teleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_EfBEcEosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_EYEu8kosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_EYDg0UosEe-ZoP7GMLIdwA">
      <parameters__OperationSignature dataType__Parameter="_EYEu8UosEe-ZoP7GMLIdwA" parameterName="request" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_EfBEcUosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_EYFWBEosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_EXNzUEosEe-ZoP7GMLIdwA">
      <parameters__OperationSignature dataType__Parameter="_EYDg0EosEe-ZoP7GMLIdwA" parameterName="registrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_EfBEckosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_EYEH4EosEe-ZoP7GMLIdwA" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_EYDg0UosEe-ZoP7GMLIdwA">
      <parameters__OperationSignature dataType__Parameter="_EYDg0EosEe-ZoP7GMLIdwA" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_EXMlMEosEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_EXNzUEosEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_EYDg0EosEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_EYDg0UosEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_EYEu8UosEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_EYEu9UosEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_EYFWAEosEe-ZoP7GMLIdwA" entityName="app_coronawarn_verification_model_TeleTanType"/>
</repository:Repository>
