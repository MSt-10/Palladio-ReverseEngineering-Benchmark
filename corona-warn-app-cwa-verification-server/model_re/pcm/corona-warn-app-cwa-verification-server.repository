<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_eVkwcsDVEe-Tk8i82Jemuw">
  <components__Repository xsi:type="repository:BasicComponent" id="_eVPZRsDVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_eVPZSMDVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_eVPZR8DVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_eVPZQsDVEe-Tk8i82Jemuw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_eUfLUsDVEe-Tk8i82Jemuw" describedService__SEFF="_eOM9IMDVEe-Tk8i82Jemuw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_eUcvGcDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUcvIMDVEe-Tk8i82Jemuw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_eUcvIMDVEe-Tk8i82Jemuw" entityName="If Branch" predecessor_AbstractAction="_eUcvGcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUcvIcDVEe-Tk8i82Jemuw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUcvHcDVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_eUcvH8DVEe-Tk8i82Jemuw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_eUcvGsDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUcvG8DVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_eUcvG8DVEe-Tk8i82Jemuw" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_eUcvGsDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUcvHMDVEe-Tk8i82Jemuw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_eUcvHMDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUcvG8DVEe-Tk8i82Jemuw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_eUcvIcDVEe-Tk8i82Jemuw" entityName="stopWatch.start()" predecessor_AbstractAction="_eUcvIMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUekU8DVEe-Tk8i82Jemuw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_eUekU8DVEe-Tk8i82Jemuw" entityName="If Branch" predecessor_AbstractAction="_eUcvIcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUfLUMDVEe-Tk8i82Jemuw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUekUMDVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_eUekUsDVEe-Tk8i82Jemuw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_eUdWIMDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUekTsDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_eUekTsDVEe-Tk8i82Jemuw" entityName="Switch Branch" predecessor_AbstractAction="_eUdWIMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUekT8DVEe-Tk8i82Jemuw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUd9OMDVEe-Tk8i82Jemuw">
                <branchBehaviour_BranchTransition id="_eUd9OsDVEe-Tk8i82Jemuw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_eUdWIcDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUdWIsDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUdWIsDVEe-Tk8i82Jemuw" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_eUdWIcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUdWLsDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_eUdWLsDVEe-Tk8i82Jemuw" entityName="If Branch" predecessor_AbstractAction="_eUdWIsDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUdWL8DVEe-Tk8i82Jemuw">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUdWK8DVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_eUdWLcDVEe-Tk8i82Jemuw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_eUdWI8DVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUdWKcDVEe-Tk8i82Jemuw"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_eUdWKcDVEe-Tk8i82Jemuw" entityName="If Branch" predecessor_AbstractAction="_eUdWI8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUdWKsDVEe-Tk8i82Jemuw">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUdWJsDVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_eUdWKMDVEe-Tk8i82Jemuw">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_eUdWJMDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUdWJcDVEe-Tk8i82Jemuw"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_eUdWJcDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUdWJMDVEe-Tk8i82Jemuw"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_eUdWKsDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUdWKcDVEe-Tk8i82Jemuw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUdWL8DVEe-Tk8i82Jemuw" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_eUdWLsDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUdWMMDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUdWMMDVEe-Tk8i82Jemuw" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_eUdWL8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUdWMcDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUdWMcDVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUdWMMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUdWMsDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUdWMsDVEe-Tk8i82Jemuw" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_eUdWMcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUdWM8DVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUdWM8DVEe-Tk8i82Jemuw" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_eUdWMsDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUd9MMDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_eUd9MMDVEe-Tk8i82Jemuw" entityName="deferredResult" predecessor_AbstractAction="_eUdWM8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUd9McDVEe-Tk8i82Jemuw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUd9McDVEe-Tk8i82Jemuw" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_eUd9MMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUd9MsDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUd9MsDVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUd9McDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUd9M8DVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUd9M8DVEe-Tk8i82Jemuw" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_eUd9MsDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUd9NMDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUd9NMDVEe-Tk8i82Jemuw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_eUd9M8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUd9NcDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_eUd9NcDVEe-Tk8i82Jemuw" entityName="deferredResult" predecessor_AbstractAction="_eUd9NMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUd9NsDVEe-Tk8i82Jemuw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUd9NsDVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUd9NcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUd9N8DVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_eUd9N8DVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUd9NsDVEe-Tk8i82Jemuw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUekRcDVEe-Tk8i82Jemuw">
                <branchBehaviour_BranchTransition id="_eUekR8DVEe-Tk8i82Jemuw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_eUd9O8DVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUd9PMDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUd9PMDVEe-Tk8i82Jemuw" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_eUd9O8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUd9PcDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUd9PcDVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUd9PMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUekQMDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUekQMDVEe-Tk8i82Jemuw" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_eUd9PcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUekQcDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUekQcDVEe-Tk8i82Jemuw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_eUekQMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUekQsDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_eUekQsDVEe-Tk8i82Jemuw" entityName="deferredResult" predecessor_AbstractAction="_eUekQcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUekQ8DVEe-Tk8i82Jemuw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUekQ8DVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUekQsDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUekRMDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_eUekRMDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUekQ8DVEe-Tk8i82Jemuw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUekS8DVEe-Tk8i82Jemuw">
                <branchBehaviour_BranchTransition id="_eUekTcDVEe-Tk8i82Jemuw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_eUekSMDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUekScDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUekScDVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUekSMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUekSsDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_eUekSsDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUekScDVEe-Tk8i82Jemuw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_eUekT8DVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUekTsDVEe-Tk8i82Jemuw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_eUfLUMDVEe-Tk8i82Jemuw" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_eUekU8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUfLUcDVEe-Tk8i82Jemuw"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_eUfLUcDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUfLUMDVEe-Tk8i82Jemuw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_eVTqt8DVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_eVTqtsDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_eVPZRcDVEe-Tk8i82Jemuw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_eUkD5MDVEe-Tk8i82Jemuw" describedService__SEFF="_eOLvAcDVEe-Tk8i82Jemuw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_eUi1wcDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUkD4cDVEe-Tk8i82Jemuw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_eUkD4cDVEe-Tk8i82Jemuw" entityName="If Branch" predecessor_AbstractAction="_eUi1wcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUkD4sDVEe-Tk8i82Jemuw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUkD3sDVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_eUkD4MDVEe-Tk8i82Jemuw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_eUjcwMDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUkD3MDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_eUkD3MDVEe-Tk8i82Jemuw" entityName="Switch Branch" predecessor_AbstractAction="_eUjcwMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUkD3cDVEe-Tk8i82Jemuw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUjc08DVEe-Tk8i82Jemuw">
                <branchBehaviour_BranchTransition id="_eUkD0MDVEe-Tk8i82Jemuw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_eUjcwcDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUjczcDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_eUjczcDVEe-Tk8i82Jemuw" entityName="If Branch" predecessor_AbstractAction="_eUjcwcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUjczsDVEe-Tk8i82Jemuw">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUjcysDVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_eUjczMDVEe-Tk8i82Jemuw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_eUjcwsDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUjcyMDVEe-Tk8i82Jemuw"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_eUjcyMDVEe-Tk8i82Jemuw" entityName="If Branch" predecessor_AbstractAction="_eUjcwsDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUjcycDVEe-Tk8i82Jemuw">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUjcxcDVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_eUjcx8DVEe-Tk8i82Jemuw">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_eUjcw8DVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUjcxMDVEe-Tk8i82Jemuw"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_eUjcxMDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUjcw8DVEe-Tk8i82Jemuw"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_eUjcycDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUjcyMDVEe-Tk8i82Jemuw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUjczsDVEe-Tk8i82Jemuw" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_eUjczcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUjcz8DVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUjcz8DVEe-Tk8i82Jemuw" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_eUjczsDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUjc0MDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_eUjc0MDVEe-Tk8i82Jemuw" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_eUjcz8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUjc0cDVEe-Tk8i82Jemuw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUjc0cDVEe-Tk8i82Jemuw" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_eUjc0MDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUjc0sDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_eUjc0sDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUjc0cDVEe-Tk8i82Jemuw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUkD1MDVEe-Tk8i82Jemuw">
                <branchBehaviour_BranchTransition id="_eUkD1sDVEe-Tk8i82Jemuw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_eUkD0cDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUkD0sDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUkD0sDVEe-Tk8i82Jemuw" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_eUkD0cDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUkD08DVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_eUkD08DVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUkD0sDVEe-Tk8i82Jemuw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUkD2cDVEe-Tk8i82Jemuw">
                <branchBehaviour_BranchTransition id="_eUkD28DVEe-Tk8i82Jemuw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_eUkD18DVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUkD2MDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_eUkD2MDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUkD18DVEe-Tk8i82Jemuw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_eUkD3cDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUkD3MDVEe-Tk8i82Jemuw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_eUkD4sDVEe-Tk8i82Jemuw" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_eUkD4cDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUkD48DVEe-Tk8i82Jemuw"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_eUkD48DVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUkD4sDVEe-Tk8i82Jemuw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_eVWuCcDVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_eVWuCMDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_eVPZQcDVEe-Tk8i82Jemuw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_eUi1v8DVEe-Tk8i82Jemuw" describedService__SEFF="_eOLH8cDVEe-Tk8i82Jemuw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_eUgZdsDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUhAhcDVEe-Tk8i82Jemuw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_eUhAhcDVEe-Tk8i82Jemuw" entityName="If Branch" predecessor_AbstractAction="_eUgZdsDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUhAhsDVEe-Tk8i82Jemuw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUhAgsDVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_eUhAhMDVEe-Tk8i82Jemuw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_eUgZd8DVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUhAgMDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_eUhAgMDVEe-Tk8i82Jemuw" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_eUgZd8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUhAgcDVEe-Tk8i82Jemuw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController_generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController_generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_eUhAgcDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUhAgMDVEe-Tk8i82Jemuw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_eUhAhsDVEe-Tk8i82Jemuw" entityName="stopWatch.start()" predecessor_AbstractAction="_eUhAhcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUi1vcDVEe-Tk8i82Jemuw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_eUi1vcDVEe-Tk8i82Jemuw" entityName="Switch Branch" predecessor_AbstractAction="_eUhAhsDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUi1vsDVEe-Tk8i82Jemuw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUhnnsDVEe-Tk8i82Jemuw">
          <branchBehaviour_BranchTransition id="_eUiOoMDVEe-Tk8i82Jemuw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_eUhAh8DVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUhAiMDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_eUhAiMDVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUhAh8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUhAicDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_eUhAicDVEe-Tk8i82Jemuw" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_eUhAiMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUhAisDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_eUhAisDVEe-Tk8i82Jemuw" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_eUhAicDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUhAi8DVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_eUhAi8DVEe-Tk8i82Jemuw" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_eUhAisDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUhAjMDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_eUhAjMDVEe-Tk8i82Jemuw" entityName="deferredResult" predecessor_AbstractAction="_eUhAi8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUhnmsDVEe-Tk8i82Jemuw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_eUhnmsDVEe-Tk8i82Jemuw" entityName="If Branch" predecessor_AbstractAction="_eUhAjMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUhnm8DVEe-Tk8i82Jemuw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUhnl8DVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_eUhnmcDVEe-Tk8i82Jemuw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_eUhAjcDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUhAjsDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUhAjsDVEe-Tk8i82Jemuw" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_eUhAjcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUhnkMDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUhnkMDVEe-Tk8i82Jemuw" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_eUhAjsDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUhnkcDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUhnkcDVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUhnkMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUhnksDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUhnksDVEe-Tk8i82Jemuw" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_eUhnkcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUhnk8DVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUhnk8DVEe-Tk8i82Jemuw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_eUhnksDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUhnlMDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUhnlMDVEe-Tk8i82Jemuw" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_eUhnk8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUhnlcDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_eUhnlcDVEe-Tk8i82Jemuw" entityName="deferredResult" predecessor_AbstractAction="_eUhnlMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUhnlsDVEe-Tk8i82Jemuw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_eUhnlsDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUhnlcDVEe-Tk8i82Jemuw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_eUhnm8DVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUhnmsDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUhnnMDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_eUhnnMDVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUhnm8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUhnncDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_eUhnncDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUhnnMDVEe-Tk8i82Jemuw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUi1tMDVEe-Tk8i82Jemuw">
          <branchBehaviour_BranchTransition id="_eUi1tsDVEe-Tk8i82Jemuw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_eUiOocDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUi1sMDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_eUi1sMDVEe-Tk8i82Jemuw" entityName="If Branch" predecessor_AbstractAction="_eUiOocDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUi1scDVEe-Tk8i82Jemuw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUiOq8DVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_eUiOrcDVEe-Tk8i82Jemuw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_eUiOosDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUiOo8DVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUiOo8DVEe-Tk8i82Jemuw" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_eUiOosDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUiOpMDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUiOpMDVEe-Tk8i82Jemuw" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_eUiOo8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUiOpcDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUiOpcDVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUiOpMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUiOpsDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUiOpsDVEe-Tk8i82Jemuw" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_eUiOpcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUiOp8DVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUiOp8DVEe-Tk8i82Jemuw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_eUiOpsDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUiOqMDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUiOqMDVEe-Tk8i82Jemuw" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_eUiOp8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUiOqcDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_eUiOqcDVEe-Tk8i82Jemuw" entityName="deferredResult" predecessor_AbstractAction="_eUiOqMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUiOqsDVEe-Tk8i82Jemuw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_eUiOqsDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUiOqcDVEe-Tk8i82Jemuw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_eUi1scDVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUi1sMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUi1ssDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_eUi1ssDVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUi1scDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUi1s8DVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_eUi1s8DVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUi1ssDVEe-Tk8i82Jemuw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUi1usDVEe-Tk8i82Jemuw">
          <branchBehaviour_BranchTransition id="_eUi1vMDVEe-Tk8i82Jemuw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_eUi1t8DVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUi1uMDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_eUi1uMDVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUi1t8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUi1ucDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_eUi1ucDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUi1uMDVEe-Tk8i82Jemuw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_eUi1vsDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUi1vcDVEe-Tk8i82Jemuw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_eVZxWsDVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_eVZxWcDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_eVPZRMDVEe-Tk8i82Jemuw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_eUcvF8DVEe-Tk8i82Jemuw" describedService__SEFF="_eNcIIMDVEe-Tk8i82Jemuw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_eOtTccDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUZrwMDVEe-Tk8i82Jemuw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_eUZrwMDVEe-Tk8i82Jemuw" entityName="If Branch" predecessor_AbstractAction="_eOtTccDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUaS0MDVEe-Tk8i82Jemuw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUYdoMDVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_eUZEsMDVEe-Tk8i82Jemuw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_eOvIoMDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUXPgMDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_eUXPgMDVEe-Tk8i82Jemuw" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_eOvIoMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUX2kMDVEe-Tk8i82Jemuw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_eUX2kMDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUXPgMDVEe-Tk8i82Jemuw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_eUaS0MDVEe-Tk8i82Jemuw" entityName="stopWatch.start()" predecessor_AbstractAction="_eUZrwMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUcvFcDVEe-Tk8i82Jemuw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_eUcvFcDVEe-Tk8i82Jemuw" entityName="If Branch" predecessor_AbstractAction="_eUaS0MDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUcvFsDVEe-Tk8i82Jemuw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUcvEsDVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_eUcvFMDVEe-Tk8i82Jemuw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_eUaS0cDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUcvEMDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_eUcvEMDVEe-Tk8i82Jemuw" entityName="If Branch" predecessor_AbstractAction="_eUaS0cDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUcvEcDVEe-Tk8i82Jemuw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUcICMDVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_eUcICsDVEe-Tk8i82Jemuw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_eUaS0sDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUbhAcDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_eUbhAcDVEe-Tk8i82Jemuw" entityName="Switch Branch" predecessor_AbstractAction="_eUaS0sDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUbhAsDVEe-Tk8i82Jemuw">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUbg8sDVEe-Tk8i82Jemuw">
                      <branchBehaviour_BranchTransition id="_eUbg9MDVEe-Tk8i82Jemuw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_eUa54MDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUa558DVEe-Tk8i82Jemuw"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_eUa558DVEe-Tk8i82Jemuw" entityName="If Branch" predecessor_AbstractAction="_eUa54MDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUbg8MDVEe-Tk8i82Jemuw">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUa55MDVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_eUa55sDVEe-Tk8i82Jemuw">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_eUa54cDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUa54sDVEe-Tk8i82Jemuw"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_eUa54sDVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUa54cDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUa548DVEe-Tk8i82Jemuw"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_eUa548DVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUa54sDVEe-Tk8i82Jemuw"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_eUbg8MDVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUa558DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUbg8cDVEe-Tk8i82Jemuw"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_eUbg8cDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUbg8MDVEe-Tk8i82Jemuw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUbg-MDVEe-Tk8i82Jemuw">
                      <branchBehaviour_BranchTransition id="_eUbg-sDVEe-Tk8i82Jemuw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_eUbg9cDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUbg9sDVEe-Tk8i82Jemuw"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_eUbg9sDVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUbg9cDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUbg98DVEe-Tk8i82Jemuw"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_eUbg98DVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUbg9sDVEe-Tk8i82Jemuw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUbg_sDVEe-Tk8i82Jemuw">
                      <branchBehaviour_BranchTransition id="_eUbhAMDVEe-Tk8i82Jemuw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_eUbg-8DVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUbg_MDVEe-Tk8i82Jemuw"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_eUbg_MDVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUbg-8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUbg_cDVEe-Tk8i82Jemuw"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_eUbg_cDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUbg_MDVEe-Tk8i82Jemuw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUbhAsDVEe-Tk8i82Jemuw" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_eUbhAcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUcIAMDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUcIAMDVEe-Tk8i82Jemuw" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_eUbhAsDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUcIAcDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUcIAcDVEe-Tk8i82Jemuw" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_eUcIAMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUcIAsDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUcIAsDVEe-Tk8i82Jemuw" entityName="stopWatch.stop()" predecessor_AbstractAction="_eUcIAcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUcIA8DVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUcIA8DVEe-Tk8i82Jemuw" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_eUcIAsDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUcIBMDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUcIBMDVEe-Tk8i82Jemuw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_eUcIA8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUcIBcDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUcIBcDVEe-Tk8i82Jemuw" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_eUcIBMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUcIBsDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_eUcIBsDVEe-Tk8i82Jemuw" entityName="deferredResult" predecessor_AbstractAction="_eUcIBcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUcIB8DVEe-Tk8i82Jemuw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_eUcIB8DVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUcIBsDVEe-Tk8i82Jemuw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_eUcvEcDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUcvEMDVEe-Tk8i82Jemuw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_eUcvFsDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUcvFcDVEe-Tk8i82Jemuw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_eVc0o8DVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_eVc0ocDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_eVPZQ8DVEe-Tk8i82Jemuw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_eVc0osDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_eVPZQMDVEe-Tk8i82Jemuw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_eUfyccDVEe-Tk8i82Jemuw" describedService__SEFF="_eOMWFMDVEe-Tk8i82Jemuw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_eUfLVMDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUfLYcDVEe-Tk8i82Jemuw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_eUfLYcDVEe-Tk8i82Jemuw" entityName="If Branch" predecessor_AbstractAction="_eUfLVMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUfyb8DVEe-Tk8i82Jemuw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUfLWMDVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_eUfLWsDVEe-Tk8i82Jemuw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_eUfLVcDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUfLVsDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_eUfLVsDVEe-Tk8i82Jemuw" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_eUfLVcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUfLV8DVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_eUfLV8DVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUfLVsDVEe-Tk8i82Jemuw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUfLXsDVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_eUfLYMDVEe-Tk8i82Jemuw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_eUfLW8DVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUfLXMDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_eUfLXMDVEe-Tk8i82Jemuw" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_eUfLW8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUfLXcDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_eUfLXcDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUfLXMDVEe-Tk8i82Jemuw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_eUfyb8DVEe-Tk8i82Jemuw" entityName="If Branch" predecessor_AbstractAction="_eUfLYcDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUfycMDVEe-Tk8i82Jemuw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUfybMDVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_eUfybsDVEe-Tk8i82Jemuw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_eUfLYsDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUfyasDVEe-Tk8i82Jemuw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_eUfyasDVEe-Tk8i82Jemuw" entityName="If Branch" predecessor_AbstractAction="_eUfLYsDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUfya8DVEe-Tk8i82Jemuw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUfyYsDVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_eUfyZMDVEe-Tk8i82Jemuw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_eUfLY8DVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUfLZMDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_eUfLZMDVEe-Tk8i82Jemuw" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_eUfLY8DVEe-Tk8i82Jemuw" successor_AbstractAction="_eUfyYMDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_eUfyYMDVEe-Tk8i82Jemuw" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_eUfLZMDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUfyYcDVEe-Tk8i82Jemuw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_eUfyYcDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUfyYMDVEe-Tk8i82Jemuw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_eUfyZ8DVEe-Tk8i82Jemuw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_eUfyacDVEe-Tk8i82Jemuw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_eUfyZcDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUfyZsDVEe-Tk8i82Jemuw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_eUfyZsDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUfyZcDVEe-Tk8i82Jemuw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_eUfya8DVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUfyasDVEe-Tk8i82Jemuw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_eUfycMDVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUfyb8DVEe-Tk8i82Jemuw"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_eUgZdMDVEe-Tk8i82Jemuw" describedService__SEFF="_eOLvBcDVEe-Tk8i82Jemuw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_eUgZccDVEe-Tk8i82Jemuw" entityName="Start Action" successor_AbstractAction="_eUgZcsDVEe-Tk8i82Jemuw"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_eUgZcsDVEe-Tk8i82Jemuw" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_eUgZccDVEe-Tk8i82Jemuw" successor_AbstractAction="_eUgZc8DVEe-Tk8i82Jemuw">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_eUgZc8DVEe-Tk8i82Jemuw" entityName="Stop Action" predecessor_AbstractAction="_eUgZcsDVEe-Tk8i82Jemuw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_eVjiUsDVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_eVkJYsDVEe-Tk8i82Jemuw" encapsulatedComponent__AssemblyContext="_eVc0o8DVEe-Tk8i82Jemuw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_eVlXgMDVEe-Tk8i82Jemuw" innerProvidedRole_ProvidedDelegationConnector="_eVc0ocDVEe-Tk8i82Jemuw" outerProvidedRole_ProvidedDelegationConnector="_eVjiUMDVEe-Tk8i82Jemuw" assemblyContext_ProvidedDelegationConnector="_eVkJYsDVEe-Tk8i82Jemuw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_eVlXgcDVEe-Tk8i82Jemuw" innerProvidedRole_ProvidedDelegationConnector="_eVc0osDVEe-Tk8i82Jemuw" outerProvidedRole_ProvidedDelegationConnector="_eVjiUcDVEe-Tk8i82Jemuw" assemblyContext_ProvidedDelegationConnector="_eVkJYsDVEe-Tk8i82Jemuw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_eVjiUMDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_eVPZQ8DVEe-Tk8i82Jemuw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_eVjiUcDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_eVPZQMDVEe-Tk8i82Jemuw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_eVjiVMDVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_eVkJZMDVEe-Tk8i82Jemuw" encapsulatedComponent__AssemblyContext="_eVZxWsDVEe-Tk8i82Jemuw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_eVlXgsDVEe-Tk8i82Jemuw" innerProvidedRole_ProvidedDelegationConnector="_eVZxWcDVEe-Tk8i82Jemuw" outerProvidedRole_ProvidedDelegationConnector="_eVjiU8DVEe-Tk8i82Jemuw" assemblyContext_ProvidedDelegationConnector="_eVkJZMDVEe-Tk8i82Jemuw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_eVjiU8DVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_eVPZRMDVEe-Tk8i82Jemuw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_eVjiVsDVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_eVkwcMDVEe-Tk8i82Jemuw" encapsulatedComponent__AssemblyContext="_eVPZSMDVEe-Tk8i82Jemuw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_eVlXg8DVEe-Tk8i82Jemuw" innerProvidedRole_ProvidedDelegationConnector="_eVPZR8DVEe-Tk8i82Jemuw" outerProvidedRole_ProvidedDelegationConnector="_eVjiVcDVEe-Tk8i82Jemuw" assemblyContext_ProvidedDelegationConnector="_eVkwcMDVEe-Tk8i82Jemuw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_eVjiVcDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_eVPZQsDVEe-Tk8i82Jemuw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_eVjiWMDVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_eVkJaMDVEe-Tk8i82Jemuw" encapsulatedComponent__AssemblyContext="_eVWuCcDVEe-Tk8i82Jemuw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_eVlXhMDVEe-Tk8i82Jemuw" innerProvidedRole_ProvidedDelegationConnector="_eVWuCMDVEe-Tk8i82Jemuw" outerProvidedRole_ProvidedDelegationConnector="_eVjiV8DVEe-Tk8i82Jemuw" assemblyContext_ProvidedDelegationConnector="_eVkJaMDVEe-Tk8i82Jemuw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_eVjiV8DVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_eVPZQcDVEe-Tk8i82Jemuw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_eVjiWsDVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_eVkJYMDVEe-Tk8i82Jemuw" encapsulatedComponent__AssemblyContext="_eVTqt8DVEe-Tk8i82Jemuw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_eVlXhcDVEe-Tk8i82Jemuw" innerProvidedRole_ProvidedDelegationConnector="_eVTqtsDVEe-Tk8i82Jemuw" outerProvidedRole_ProvidedDelegationConnector="_eVjiWcDVEe-Tk8i82Jemuw" assemblyContext_ProvidedDelegationConnector="_eVkJYMDVEe-Tk8i82Jemuw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_eVjiWcDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_eVPZRcDVEe-Tk8i82Jemuw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_eVjiW8DVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_eVkJZsDVEe-Tk8i82Jemuw" encapsulatedComponent__AssemblyContext="_eVPZRsDVEe-Tk8i82Jemuw"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_eVPZQMDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_eOLvBcDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_eOLvAMDVEe-Tk8i82Jemuw">
      <parameters__OperationSignature dataType__Parameter="_eOLvBMDVEe-Tk8i82Jemuw" parameterName="tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_eVPZQcDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_eOLH8cDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_eNbhEMDVEe-Tk8i82Jemuw">
      <parameters__OperationSignature dataType__Parameter="_eOLH8MDVEe-Tk8i82Jemuw" parameterName="request" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_eVPZQsDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_eOM9IMDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_eNbhEMDVEe-Tk8i82Jemuw">
      <parameters__OperationSignature dataType__Parameter="_eNaS8MDVEe-Tk8i82Jemuw" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_eVPZQ8DVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_eOMWFMDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_eOLvAMDVEe-Tk8i82Jemuw">
      <parameters__OperationSignature dataType__Parameter="_eOMWEsDVEe-Tk8i82Jemuw" parameterName="authorization" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_eOMWE8DVEe-Tk8i82Jemuw" parameterName="teleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_eVPZRMDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_eNcIIMDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_eNbhEMDVEe-Tk8i82Jemuw">
      <parameters__OperationSignature dataType__Parameter="_eNaS8MDVEe-Tk8i82Jemuw" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_eVPZRcDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_eOLvAcDVEe-Tk8i82Jemuw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_eOLvAMDVEe-Tk8i82Jemuw">
      <parameters__OperationSignature dataType__Parameter="_eNaS8MDVEe-Tk8i82Jemuw" parameterName="registrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_eNaS8MDVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_eNbhEMDVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_eOLH8MDVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_eOLvAMDVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_eOLvBMDVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_eOMWEsDVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_eOMWE8DVEe-Tk8i82Jemuw" entityName="app_coronawarn_verification_model_TeleTanType"/>
</repository:Repository>
