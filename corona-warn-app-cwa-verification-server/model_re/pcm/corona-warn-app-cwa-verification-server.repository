<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_vm4anFX1Ee-rlsOK-auHwQ">
  <components__Repository xsi:type="repository:BasicComponent" id="_vmmGtlX1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_vmmGuVX1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vmmGt1X1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_vmmGsVX1Ee-rlsOK-auHwQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vmmGuFX1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_vmmGtFX1Ee-rlsOK-auHwQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_vl6xQlX1Ee-rlsOK-auHwQ" describedService__SEFF="_vf5o0FX1Ee-rlsOK-auHwQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_vl6KP1X1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl6xQFX1Ee-rlsOK-auHwQ"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vl6xQFX1Ee-rlsOK-auHwQ" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_vl6KP1X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl6xQVX1Ee-rlsOK-auHwQ">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_vl6xQVX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl6xQFX1Ee-rlsOK-auHwQ"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_vl7_Y1X1Ee-rlsOK-auHwQ" describedService__SEFF="_vf5Bw1X1Ee-rlsOK-auHwQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_vl6xRFX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl7YUVX1Ee-rlsOK-auHwQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_vl7YUVX1Ee-rlsOK-auHwQ" entityName="If Branch" predecessor_AbstractAction="_vl6xRFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl7_YVX1Ee-rlsOK-auHwQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl6xSFX1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_vl6xSlX1Ee-rlsOK-auHwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vl6xRVX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl6xRlX1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vl6xRlX1Ee-rlsOK-auHwQ" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_vl6xRVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl6xR1X1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vl6xR1X1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl6xRlX1Ee-rlsOK-auHwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl6xTlX1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_vl7YUFX1Ee-rlsOK-auHwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vl6xS1X1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl6xTFX1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vl6xTFX1Ee-rlsOK-auHwQ" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_vl6xS1X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl6xTVX1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vl6xTVX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl6xTFX1Ee-rlsOK-auHwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_vl7_YVX1Ee-rlsOK-auHwQ" entityName="If Branch" predecessor_AbstractAction="_vl7YUVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl7_YlX1Ee-rlsOK-auHwQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl7YYVX1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_vl7_YFX1Ee-rlsOK-auHwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vl7YUlX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl7YX1X1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_vl7YX1X1Ee-rlsOK-auHwQ" entityName="If Branch" predecessor_AbstractAction="_vl7YUlX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl7YYFX1Ee-rlsOK-auHwQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl7YV1X1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_vl7YWVX1Ee-rlsOK-auHwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vl7YU1X1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl7YVFX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl7YVFX1Ee-rlsOK-auHwQ" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_vl7YU1X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl7YVVX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vl7YVVX1Ee-rlsOK-auHwQ" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_vl7YVFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl7YVlX1Ee-rlsOK-auHwQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vl7YVlX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl7YVVX1Ee-rlsOK-auHwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl7YXFX1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_vl7YXlX1Ee-rlsOK-auHwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vl7YWlX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl7YW1X1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vl7YW1X1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl7YWlX1Ee-rlsOK-auHwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vl7YYFX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl7YX1X1Ee-rlsOK-auHwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_vl7_YlX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl7_YVX1Ee-rlsOK-auHwQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_vmsNVVX1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vmsNVFX1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_vmmGslX1Ee-rlsOK-auHwQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_vl3t_lX1Ee-rlsOK-auHwQ" describedService__SEFF="_vf5o01X1Ee-rlsOK-auHwQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_vl14z1X1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl2f1lX1Ee-rlsOK-auHwQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_vl2f1lX1Ee-rlsOK-auHwQ" entityName="If Branch" predecessor_AbstractAction="_vl14z1X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl2f11X1Ee-rlsOK-auHwQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl2f01X1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_vl2f1VX1Ee-rlsOK-auHwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vl2f0FX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl2f0VX1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vl2f0VX1Ee-rlsOK-auHwQ" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_vl2f0FX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl2f0lX1Ee-rlsOK-auHwQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vl2f0lX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl2f0VX1Ee-rlsOK-auHwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_vl2f11X1Ee-rlsOK-auHwQ" entityName="stopWatch.start()" predecessor_AbstractAction="_vl2f1lX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl3t_FX1Ee-rlsOK-auHwQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_vl3t_FX1Ee-rlsOK-auHwQ" entityName="If Branch" predecessor_AbstractAction="_vl2f11X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl3t_VX1Ee-rlsOK-auHwQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl3t-VX1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_vl3t-1X1Ee-rlsOK-auHwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vl2f2FX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl3t91X1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_vl3t91X1Ee-rlsOK-auHwQ" entityName="If Branch" predecessor_AbstractAction="_vl2f2FX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl3t-FX1Ee-rlsOK-auHwQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl3t9FX1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_vl3t9lX1Ee-rlsOK-auHwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vl2f2VX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl3G7lX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_vl3G7lX1Ee-rlsOK-auHwQ" entityName="Switch Branch" predecessor_AbstractAction="_vl2f2VX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl3G71X1Ee-rlsOK-auHwQ">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl2f5FX1Ee-rlsOK-auHwQ">
                      <branchBehaviour_BranchTransition id="_vl3G4VX1Ee-rlsOK-auHwQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_vl2f2lX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl2f4VX1Ee-rlsOK-auHwQ"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_vl2f4VX1Ee-rlsOK-auHwQ" entityName="If Branch" predecessor_AbstractAction="_vl2f2lX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl2f4lX1Ee-rlsOK-auHwQ">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl2f3lX1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_vl2f4FX1Ee-rlsOK-auHwQ">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_vl2f21X1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl2f3FX1Ee-rlsOK-auHwQ"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_vl2f3FX1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vl2f21X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl2f3VX1Ee-rlsOK-auHwQ"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_vl2f3VX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl2f3FX1Ee-rlsOK-auHwQ"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_vl2f4lX1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vl2f4VX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl2f41X1Ee-rlsOK-auHwQ"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_vl2f41X1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl2f4lX1Ee-rlsOK-auHwQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl3G5VX1Ee-rlsOK-auHwQ">
                      <branchBehaviour_BranchTransition id="_vl3G51X1Ee-rlsOK-auHwQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_vl3G4lX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl3G41X1Ee-rlsOK-auHwQ"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_vl3G41X1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vl3G4lX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl3G5FX1Ee-rlsOK-auHwQ"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_vl3G5FX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl3G41X1Ee-rlsOK-auHwQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl3G61X1Ee-rlsOK-auHwQ">
                      <branchBehaviour_BranchTransition id="_vl3G7VX1Ee-rlsOK-auHwQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_vl3G6FX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl3G6VX1Ee-rlsOK-auHwQ"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_vl3G6VX1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vl3G6FX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl3G6lX1Ee-rlsOK-auHwQ"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_vl3G6lX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl3G6VX1Ee-rlsOK-auHwQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl3G71X1Ee-rlsOK-auHwQ" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_vl3G7lX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl3G8FX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl3G8FX1Ee-rlsOK-auHwQ" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_vl3G71X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl3G8VX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl3G8VX1Ee-rlsOK-auHwQ" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_vl3G8FX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl3G8lX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl3G8lX1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vl3G8VX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl3G81X1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl3G81X1Ee-rlsOK-auHwQ" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_vl3G8lX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl3t8FX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl3t8FX1Ee-rlsOK-auHwQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_vl3G81X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl3t8VX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl3t8VX1Ee-rlsOK-auHwQ" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_vl3t8FX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl3t8lX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vl3t8lX1Ee-rlsOK-auHwQ" entityName="deferredResult" predecessor_AbstractAction="_vl3t8VX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl3t81X1Ee-rlsOK-auHwQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vl3t81X1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl3t8lX1Ee-rlsOK-auHwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vl3t-FX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl3t91X1Ee-rlsOK-auHwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_vl3t_VX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl3t_FX1Ee-rlsOK-auHwQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_vmupnVX1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vmupnFX1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_vmmGs1X1Ee-rlsOK-auHwQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_vl9NjlX1Ee-rlsOK-auHwQ" describedService__SEFF="_vf6P5FX1Ee-rlsOK-auHwQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_vl7_ZVX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl9Ni1X1Ee-rlsOK-auHwQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_vl9Ni1X1Ee-rlsOK-auHwQ" entityName="If Branch" predecessor_AbstractAction="_vl7_ZVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl9NjFX1Ee-rlsOK-auHwQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl9NiFX1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_vl9NilX1Ee-rlsOK-auHwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vl7_ZlX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl9NhlX1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_vl9NhlX1Ee-rlsOK-auHwQ" entityName="Switch Branch" predecessor_AbstractAction="_vl7_ZlX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl9Nh1X1Ee-rlsOK-auHwQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl8mdlX1Ee-rlsOK-auHwQ">
                <branchBehaviour_BranchTransition id="_vl8meFX1Ee-rlsOK-auHwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vl7_Z1X1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl8mcFX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_vl8mcFX1Ee-rlsOK-auHwQ" entityName="If Branch" predecessor_AbstractAction="_vl7_Z1X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl8mcVX1Ee-rlsOK-auHwQ">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl7_cFX1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_vl7_clX1Ee-rlsOK-auHwQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_vl7_aFX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl7_blX1Ee-rlsOK-auHwQ"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_vl7_blX1Ee-rlsOK-auHwQ" entityName="If Branch" predecessor_AbstractAction="_vl7_aFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl7_b1X1Ee-rlsOK-auHwQ">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl7_a1X1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_vl7_bVX1Ee-rlsOK-auHwQ">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_vl7_aVX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl7_alX1Ee-rlsOK-auHwQ"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_vl7_alX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl7_aVX1Ee-rlsOK-auHwQ"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_vl7_b1X1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl7_blX1Ee-rlsOK-auHwQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl8mcVX1Ee-rlsOK-auHwQ" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_vl8mcFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl8mclX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl8mclX1Ee-rlsOK-auHwQ" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_vl8mcVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl8mc1X1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vl8mc1X1Ee-rlsOK-auHwQ" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_vl8mclX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl8mdFX1Ee-rlsOK-auHwQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl8mdFX1Ee-rlsOK-auHwQ" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_vl8mc1X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl8mdVX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vl8mdVX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl8mdFX1Ee-rlsOK-auHwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl8mfFX1Ee-rlsOK-auHwQ">
                <branchBehaviour_BranchTransition id="_vl9NgFX1Ee-rlsOK-auHwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vl8meVX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl8melX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl8melX1Ee-rlsOK-auHwQ" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_vl8meVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl8me1X1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vl8me1X1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl8melX1Ee-rlsOK-auHwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl9Ng1X1Ee-rlsOK-auHwQ">
                <branchBehaviour_BranchTransition id="_vl9NhVX1Ee-rlsOK-auHwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vl9NgVX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl9NglX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vl9NglX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl9NgVX1Ee-rlsOK-auHwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vl9Nh1X1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl9NhlX1Ee-rlsOK-auHwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_vl9NjFX1Ee-rlsOK-auHwQ" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_vl9Ni1X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl9NjVX1Ee-rlsOK-auHwQ"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_vl9NjVX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl9NjFX1Ee-rlsOK-auHwQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_vmxF3VX1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vmxF3FX1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_vmmGsFX1Ee-rlsOK-auHwQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_vl14zVX1Ee-rlsOK-auHwQ" describedService__SEFF="_vf6P4VX1Ee-rlsOK-auHwQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_vgSqYVX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vly1cFX1Ee-rlsOK-auHwQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_vly1cFX1Ee-rlsOK-auHwQ" entityName="If Branch" predecessor_AbstractAction="_vgSqYVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vlzcgFX1Ee-rlsOK-auHwQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vlxnUFX1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_vlyOYFX1Ee-rlsOK-auHwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vgYJ8FX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vlxAQFX1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vlxAQFX1Ee-rlsOK-auHwQ" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_vgYJ8FX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vlxAQVX1Ee-rlsOK-auHwQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController_generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController_generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vlxAQVX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vlxAQFX1Ee-rlsOK-auHwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_vlzcgFX1Ee-rlsOK-auHwQ" entityName="stopWatch.start()" predecessor_AbstractAction="_vly1cFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl14y1X1Ee-rlsOK-auHwQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_vl14y1X1Ee-rlsOK-auHwQ" entityName="Switch Branch" predecessor_AbstractAction="_vlzcgFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl14zFX1Ee-rlsOK-auHwQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl0qqFX1Ee-rlsOK-auHwQ">
          <branchBehaviour_BranchTransition id="_vl0qqlX1Ee-rlsOK-auHwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vlzcgVX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vlzcglX1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vlzcglX1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vlzcgVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vlzcg1X1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vlzcg1X1Ee-rlsOK-auHwQ" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_vlzcglX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vlzchFX1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vlzchFX1Ee-rlsOK-auHwQ" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_vlzcg1X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl0DkFX1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vl0DkFX1Ee-rlsOK-auHwQ" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_vlzchFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl0DkVX1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vl0DkVX1Ee-rlsOK-auHwQ" entityName="deferredResult" predecessor_AbstractAction="_vl0DkFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl0qpFX1Ee-rlsOK-auHwQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_vl0qpFX1Ee-rlsOK-auHwQ" entityName="If Branch" predecessor_AbstractAction="_vl0DkVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl0qpVX1Ee-rlsOK-auHwQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl0qoVX1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_vl0qo1X1Ee-rlsOK-auHwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vl0DklX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl0Dk1X1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl0Dk1X1Ee-rlsOK-auHwQ" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_vl0DklX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl0DlFX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl0DlFX1Ee-rlsOK-auHwQ" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_vl0Dk1X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl0DlVX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl0DlVX1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vl0DlFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl0DllX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl0DllX1Ee-rlsOK-auHwQ" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_vl0DlVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl0Dl1X1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl0Dl1X1Ee-rlsOK-auHwQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_vl0DllX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl0DmFX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl0DmFX1Ee-rlsOK-auHwQ" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_vl0Dl1X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl0DmVX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vl0DmVX1Ee-rlsOK-auHwQ" entityName="deferredResult" predecessor_AbstractAction="_vl0DmFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl0qoFX1Ee-rlsOK-auHwQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vl0qoFX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl0DmVX1Ee-rlsOK-auHwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vl0qpVX1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vl0qpFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl0qplX1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vl0qplX1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vl0qpVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl0qp1X1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vl0qp1X1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl0qplX1Ee-rlsOK-auHwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl14wlX1Ee-rlsOK-auHwQ">
          <branchBehaviour_BranchTransition id="_vl14xFX1Ee-rlsOK-auHwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vl0qq1X1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl1RvFX1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_vl1RvFX1Ee-rlsOK-auHwQ" entityName="If Branch" predecessor_AbstractAction="_vl0qq1X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl1RvVX1Ee-rlsOK-auHwQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl1RuVX1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_vl1Ru1X1Ee-rlsOK-auHwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vl1RsFX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl1RsVX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl1RsVX1Ee-rlsOK-auHwQ" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_vl1RsFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl1RslX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl1RslX1Ee-rlsOK-auHwQ" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_vl1RsVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl1Rs1X1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl1Rs1X1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vl1RslX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl1RtFX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl1RtFX1Ee-rlsOK-auHwQ" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_vl1Rs1X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl1RtVX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl1RtVX1Ee-rlsOK-auHwQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_vl1RtFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl1RtlX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl1RtlX1Ee-rlsOK-auHwQ" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_vl1RtVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl1Rt1X1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vl1Rt1X1Ee-rlsOK-auHwQ" entityName="deferredResult" predecessor_AbstractAction="_vl1RtlX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl1RuFX1Ee-rlsOK-auHwQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vl1RuFX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl1Rt1X1Ee-rlsOK-auHwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vl1RvVX1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vl1RvFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl14wFX1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vl14wFX1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vl1RvVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl14wVX1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vl14wVX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl14wFX1Ee-rlsOK-auHwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl14yFX1Ee-rlsOK-auHwQ">
          <branchBehaviour_BranchTransition id="_vl14ylX1Ee-rlsOK-auHwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vl14xVX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl14xlX1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vl14xlX1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vl14xVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl14x1X1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vl14x1X1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl14xlX1Ee-rlsOK-auHwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_vl14zFX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl14y1X1Ee-rlsOK-auHwQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_vmziGFX1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vmziF1X1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_vmmGtVX1Ee-rlsOK-auHwQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_vl6KPVX1Ee-rlsOK-auHwQ" describedService__SEFF="_vfIz0FX1Ee-rlsOK-auHwQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_vl3uAFX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl4VBlX1Ee-rlsOK-auHwQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_vl4VBlX1Ee-rlsOK-auHwQ" entityName="If Branch" predecessor_AbstractAction="_vl3uAFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl4VB1X1Ee-rlsOK-auHwQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl4VA1X1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_vl4VBVX1Ee-rlsOK-auHwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vl4VAFX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl4VAVX1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vl4VAVX1Ee-rlsOK-auHwQ" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_vl4VAFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl4VAlX1Ee-rlsOK-auHwQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vl4VAlX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl4VAVX1Ee-rlsOK-auHwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_vl4VB1X1Ee-rlsOK-auHwQ" entityName="stopWatch.start()" predecessor_AbstractAction="_vl4VBlX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl6KOlX1Ee-rlsOK-auHwQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_vl6KOlX1Ee-rlsOK-auHwQ" entityName="If Branch" predecessor_AbstractAction="_vl4VB1X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl6KO1X1Ee-rlsOK-auHwQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl6KN1X1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_vl6KOVX1Ee-rlsOK-auHwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vl4VCFX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl6KNVX1Ee-rlsOK-auHwQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_vl6KNVX1Ee-rlsOK-auHwQ" entityName="Switch Branch" predecessor_AbstractAction="_vl4VCFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl6KNlX1Ee-rlsOK-auHwQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl48HVX1Ee-rlsOK-auHwQ">
                <branchBehaviour_BranchTransition id="_vl5jIFX1Ee-rlsOK-auHwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vl4VCVX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl4VClX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl4VClX1Ee-rlsOK-auHwQ" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_vl4VCVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl4VFlX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_vl4VFlX1Ee-rlsOK-auHwQ" entityName="If Branch" predecessor_AbstractAction="_vl4VClX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl48EFX1Ee-rlsOK-auHwQ">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl4VE1X1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_vl4VFVX1Ee-rlsOK-auHwQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_vl4VC1X1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl4VEVX1Ee-rlsOK-auHwQ"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_vl4VEVX1Ee-rlsOK-auHwQ" entityName="If Branch" predecessor_AbstractAction="_vl4VC1X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl4VElX1Ee-rlsOK-auHwQ">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl4VDlX1Ee-rlsOK-auHwQ" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_vl4VEFX1Ee-rlsOK-auHwQ">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_vl4VDFX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl4VDVX1Ee-rlsOK-auHwQ"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_vl4VDVX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl4VDFX1Ee-rlsOK-auHwQ"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_vl4VElX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl4VEVX1Ee-rlsOK-auHwQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl48EFX1Ee-rlsOK-auHwQ" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_vl4VFlX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl48EVX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl48EVX1Ee-rlsOK-auHwQ" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_vl48EFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl48ElX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl48ElX1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vl48EVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl48E1X1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl48E1X1Ee-rlsOK-auHwQ" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_vl48ElX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl48FFX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl48FFX1Ee-rlsOK-auHwQ" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_vl48E1X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl48FVX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vl48FVX1Ee-rlsOK-auHwQ" entityName="deferredResult" predecessor_AbstractAction="_vl48FFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl48FlX1Ee-rlsOK-auHwQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl48FlX1Ee-rlsOK-auHwQ" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_vl48FVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl48F1X1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl48F1X1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vl48FlX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl48GFX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl48GFX1Ee-rlsOK-auHwQ" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_vl48F1X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl48GVX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl48GVX1Ee-rlsOK-auHwQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_vl48GFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl48GlX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vl48GlX1Ee-rlsOK-auHwQ" entityName="deferredResult" predecessor_AbstractAction="_vl48GVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl48G1X1Ee-rlsOK-auHwQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl48G1X1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vl48GlX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl48HFX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vl48HFX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl48G1X1Ee-rlsOK-auHwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl5jKVX1Ee-rlsOK-auHwQ">
                <branchBehaviour_BranchTransition id="_vl5jK1X1Ee-rlsOK-auHwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vl5jIVX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl5jIlX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl5jIlX1Ee-rlsOK-auHwQ" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_vl5jIVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl5jI1X1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl5jI1X1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vl5jIlX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl5jJFX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl5jJFX1Ee-rlsOK-auHwQ" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_vl5jI1X1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl5jJVX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl5jJVX1Ee-rlsOK-auHwQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_vl5jJFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl5jJlX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vl5jJlX1Ee-rlsOK-auHwQ" entityName="deferredResult" predecessor_AbstractAction="_vl5jJVX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl5jJ1X1Ee-rlsOK-auHwQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl5jJ1X1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vl5jJlX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl5jKFX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vl5jKFX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl5jJ1X1Ee-rlsOK-auHwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vl6KMlX1Ee-rlsOK-auHwQ">
                <branchBehaviour_BranchTransition id="_vl6KNFX1Ee-rlsOK-auHwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vl5jLFX1Ee-rlsOK-auHwQ" entityName="Start Action" successor_AbstractAction="_vl6KMFX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vl6KMFX1Ee-rlsOK-auHwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vl5jLFX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl6KMVX1Ee-rlsOK-auHwQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vl6KMVX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl6KMFX1Ee-rlsOK-auHwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vl6KNlX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl6KNVX1Ee-rlsOK-auHwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_vl6KO1X1Ee-rlsOK-auHwQ" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_vl6KOlX1Ee-rlsOK-auHwQ" successor_AbstractAction="_vl6KPFX1Ee-rlsOK-auHwQ"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_vl6KPFX1Ee-rlsOK-auHwQ" entityName="Stop Action" predecessor_AbstractAction="_vl6KO1X1Ee-rlsOK-auHwQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_vm3zgVX1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_vm4allX1Ee-rlsOK-auHwQ" encapsulatedComponent__AssemblyContext="_vmziGFX1Ee-rlsOK-auHwQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_vm5osFX1Ee-rlsOK-auHwQ" innerProvidedRole_ProvidedDelegationConnector="_vmziF1X1Ee-rlsOK-auHwQ" outerProvidedRole_ProvidedDelegationConnector="_vm3zgFX1Ee-rlsOK-auHwQ" assemblyContext_ProvidedDelegationConnector="_vm4allX1Ee-rlsOK-auHwQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vm3zgFX1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_vmmGtVX1Ee-rlsOK-auHwQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_vm3zglX1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_vm4amlX1Ee-rlsOK-auHwQ" encapsulatedComponent__AssemblyContext="_vmmGtlX1Ee-rlsOK-auHwQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_vm3zhFX1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_vm4akFX1Ee-rlsOK-auHwQ" encapsulatedComponent__AssemblyContext="_vmsNVVX1Ee-rlsOK-auHwQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_vm5os1X1Ee-rlsOK-auHwQ" innerProvidedRole_ProvidedDelegationConnector="_vmsNVFX1Ee-rlsOK-auHwQ" outerProvidedRole_ProvidedDelegationConnector="_vm3zg1X1Ee-rlsOK-auHwQ" assemblyContext_ProvidedDelegationConnector="_vm4akFX1Ee-rlsOK-auHwQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vm3zg1X1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_vmmGslX1Ee-rlsOK-auHwQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_vm3zh1X1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_vm4aklX1Ee-rlsOK-auHwQ" encapsulatedComponent__AssemblyContext="_vmmGuVX1Ee-rlsOK-auHwQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_vm5otFX1Ee-rlsOK-auHwQ" innerProvidedRole_ProvidedDelegationConnector="_vmmGt1X1Ee-rlsOK-auHwQ" outerProvidedRole_ProvidedDelegationConnector="_vm3zhVX1Ee-rlsOK-auHwQ" assemblyContext_ProvidedDelegationConnector="_vm4aklX1Ee-rlsOK-auHwQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_vm5otVX1Ee-rlsOK-auHwQ" innerProvidedRole_ProvidedDelegationConnector="_vmmGuFX1Ee-rlsOK-auHwQ" outerProvidedRole_ProvidedDelegationConnector="_vm3zhlX1Ee-rlsOK-auHwQ" assemblyContext_ProvidedDelegationConnector="_vm4aklX1Ee-rlsOK-auHwQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vm3zhVX1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_vmmGsVX1Ee-rlsOK-auHwQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vm3zhlX1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_vmmGtFX1Ee-rlsOK-auHwQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_vm3ziVX1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_vm4alFX1Ee-rlsOK-auHwQ" encapsulatedComponent__AssemblyContext="_vmupnVX1Ee-rlsOK-auHwQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_vm5oslX1Ee-rlsOK-auHwQ" innerProvidedRole_ProvidedDelegationConnector="_vmupnFX1Ee-rlsOK-auHwQ" outerProvidedRole_ProvidedDelegationConnector="_vm3ziFX1Ee-rlsOK-auHwQ" assemblyContext_ProvidedDelegationConnector="_vm4alFX1Ee-rlsOK-auHwQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vm3ziFX1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_vmmGs1X1Ee-rlsOK-auHwQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_vm3zi1X1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_vm4amFX1Ee-rlsOK-auHwQ" encapsulatedComponent__AssemblyContext="_vmxF3VX1Ee-rlsOK-auHwQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_vm5osVX1Ee-rlsOK-auHwQ" innerProvidedRole_ProvidedDelegationConnector="_vmxF3FX1Ee-rlsOK-auHwQ" outerProvidedRole_ProvidedDelegationConnector="_vm3zilX1Ee-rlsOK-auHwQ" assemblyContext_ProvidedDelegationConnector="_vm4amFX1Ee-rlsOK-auHwQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vm3zilX1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_vmmGsFX1Ee-rlsOK-auHwQ"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_vmmGsFX1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_vf6P4VX1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_vfIMwFX1Ee-rlsOK-auHwQ">
      <parameters__OperationSignature dataType__Parameter="_vf6P4FX1Ee-rlsOK-auHwQ" parameterName="request" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_vmmGsVX1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_vf5o0FX1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_vf5BwlX1Ee-rlsOK-auHwQ">
      <parameters__OperationSignature dataType__Parameter="_vf5BxlX1Ee-rlsOK-auHwQ" parameterName="tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_vmmGslX1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_vf5o01X1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_vfIMwFX1Ee-rlsOK-auHwQ">
      <parameters__OperationSignature dataType__Parameter="_vfG-oFX1Ee-rlsOK-auHwQ" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_vmmGs1X1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_vf6P5FX1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_vf5BwlX1Ee-rlsOK-auHwQ">
      <parameters__OperationSignature dataType__Parameter="_vfG-oFX1Ee-rlsOK-auHwQ" parameterName="registrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_vmmGtFX1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_vf5Bw1X1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_vf5BwlX1Ee-rlsOK-auHwQ">
      <parameters__OperationSignature dataType__Parameter="_vf5BwFX1Ee-rlsOK-auHwQ" parameterName="authorization" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_vf5BwVX1Ee-rlsOK-auHwQ" parameterName="teleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_vmmGtVX1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_vfIz0FX1Ee-rlsOK-auHwQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_vfIMwFX1Ee-rlsOK-auHwQ">
      <parameters__OperationSignature dataType__Parameter="_vfG-oFX1Ee-rlsOK-auHwQ" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_vfG-oFX1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_vfIMwFX1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_vf5BwFX1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_vf5BwVX1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_vf5BwlX1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_vf5BxlX1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_vf6P4FX1Ee-rlsOK-auHwQ" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
</repository:Repository>
