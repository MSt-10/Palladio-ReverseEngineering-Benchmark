<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_SrNkDFqsEe-mkYF_kB5rXg">
  <components__Repository xsi:type="repository:BasicComponent" id="_Sq9sZ1qsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_Sq9sZlqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_Sq9sYlqsEe-mkYF_kB5rXg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_SqYdk1qsEe-mkYF_kB5rXg" describedService__SEFF="_Sj40AFqsEe-mkYF_kB5rXg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_SqXPgFqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqYdkFqsEe-mkYF_kB5rXg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SqYdkFqsEe-mkYF_kB5rXg" entityName="If Branch" predecessor_AbstractAction="_SqXPgFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqYdkVqsEe-mkYF_kB5rXg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqX2l1qsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SqX2mVqsEe-mkYF_kB5rXg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SqXPgVqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqX2lVqsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_SqX2lVqsEe-mkYF_kB5rXg" entityName="Switch Branch" predecessor_AbstractAction="_SqXPgVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqX2llqsEe-mkYF_kB5rXg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqX2h1qsEe-mkYF_kB5rXg">
                <branchBehaviour_BranchTransition id="_SqX2iVqsEe-mkYF_kB5rXg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SqXPglqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqX2gVqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_SqX2gVqsEe-mkYF_kB5rXg" entityName="If Branch" predecessor_AbstractAction="_SqXPglqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqX2glqsEe-mkYF_kB5rXg">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqXPi1qsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_SqX2gFqsEe-mkYF_kB5rXg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_SqXPg1qsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqXPiVqsEe-mkYF_kB5rXg"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_SqXPiVqsEe-mkYF_kB5rXg" entityName="If Branch" predecessor_AbstractAction="_SqXPg1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqXPilqsEe-mkYF_kB5rXg">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqXPhlqsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_SqXPiFqsEe-mkYF_kB5rXg">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_SqXPhFqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqXPhVqsEe-mkYF_kB5rXg"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_SqXPhVqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqXPhFqsEe-mkYF_kB5rXg"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_SqXPilqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqXPiVqsEe-mkYF_kB5rXg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqX2glqsEe-mkYF_kB5rXg" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_SqX2gVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqX2g1qsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqX2g1qsEe-mkYF_kB5rXg" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_SqX2glqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqX2hFqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SqX2hFqsEe-mkYF_kB5rXg" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_SqX2g1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqX2hVqsEe-mkYF_kB5rXg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqX2hVqsEe-mkYF_kB5rXg" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_SqX2hFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqX2hlqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SqX2hlqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqX2hVqsEe-mkYF_kB5rXg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqX2jVqsEe-mkYF_kB5rXg">
                <branchBehaviour_BranchTransition id="_SqX2j1qsEe-mkYF_kB5rXg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SqX2ilqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqX2i1qsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqX2i1qsEe-mkYF_kB5rXg" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_SqX2ilqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqX2jFqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SqX2jFqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqX2i1qsEe-mkYF_kB5rXg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqX2klqsEe-mkYF_kB5rXg">
                <branchBehaviour_BranchTransition id="_SqX2lFqsEe-mkYF_kB5rXg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SqX2kFqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqX2kVqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SqX2kVqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqX2kFqsEe-mkYF_kB5rXg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SqX2llqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqX2lVqsEe-mkYF_kB5rXg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_SqYdkVqsEe-mkYF_kB5rXg" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_SqYdkFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqYdklqsEe-mkYF_kB5rXg"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_SqYdklqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqYdkVqsEe-mkYF_kB5rXg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_SrAvsVqsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SrAvsFqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_Sq9sYVqsEe-mkYF_kB5rXg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_SqVaSFqsEe-mkYF_kB5rXg" describedService__SEFF="_SjImEVqsEe-mkYF_kB5rXg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_SqS-AVqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqS-CFqsEe-mkYF_kB5rXg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SqS-CFqsEe-mkYF_kB5rXg" entityName="If Branch" predecessor_AbstractAction="_SqS-AVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqS-CVqsEe-mkYF_kB5rXg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqS-BVqsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SqS-B1qsEe-mkYF_kB5rXg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SqS-AlqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqS-A1qsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SqS-A1qsEe-mkYF_kB5rXg" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_SqS-AlqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqS-BFqsEe-mkYF_kB5rXg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController_generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController_generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SqS-BFqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqS-A1qsEe-mkYF_kB5rXg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_SqS-CVqsEe-mkYF_kB5rXg" entityName="stopWatch.start()" predecessor_AbstractAction="_SqS-CFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqVaRlqsEe-mkYF_kB5rXg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SqVaRlqsEe-mkYF_kB5rXg" entityName="Switch Branch" predecessor_AbstractAction="_SqS-CVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqVaR1qsEe-mkYF_kB5rXg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqUMLFqsEe-mkYF_kB5rXg">
          <branchBehaviour_BranchTransition id="_SqUMLlqsEe-mkYF_kB5rXg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SqTlEFqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqTlEVqsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SqTlEVqsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqTlEFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqTlElqsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SqTlElqsEe-mkYF_kB5rXg" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SqTlEVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqTlE1qsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SqTlE1qsEe-mkYF_kB5rXg" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_SqTlElqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqTlFFqsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SqTlFFqsEe-mkYF_kB5rXg" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_SqTlE1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqTlFVqsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SqTlFVqsEe-mkYF_kB5rXg" entityName="deferredResult" predecessor_AbstractAction="_SqTlFFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUMKFqsEe-mkYF_kB5rXg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_SqUMKFqsEe-mkYF_kB5rXg" entityName="If Branch" predecessor_AbstractAction="_SqTlFVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUMKVqsEe-mkYF_kB5rXg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqUMJVqsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_SqUMJ1qsEe-mkYF_kB5rXg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SqTlFlqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqTlF1qsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqTlF1qsEe-mkYF_kB5rXg" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_SqTlFlqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqTlGFqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqTlGFqsEe-mkYF_kB5rXg" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_SqTlF1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqTlGVqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqTlGVqsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqTlGFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUMIFqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqUMIFqsEe-mkYF_kB5rXg" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SqTlGVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUMIVqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqUMIVqsEe-mkYF_kB5rXg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_SqUMIFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUMIlqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqUMIlqsEe-mkYF_kB5rXg" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_SqUMIVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUMI1qsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SqUMI1qsEe-mkYF_kB5rXg" entityName="deferredResult" predecessor_AbstractAction="_SqUMIlqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUMJFqsEe-mkYF_kB5rXg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SqUMJFqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqUMI1qsEe-mkYF_kB5rXg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SqUMKVqsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqUMKFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUMKlqsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SqUMKlqsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqUMKVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUMK1qsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SqUMK1qsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqUMKlqsEe-mkYF_kB5rXg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqUzQFqsEe-mkYF_kB5rXg">
          <branchBehaviour_BranchTransition id="_SqUzQlqsEe-mkYF_kB5rXg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SqUML1qsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqUzPFqsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_SqUzPFqsEe-mkYF_kB5rXg" entityName="If Branch" predecessor_AbstractAction="_SqUML1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUzPVqsEe-mkYF_kB5rXg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqUzOVqsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_SqUzO1qsEe-mkYF_kB5rXg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SqUzMFqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqUzMVqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqUzMVqsEe-mkYF_kB5rXg" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_SqUzMFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUzMlqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqUzMlqsEe-mkYF_kB5rXg" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_SqUzMVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUzM1qsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqUzM1qsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqUzMlqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUzNFqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqUzNFqsEe-mkYF_kB5rXg" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SqUzM1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUzNVqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqUzNVqsEe-mkYF_kB5rXg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_SqUzNFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUzNlqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqUzNlqsEe-mkYF_kB5rXg" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_SqUzNVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUzN1qsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SqUzN1qsEe-mkYF_kB5rXg" entityName="deferredResult" predecessor_AbstractAction="_SqUzNlqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUzOFqsEe-mkYF_kB5rXg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SqUzOFqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqUzN1qsEe-mkYF_kB5rXg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SqUzPVqsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqUzPFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUzPlqsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SqUzPlqsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqUzPVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqUzP1qsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SqUzP1qsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqUzPlqsEe-mkYF_kB5rXg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqVaQ1qsEe-mkYF_kB5rXg">
          <branchBehaviour_BranchTransition id="_SqVaRVqsEe-mkYF_kB5rXg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SqVaQFqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqVaQVqsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SqVaQVqsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqVaQFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqVaQlqsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SqVaQlqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqVaQVqsEe-mkYF_kB5rXg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_SqVaR1qsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqVaRlqsEe-mkYF_kB5rXg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_SrCk7lqsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SrCk7VqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_Sq9sZFqsEe-mkYF_kB5rXg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_SqXPflqsEe-mkYF_kB5rXg" describedService__SEFF="_Sj4M8VqsEe-mkYF_kB5rXg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_SqVaSlqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqVaUVqsEe-mkYF_kB5rXg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SqVaUVqsEe-mkYF_kB5rXg" entityName="If Branch" predecessor_AbstractAction="_SqVaSlqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqVaUlqsEe-mkYF_kB5rXg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqVaTlqsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SqVaUFqsEe-mkYF_kB5rXg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SqVaS1qsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqVaTFqsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SqVaTFqsEe-mkYF_kB5rXg" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_SqVaS1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqVaTVqsEe-mkYF_kB5rXg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SqVaTVqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqVaTFqsEe-mkYF_kB5rXg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_SqVaUlqsEe-mkYF_kB5rXg" entityName="stopWatch.start()" predecessor_AbstractAction="_SqVaUVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqXPe1qsEe-mkYF_kB5rXg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SqXPe1qsEe-mkYF_kB5rXg" entityName="If Branch" predecessor_AbstractAction="_SqVaUlqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqXPfFqsEe-mkYF_kB5rXg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqXPeFqsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SqXPelqsEe-mkYF_kB5rXg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SqVaU1qsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqXPdlqsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_SqXPdlqsEe-mkYF_kB5rXg" entityName="Switch Branch" predecessor_AbstractAction="_SqVaU1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqXPd1qsEe-mkYF_kB5rXg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqWoY1qsEe-mkYF_kB5rXg">
                <branchBehaviour_BranchTransition id="_SqWoZVqsEe-mkYF_kB5rXg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SqVaVFqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqVaVVqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqVaVVqsEe-mkYF_kB5rXg" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_SqVaVFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWBW1qsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_SqWBW1qsEe-mkYF_kB5rXg" entityName="If Branch" predecessor_AbstractAction="_SqVaVVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWBXFqsEe-mkYF_kB5rXg">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqWBWFqsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_SqWBWlqsEe-mkYF_kB5rXg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_SqWBUFqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqWBVlqsEe-mkYF_kB5rXg"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_SqWBVlqsEe-mkYF_kB5rXg" entityName="If Branch" predecessor_AbstractAction="_SqWBUFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWBV1qsEe-mkYF_kB5rXg">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqWBU1qsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_SqWBVVqsEe-mkYF_kB5rXg">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_SqWBUVqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqWBUlqsEe-mkYF_kB5rXg"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_SqWBUlqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqWBUVqsEe-mkYF_kB5rXg"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_SqWBV1qsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqWBVlqsEe-mkYF_kB5rXg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqWBXFqsEe-mkYF_kB5rXg" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_SqWBW1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWBXVqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqWBXVqsEe-mkYF_kB5rXg" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_SqWBXFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWBXlqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqWBXlqsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqWBXVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWBX1qsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqWBX1qsEe-mkYF_kB5rXg" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SqWBXlqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWBYFqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqWBYFqsEe-mkYF_kB5rXg" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_SqWBX1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWBYVqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SqWBYVqsEe-mkYF_kB5rXg" entityName="deferredResult" predecessor_AbstractAction="_SqWBYFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWBYlqsEe-mkYF_kB5rXg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqWBYlqsEe-mkYF_kB5rXg" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_SqWBYVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWBY1qsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqWBY1qsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqWBYlqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWBZFqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqWBZFqsEe-mkYF_kB5rXg" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SqWBY1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWBZVqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqWBZVqsEe-mkYF_kB5rXg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_SqWBZFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWoYFqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SqWoYFqsEe-mkYF_kB5rXg" entityName="deferredResult" predecessor_AbstractAction="_SqWBZVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWoYVqsEe-mkYF_kB5rXg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqWoYVqsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqWoYFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWoYlqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SqWoYlqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqWoYVqsEe-mkYF_kB5rXg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqWoblqsEe-mkYF_kB5rXg">
                <branchBehaviour_BranchTransition id="_SqWocFqsEe-mkYF_kB5rXg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SqWoZlqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqWoZ1qsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqWoZ1qsEe-mkYF_kB5rXg" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_SqWoZlqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWoaFqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqWoaFqsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqWoZ1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWoaVqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqWoaVqsEe-mkYF_kB5rXg" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SqWoaFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWoalqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqWoalqsEe-mkYF_kB5rXg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_SqWoaVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWoa1qsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SqWoa1qsEe-mkYF_kB5rXg" entityName="deferredResult" predecessor_AbstractAction="_SqWoalqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWobFqsEe-mkYF_kB5rXg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqWobFqsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqWoa1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqWobVqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SqWobVqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqWobFqsEe-mkYF_kB5rXg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqXPc1qsEe-mkYF_kB5rXg">
                <branchBehaviour_BranchTransition id="_SqXPdVqsEe-mkYF_kB5rXg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SqXPcFqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqXPcVqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqXPcVqsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqXPcFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqXPclqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SqXPclqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqXPcVqsEe-mkYF_kB5rXg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SqXPd1qsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqXPdlqsEe-mkYF_kB5rXg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_SqXPfFqsEe-mkYF_kB5rXg" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_SqXPe1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqXPfVqsEe-mkYF_kB5rXg"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_SqXPfVqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqXPfFqsEe-mkYF_kB5rXg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_SrFBK1qsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SrFBKlqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_Sq9sZVqsEe-mkYF_kB5rXg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_SqZruFqsEe-mkYF_kB5rXg" describedService__SEFF="_Sj40A1qsEe-mkYF_kB5rXg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_SqYdlVqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqYdnFqsEe-mkYF_kB5rXg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SqYdnFqsEe-mkYF_kB5rXg" entityName="If Branch" predecessor_AbstractAction="_SqYdlVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqYdnVqsEe-mkYF_kB5rXg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqYdmVqsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SqYdm1qsEe-mkYF_kB5rXg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SqYdllqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqYdl1qsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SqYdl1qsEe-mkYF_kB5rXg" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_SqYdllqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqYdmFqsEe-mkYF_kB5rXg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SqYdmFqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqYdl1qsEe-mkYF_kB5rXg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_SqYdnVqsEe-mkYF_kB5rXg" entityName="stopWatch.start()" predecessor_AbstractAction="_SqYdnFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqZrtlqsEe-mkYF_kB5rXg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SqZrtlqsEe-mkYF_kB5rXg" entityName="If Branch" predecessor_AbstractAction="_SqYdnVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqZrt1qsEe-mkYF_kB5rXg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqZrs1qsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SqZrtVqsEe-mkYF_kB5rXg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SqYdnlqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqZrsVqsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_SqZrsVqsEe-mkYF_kB5rXg" entityName="If Branch" predecessor_AbstractAction="_SqYdnlqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqZrslqsEe-mkYF_kB5rXg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqZEuFqsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_SqZrsFqsEe-mkYF_kB5rXg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SqYdn1qsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqZErlqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_SqZErlqsEe-mkYF_kB5rXg" entityName="Switch Branch" predecessor_AbstractAction="_SqYdn1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqZEr1qsEe-mkYF_kB5rXg">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqYdqlqsEe-mkYF_kB5rXg">
                      <branchBehaviour_BranchTransition id="_SqZEoVqsEe-mkYF_kB5rXg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_SqYdoFqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqYdp1qsEe-mkYF_kB5rXg"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_SqYdp1qsEe-mkYF_kB5rXg" entityName="If Branch" predecessor_AbstractAction="_SqYdoFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqYdqFqsEe-mkYF_kB5rXg">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqYdpFqsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_SqYdplqsEe-mkYF_kB5rXg">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_SqYdoVqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqYdolqsEe-mkYF_kB5rXg"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_SqYdolqsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqYdoVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqYdo1qsEe-mkYF_kB5rXg"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_SqYdo1qsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqYdolqsEe-mkYF_kB5rXg"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_SqYdqFqsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqYdp1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqYdqVqsEe-mkYF_kB5rXg"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_SqYdqVqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqYdqFqsEe-mkYF_kB5rXg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqZEpVqsEe-mkYF_kB5rXg">
                      <branchBehaviour_BranchTransition id="_SqZEp1qsEe-mkYF_kB5rXg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_SqZEolqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqZEo1qsEe-mkYF_kB5rXg"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_SqZEo1qsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqZEolqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqZEpFqsEe-mkYF_kB5rXg"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_SqZEpFqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqZEo1qsEe-mkYF_kB5rXg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqZEq1qsEe-mkYF_kB5rXg">
                      <branchBehaviour_BranchTransition id="_SqZErVqsEe-mkYF_kB5rXg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_SqZEqFqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqZEqVqsEe-mkYF_kB5rXg"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_SqZEqVqsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqZEqFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqZEqlqsEe-mkYF_kB5rXg"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_SqZEqlqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqZEqVqsEe-mkYF_kB5rXg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqZEr1qsEe-mkYF_kB5rXg" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_SqZErlqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqZEsFqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqZEsFqsEe-mkYF_kB5rXg" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_SqZEr1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqZEsVqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqZEsVqsEe-mkYF_kB5rXg" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_SqZEsFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqZEslqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqZEslqsEe-mkYF_kB5rXg" entityName="stopWatch.stop()" predecessor_AbstractAction="_SqZEsVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqZEs1qsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqZEs1qsEe-mkYF_kB5rXg" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SqZEslqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqZEtFqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqZEtFqsEe-mkYF_kB5rXg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_SqZEs1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqZEtVqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqZEtVqsEe-mkYF_kB5rXg" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_SqZEtFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqZEtlqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SqZEtlqsEe-mkYF_kB5rXg" entityName="deferredResult" predecessor_AbstractAction="_SqZEtVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqZEt1qsEe-mkYF_kB5rXg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SqZEt1qsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqZEtlqsEe-mkYF_kB5rXg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SqZrslqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqZrsVqsEe-mkYF_kB5rXg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_SqZrt1qsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqZrtlqsEe-mkYF_kB5rXg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_SrG2X1qsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SrG2XVqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_Sq9sYFqsEe-mkYF_kB5rXg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SrG2XlqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_Sq9sY1qsEe-mkYF_kB5rXg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_SqSW91qsEe-mkYF_kB5rXg" describedService__SEFF="_Sj3l5FqsEe-mkYF_kB5rXg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_SkQnc1qsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqPToFqsEe-mkYF_kB5rXg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SqPToFqsEe-mkYF_kB5rXg" entityName="If Branch" predecessor_AbstractAction="_SkQnc1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqSW9VqsEe-mkYF_kB5rXg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SkTqwFqsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SkUR0FqsEe-mkYF_kB5rXg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SkScoFqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SkTDsFqsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SkTDsFqsEe-mkYF_kB5rXg" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_SkScoFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SkTDsVqsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SkTDsVqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SkTDsFqsEe-mkYF_kB5rXg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqOsk1qsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SqOslVqsEe-mkYF_kB5rXg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SqOskFqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqOskVqsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SqOskVqsEe-mkYF_kB5rXg" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_SqOskFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqOsklqsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SqOsklqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqOskVqsEe-mkYF_kB5rXg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SqSW9VqsEe-mkYF_kB5rXg" entityName="If Branch" predecessor_AbstractAction="_SqPToFqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqSW9lqsEe-mkYF_kB5rXg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqSW8lqsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SqSW9FqsEe-mkYF_kB5rXg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SqPToVqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqSW8FqsEe-mkYF_kB5rXg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_SqSW8FqsEe-mkYF_kB5rXg" entityName="If Branch" predecessor_AbstractAction="_SqPToVqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqSW8VqsEe-mkYF_kB5rXg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqRv4lqsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_SqRv5FqsEe-mkYF_kB5rXg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SqPTolqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqPTo1qsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SqPTo1qsEe-mkYF_kB5rXg" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_SqPTolqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqRv4FqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SqRv4FqsEe-mkYF_kB5rXg" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_SqPTo1qsEe-mkYF_kB5rXg" successor_AbstractAction="_SqRv4VqsEe-mkYF_kB5rXg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SqRv4VqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqRv4FqsEe-mkYF_kB5rXg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SqRv51qsEe-mkYF_kB5rXg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_SqRv6VqsEe-mkYF_kB5rXg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SqRv5VqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqRv5lqsEe-mkYF_kB5rXg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SqRv5lqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqRv5VqsEe-mkYF_kB5rXg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SqSW8VqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqSW8FqsEe-mkYF_kB5rXg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_SqSW9lqsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqSW9VqsEe-mkYF_kB5rXg"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_SqSW_FqsEe-mkYF_kB5rXg" describedService__SEFF="_Sj2-0lqsEe-mkYF_kB5rXg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_SqSW-VqsEe-mkYF_kB5rXg" entityName="Start Action" successor_AbstractAction="_SqSW-lqsEe-mkYF_kB5rXg"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SqSW-lqsEe-mkYF_kB5rXg" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_SqSW-VqsEe-mkYF_kB5rXg" successor_AbstractAction="_SqSW-1qsEe-mkYF_kB5rXg">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_SqSW-1qsEe-mkYF_kB5rXg" entityName="Stop Action" predecessor_AbstractAction="_SqSW-lqsEe-mkYF_kB5rXg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_SrLHylqsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:CompositeComponent" id="_SrM88VqsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_SrNkBlqsEe-mkYF_kB5rXg" encapsulatedComponent__AssemblyContext="_SrCk7lqsEe-mkYF_kB5rXg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_SrOLEVqsEe-mkYF_kB5rXg" innerProvidedRole_ProvidedDelegationConnector="_SrCk7VqsEe-mkYF_kB5rXg" outerProvidedRole_ProvidedDelegationConnector="_SrM88FqsEe-mkYF_kB5rXg" assemblyContext_ProvidedDelegationConnector="_SrNkBlqsEe-mkYF_kB5rXg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SrM88FqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_Sq9sZFqsEe-mkYF_kB5rXg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_SrM881qsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_SrNkAFqsEe-mkYF_kB5rXg" encapsulatedComponent__AssemblyContext="_SrAvsVqsEe-mkYF_kB5rXg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_SrOyIFqsEe-mkYF_kB5rXg" innerProvidedRole_ProvidedDelegationConnector="_SrAvsFqsEe-mkYF_kB5rXg" outerProvidedRole_ProvidedDelegationConnector="_SrM88lqsEe-mkYF_kB5rXg" assemblyContext_ProvidedDelegationConnector="_SrNkAFqsEe-mkYF_kB5rXg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SrM88lqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_Sq9sYVqsEe-mkYF_kB5rXg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_SrM89VqsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_SrNkAlqsEe-mkYF_kB5rXg" encapsulatedComponent__AssemblyContext="_SrFBK1qsEe-mkYF_kB5rXg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_SrOLElqsEe-mkYF_kB5rXg" innerProvidedRole_ProvidedDelegationConnector="_SrFBKlqsEe-mkYF_kB5rXg" outerProvidedRole_ProvidedDelegationConnector="_SrM89FqsEe-mkYF_kB5rXg" assemblyContext_ProvidedDelegationConnector="_SrNkAlqsEe-mkYF_kB5rXg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SrM89FqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_Sq9sZVqsEe-mkYF_kB5rXg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_SrM8-FqsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_SrNkCFqsEe-mkYF_kB5rXg" encapsulatedComponent__AssemblyContext="_SrG2X1qsEe-mkYF_kB5rXg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_SrOLEFqsEe-mkYF_kB5rXg" innerProvidedRole_ProvidedDelegationConnector="_SrG2XVqsEe-mkYF_kB5rXg" outerProvidedRole_ProvidedDelegationConnector="_SrM89lqsEe-mkYF_kB5rXg" assemblyContext_ProvidedDelegationConnector="_SrNkCFqsEe-mkYF_kB5rXg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_SrOyIlqsEe-mkYF_kB5rXg" innerProvidedRole_ProvidedDelegationConnector="_SrG2XlqsEe-mkYF_kB5rXg" outerProvidedRole_ProvidedDelegationConnector="_SrM891qsEe-mkYF_kB5rXg" assemblyContext_ProvidedDelegationConnector="_SrNkCFqsEe-mkYF_kB5rXg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SrM89lqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_Sq9sYFqsEe-mkYF_kB5rXg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SrM891qsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_Sq9sY1qsEe-mkYF_kB5rXg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_SrM8-lqsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_SrNkClqsEe-mkYF_kB5rXg" encapsulatedComponent__AssemblyContext="_Sq9sZ1qsEe-mkYF_kB5rXg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_SrOyIVqsEe-mkYF_kB5rXg" innerProvidedRole_ProvidedDelegationConnector="_Sq9sZlqsEe-mkYF_kB5rXg" outerProvidedRole_ProvidedDelegationConnector="_SrM8-VqsEe-mkYF_kB5rXg" assemblyContext_ProvidedDelegationConnector="_SrNkClqsEe-mkYF_kB5rXg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SrM8-VqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_Sq9sYlqsEe-mkYF_kB5rXg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_SrM8-1qsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_SrNkBFqsEe-mkYF_kB5rXg" encapsulatedComponent__AssemblyContext="_SrLHylqsEe-mkYF_kB5rXg"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_Sq9sYFqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_Sj3l5FqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_Sj2-0VqsEe-mkYF_kB5rXg">
      <parameters__OperationSignature dataType__Parameter="_Sj3l4lqsEe-mkYF_kB5rXg" parameterName="authorization" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_Sj3l41qsEe-mkYF_kB5rXg" parameterName="teleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_Sq9sYVqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_SjImEVqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_SjImEFqsEe-mkYF_kB5rXg">
      <parameters__OperationSignature dataType__Parameter="_SjHX8FqsEe-mkYF_kB5rXg" parameterName="request" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_Sq9sYlqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_Sj40AFqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_Sj2-0VqsEe-mkYF_kB5rXg">
      <parameters__OperationSignature dataType__Parameter="_Sj4M8FqsEe-mkYF_kB5rXg" parameterName="registrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_Sq9sY1qsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_Sj2-0lqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_Sj2-0VqsEe-mkYF_kB5rXg">
      <parameters__OperationSignature dataType__Parameter="_Sj2-0FqsEe-mkYF_kB5rXg" parameterName="tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_Sq9sZFqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_Sj4M8VqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_SjImEFqsEe-mkYF_kB5rXg">
      <parameters__OperationSignature dataType__Parameter="_Sj4M8FqsEe-mkYF_kB5rXg" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_Sq9sZVqsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_Sj40A1qsEe-mkYF_kB5rXg" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_SjImEFqsEe-mkYF_kB5rXg">
      <parameters__OperationSignature dataType__Parameter="_Sj4M8FqsEe-mkYF_kB5rXg" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_SjHX8FqsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_SjImEFqsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_Sj2-0FqsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_Sj2-0VqsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_Sj3l4lqsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_Sj3l41qsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_Sj4M8FqsEe-mkYF_kB5rXg" entityName="app_coronawarn_verification_model_RegistrationToken"/>
</repository:Repository>
