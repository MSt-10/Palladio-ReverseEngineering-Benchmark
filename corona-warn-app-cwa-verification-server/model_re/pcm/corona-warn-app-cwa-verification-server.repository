<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_h8vwyKlCEe-A8_AyXtpQdA">
  <components__Repository xsi:type="repository:BasicComponent" id="_h8erA6lCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_h8erAqlCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_h8eD-KlCEe-A8_AyXtpQdA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_h71x2KlCEe-A8_AyXtpQdA" describedService__SEFF="_h1t7tKlCEe-A8_AyXtpQdA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_h7z8palCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7z8rKlCEe-A8_AyXtpQdA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_h7z8rKlCEe-A8_AyXtpQdA" entityName="If Branch" predecessor_AbstractAction="_h7z8palCEe-A8_AyXtpQdA" successor_AbstractAction="_h7z8ralCEe-A8_AyXtpQdA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7z8qalCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_h7z8q6lCEe-A8_AyXtpQdA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_h7z8pqlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7z8p6lCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_h7z8p6lCEe-A8_AyXtpQdA" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_h7z8pqlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7z8qKlCEe-A8_AyXtpQdA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_h7z8qKlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7z8p6lCEe-A8_AyXtpQdA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_h7z8ralCEe-A8_AyXtpQdA" entityName="stopWatch.start()" predecessor_AbstractAction="_h7z8rKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h71x1qlCEe-A8_AyXtpQdA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_h71x1qlCEe-A8_AyXtpQdA" entityName="If Branch" predecessor_AbstractAction="_h7z8ralCEe-A8_AyXtpQdA" successor_AbstractAction="_h71x16lCEe-A8_AyXtpQdA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h71x06lCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_h71x1alCEe-A8_AyXtpQdA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_h7z8rqlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h71x0alCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_h71x0alCEe-A8_AyXtpQdA" entityName="If Branch" predecessor_AbstractAction="_h7z8rqlCEe-A8_AyXtpQdA" successor_AbstractAction="_h71x0qlCEe-A8_AyXtpQdA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h71KzqlCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_h71x0KlCEe-A8_AyXtpQdA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_h7z8r6lCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h71KxKlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_h71KxKlCEe-A8_AyXtpQdA" entityName="Switch Branch" predecessor_AbstractAction="_h7z8r6lCEe-A8_AyXtpQdA" successor_AbstractAction="_h71KxalCEe-A8_AyXtpQdA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h70jualCEe-A8_AyXtpQdA">
                      <branchBehaviour_BranchTransition id="_h70ju6lCEe-A8_AyXtpQdA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_h7z8sKlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h70jtqlCEe-A8_AyXtpQdA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_h70jtqlCEe-A8_AyXtpQdA" entityName="If Branch" predecessor_AbstractAction="_h7z8sKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h70jt6lCEe-A8_AyXtpQdA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h70js6lCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_h70jtalCEe-A8_AyXtpQdA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_h70jsKlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h70jsalCEe-A8_AyXtpQdA"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_h70jsalCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h70jsKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h70jsqlCEe-A8_AyXtpQdA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_h70jsqlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h70jsalCEe-A8_AyXtpQdA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_h70jt6lCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h70jtqlCEe-A8_AyXtpQdA" successor_AbstractAction="_h70juKlCEe-A8_AyXtpQdA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_h70juKlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h70jt6lCEe-A8_AyXtpQdA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h70jv6lCEe-A8_AyXtpQdA">
                      <branchBehaviour_BranchTransition id="_h70jwalCEe-A8_AyXtpQdA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_h70jvKlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h70jvalCEe-A8_AyXtpQdA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_h70jvalCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h70jvKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h70jvqlCEe-A8_AyXtpQdA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_h70jvqlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h70jvalCEe-A8_AyXtpQdA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h71KwalCEe-A8_AyXtpQdA">
                      <branchBehaviour_BranchTransition id="_h71Kw6lCEe-A8_AyXtpQdA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_h70jwqlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h70jw6lCEe-A8_AyXtpQdA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_h70jw6lCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h70jwqlCEe-A8_AyXtpQdA" successor_AbstractAction="_h71KwKlCEe-A8_AyXtpQdA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_h71KwKlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h70jw6lCEe-A8_AyXtpQdA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h71KxalCEe-A8_AyXtpQdA" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_h71KxKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h71KxqlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h71KxqlCEe-A8_AyXtpQdA" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_h71KxalCEe-A8_AyXtpQdA" successor_AbstractAction="_h71Kx6lCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h71Kx6lCEe-A8_AyXtpQdA" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_h71KxqlCEe-A8_AyXtpQdA" successor_AbstractAction="_h71KyKlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h71KyKlCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h71Kx6lCEe-A8_AyXtpQdA" successor_AbstractAction="_h71KyalCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h71KyalCEe-A8_AyXtpQdA" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_h71KyKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h71KyqlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h71KyqlCEe-A8_AyXtpQdA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_h71KyalCEe-A8_AyXtpQdA" successor_AbstractAction="_h71Ky6lCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h71Ky6lCEe-A8_AyXtpQdA" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_h71KyqlCEe-A8_AyXtpQdA" successor_AbstractAction="_h71KzKlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_h71KzKlCEe-A8_AyXtpQdA" entityName="deferredResult" predecessor_AbstractAction="_h71Ky6lCEe-A8_AyXtpQdA" successor_AbstractAction="_h71KzalCEe-A8_AyXtpQdA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_h71KzalCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h71KzKlCEe-A8_AyXtpQdA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_h71x0qlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h71x0alCEe-A8_AyXtpQdA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_h71x16lCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h71x1qlCEe-A8_AyXtpQdA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_h8huWKlCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_h8huVqlCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_h8eD-qlCEe-A8_AyXtpQdA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_h8huV6lCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_h8erAKlCEe-A8_AyXtpQdA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_h7yHcalCEe-A8_AyXtpQdA" describedService__SEFF="_h03nIKlCEe-A8_AyXtpQdA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_h7w5UqlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7w5X6lCEe-A8_AyXtpQdA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_h7w5X6lCEe-A8_AyXtpQdA" entityName="If Branch" predecessor_AbstractAction="_h7w5UqlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7xgcqlCEe-A8_AyXtpQdA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7w5VqlCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_h7w5WKlCEe-A8_AyXtpQdA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_h7w5U6lCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7w5VKlCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_h7w5VKlCEe-A8_AyXtpQdA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_h7w5U6lCEe-A8_AyXtpQdA" successor_AbstractAction="_h7w5ValCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_h7w5ValCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7w5VKlCEe-A8_AyXtpQdA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7w5XKlCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_h7w5XqlCEe-A8_AyXtpQdA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_h7w5WalCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7w5WqlCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_h7w5WqlCEe-A8_AyXtpQdA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_h7w5WalCEe-A8_AyXtpQdA" successor_AbstractAction="_h7w5W6lCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_h7w5W6lCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7w5WqlCEe-A8_AyXtpQdA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_h7xgcqlCEe-A8_AyXtpQdA" entityName="If Branch" predecessor_AbstractAction="_h7w5X6lCEe-A8_AyXtpQdA" successor_AbstractAction="_h7yHcKlCEe-A8_AyXtpQdA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7xgb6lCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_h7xgcalCEe-A8_AyXtpQdA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_h7xgYKlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7xgbalCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_h7xgbalCEe-A8_AyXtpQdA" entityName="If Branch" predecessor_AbstractAction="_h7xgYKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7xgbqlCEe-A8_AyXtpQdA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7xgZalCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_h7xgZ6lCEe-A8_AyXtpQdA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_h7xgYalCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7xgYqlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7xgYqlCEe-A8_AyXtpQdA" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_h7xgYalCEe-A8_AyXtpQdA" successor_AbstractAction="_h7xgY6lCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_h7xgY6lCEe-A8_AyXtpQdA" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_h7xgYqlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7xgZKlCEe-A8_AyXtpQdA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_h7xgZKlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7xgY6lCEe-A8_AyXtpQdA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7xgaqlCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_h7xgbKlCEe-A8_AyXtpQdA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_h7xgaKlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7xgaalCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_h7xgaalCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7xgaKlCEe-A8_AyXtpQdA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_h7xgbqlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7xgbalCEe-A8_AyXtpQdA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_h7yHcKlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7xgcqlCEe-A8_AyXtpQdA"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_h7w5UKlCEe-A8_AyXtpQdA" describedService__SEFF="_h1stkalCEe-A8_AyXtpQdA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_h7wSRalCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7wSRqlCEe-A8_AyXtpQdA"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_h7wSRqlCEe-A8_AyXtpQdA" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_h7wSRalCEe-A8_AyXtpQdA" successor_AbstractAction="_h7wSR6lCEe-A8_AyXtpQdA">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_h7wSR6lCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7wSRqlCEe-A8_AyXtpQdA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_h8mm1alCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_h8mm1KlCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_h8eD-alCEe-A8_AyXtpQdA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_h7z8o6lCEe-A8_AyXtpQdA" describedService__SEFF="_h1tUoalCEe-A8_AyXtpQdA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_h7yHc6lCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7z8oKlCEe-A8_AyXtpQdA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_h7z8oKlCEe-A8_AyXtpQdA" entityName="If Branch" predecessor_AbstractAction="_h7yHc6lCEe-A8_AyXtpQdA" successor_AbstractAction="_h7z8oalCEe-A8_AyXtpQdA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7zVnqlCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_h7zVoKlCEe-A8_AyXtpQdA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_h7yHdKlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7zVnKlCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_h7zVnKlCEe-A8_AyXtpQdA" entityName="Switch Branch" predecessor_AbstractAction="_h7yHdKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7zVnalCEe-A8_AyXtpQdA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7yui6lCEe-A8_AyXtpQdA">
                <branchBehaviour_BranchTransition id="_h7zVkKlCEe-A8_AyXtpQdA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_h7yHdalCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7yuhalCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_h7yuhalCEe-A8_AyXtpQdA" entityName="If Branch" predecessor_AbstractAction="_h7yHdalCEe-A8_AyXtpQdA" successor_AbstractAction="_h7yuhqlCEe-A8_AyXtpQdA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7yugqlCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_h7yuhKlCEe-A8_AyXtpQdA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_h7yHdqlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7yugKlCEe-A8_AyXtpQdA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_h7yugKlCEe-A8_AyXtpQdA" entityName="If Branch" predecessor_AbstractAction="_h7yHdqlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7yugalCEe-A8_AyXtpQdA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7yHealCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_h7yHe6lCEe-A8_AyXtpQdA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_h7yHd6lCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7yHeKlCEe-A8_AyXtpQdA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_h7yHeKlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7yHd6lCEe-A8_AyXtpQdA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_h7yugalCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7yugKlCEe-A8_AyXtpQdA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7yuhqlCEe-A8_AyXtpQdA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_h7yuhalCEe-A8_AyXtpQdA" successor_AbstractAction="_h7yuh6lCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7yuh6lCEe-A8_AyXtpQdA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_h7yuhqlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7yuiKlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_h7yuiKlCEe-A8_AyXtpQdA" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_h7yuh6lCEe-A8_AyXtpQdA" successor_AbstractAction="_h7yuialCEe-A8_AyXtpQdA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7yuialCEe-A8_AyXtpQdA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_h7yuiKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7yuiqlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_h7yuiqlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7yuialCEe-A8_AyXtpQdA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7zVlKlCEe-A8_AyXtpQdA">
                <branchBehaviour_BranchTransition id="_h7zVlqlCEe-A8_AyXtpQdA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_h7zVkalCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7zVkqlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7zVkqlCEe-A8_AyXtpQdA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_h7zVkalCEe-A8_AyXtpQdA" successor_AbstractAction="_h7zVk6lCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_h7zVk6lCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7zVkqlCEe-A8_AyXtpQdA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7zVmalCEe-A8_AyXtpQdA">
                <branchBehaviour_BranchTransition id="_h7zVm6lCEe-A8_AyXtpQdA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_h7zVl6lCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7zVmKlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_h7zVmKlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7zVl6lCEe-A8_AyXtpQdA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_h7zVnalCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7zVnKlCEe-A8_AyXtpQdA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_h7z8oalCEe-A8_AyXtpQdA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_h7z8oKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7z8oqlCEe-A8_AyXtpQdA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_h7z8oqlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7z8oalCEe-A8_AyXtpQdA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_h8ocDqlCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_h8ocDalCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_h8eD96lCEe-A8_AyXtpQdA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_h7tPBqlCEe-A8_AyXtpQdA" describedService__SEFF="_h1uiwKlCEe-A8_AyXtpQdA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_h2Nq8alCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7qLoKlCEe-A8_AyXtpQdA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_h7qLoKlCEe-A8_AyXtpQdA" entityName="If Branch" predecessor_AbstractAction="_h2Nq8alCEe-A8_AyXtpQdA" successor_AbstractAction="_h7qysKlCEe-A8_AyXtpQdA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7o9gKlCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_h7pkkKlCEe-A8_AyXtpQdA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_h2PgIKlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7oWcKlCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_h7oWcKlCEe-A8_AyXtpQdA" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_h2PgIKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7oWcalCEe-A8_AyXtpQdA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_h7oWcalCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7oWcKlCEe-A8_AyXtpQdA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_h7qysKlCEe-A8_AyXtpQdA" entityName="stopWatch.start()" predecessor_AbstractAction="_h7qLoKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7tPA6lCEe-A8_AyXtpQdA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_h7tPA6lCEe-A8_AyXtpQdA" entityName="If Branch" predecessor_AbstractAction="_h7qysKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7tPBKlCEe-A8_AyXtpQdA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7tPAKlCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_h7tPAqlCEe-A8_AyXtpQdA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_h7qysalCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7tO_qlCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_h7tO_qlCEe-A8_AyXtpQdA" entityName="Switch Branch" predecessor_AbstractAction="_h7qysalCEe-A8_AyXtpQdA" successor_AbstractAction="_h7tO_6lCEe-A8_AyXtpQdA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7sn46lCEe-A8_AyXtpQdA">
                <branchBehaviour_BranchTransition id="_h7sn5alCEe-A8_AyXtpQdA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_h7rZwKlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7rZwalCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7rZwalCEe-A8_AyXtpQdA" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_h7rZwKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7sA0alCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_h7sA0alCEe-A8_AyXtpQdA" entityName="If Branch" predecessor_AbstractAction="_h7rZwalCEe-A8_AyXtpQdA" successor_AbstractAction="_h7sA0qlCEe-A8_AyXtpQdA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7rZyqlCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_h7sA0KlCEe-A8_AyXtpQdA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_h7rZwqlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7rZyKlCEe-A8_AyXtpQdA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_h7rZyKlCEe-A8_AyXtpQdA" entityName="If Branch" predecessor_AbstractAction="_h7rZwqlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7rZyalCEe-A8_AyXtpQdA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7rZxalCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_h7rZx6lCEe-A8_AyXtpQdA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_h7rZw6lCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7rZxKlCEe-A8_AyXtpQdA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_h7rZxKlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7rZw6lCEe-A8_AyXtpQdA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_h7rZyalCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7rZyKlCEe-A8_AyXtpQdA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7sA0qlCEe-A8_AyXtpQdA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_h7sA0alCEe-A8_AyXtpQdA" successor_AbstractAction="_h7sA06lCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7sA06lCEe-A8_AyXtpQdA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_h7sA0qlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7sA1KlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7sA1KlCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h7sA06lCEe-A8_AyXtpQdA" successor_AbstractAction="_h7sA1alCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7sA1alCEe-A8_AyXtpQdA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_h7sA1KlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7sA1qlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7sA1qlCEe-A8_AyXtpQdA" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_h7sA1alCEe-A8_AyXtpQdA" successor_AbstractAction="_h7sA16lCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_h7sA16lCEe-A8_AyXtpQdA" entityName="deferredResult" predecessor_AbstractAction="_h7sA1qlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7sA2KlCEe-A8_AyXtpQdA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7sA2KlCEe-A8_AyXtpQdA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_h7sA16lCEe-A8_AyXtpQdA" successor_AbstractAction="_h7sA2alCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7sA2alCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h7sA2KlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7sA2qlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7sA2qlCEe-A8_AyXtpQdA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_h7sA2alCEe-A8_AyXtpQdA" successor_AbstractAction="_h7sA26lCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7sA26lCEe-A8_AyXtpQdA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_h7sA2qlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7sn4KlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_h7sn4KlCEe-A8_AyXtpQdA" entityName="deferredResult" predecessor_AbstractAction="_h7sA26lCEe-A8_AyXtpQdA" successor_AbstractAction="_h7sn4alCEe-A8_AyXtpQdA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7sn4alCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h7sn4KlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7sn4qlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_h7sn4qlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7sn4alCEe-A8_AyXtpQdA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7tO9alCEe-A8_AyXtpQdA">
                <branchBehaviour_BranchTransition id="_h7tO96lCEe-A8_AyXtpQdA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_h7sn5qlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7sn56lCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7sn56lCEe-A8_AyXtpQdA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_h7sn5qlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7sn6KlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7sn6KlCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h7sn56lCEe-A8_AyXtpQdA" successor_AbstractAction="_h7tO8KlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7tO8KlCEe-A8_AyXtpQdA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_h7sn6KlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7tO8alCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7tO8alCEe-A8_AyXtpQdA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_h7tO8KlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7tO8qlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_h7tO8qlCEe-A8_AyXtpQdA" entityName="deferredResult" predecessor_AbstractAction="_h7tO8alCEe-A8_AyXtpQdA" successor_AbstractAction="_h7tO86lCEe-A8_AyXtpQdA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7tO86lCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h7tO8qlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7tO9KlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_h7tO9KlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7tO86lCEe-A8_AyXtpQdA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7tO-6lCEe-A8_AyXtpQdA">
                <branchBehaviour_BranchTransition id="_h7tO_alCEe-A8_AyXtpQdA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_h7tO-KlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7tO-alCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7tO-alCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h7tO-KlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7tO-qlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_h7tO-qlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7tO-alCEe-A8_AyXtpQdA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_h7tO_6lCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7tO_qlCEe-A8_AyXtpQdA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_h7tPBKlCEe-A8_AyXtpQdA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_h7tPA6lCEe-A8_AyXtpQdA" successor_AbstractAction="_h7tPBalCEe-A8_AyXtpQdA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_h7tPBalCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7tPBKlCEe-A8_AyXtpQdA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_h8q4Q6lCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_h8q4RalCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_h8q4RKlCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_h8erAalCEe-A8_AyXtpQdA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_h7wSQ6lCEe-A8_AyXtpQdA" describedService__SEFF="_h1t7salCEe-A8_AyXtpQdA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_h7t2AalCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7t2CKlCEe-A8_AyXtpQdA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_h7t2CKlCEe-A8_AyXtpQdA" entityName="If Branch" predecessor_AbstractAction="_h7t2AalCEe-A8_AyXtpQdA" successor_AbstractAction="_h7t2CalCEe-A8_AyXtpQdA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7t2BalCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_h7t2B6lCEe-A8_AyXtpQdA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_h7t2AqlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7t2A6lCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_h7t2A6lCEe-A8_AyXtpQdA" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_h7t2AqlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7t2BKlCEe-A8_AyXtpQdA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController_generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController_generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_h7t2BKlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7t2A6lCEe-A8_AyXtpQdA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_h7t2CalCEe-A8_AyXtpQdA" entityName="stopWatch.start()" predecessor_AbstractAction="_h7t2CKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7wSQalCEe-A8_AyXtpQdA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_h7wSQalCEe-A8_AyXtpQdA" entityName="Switch Branch" predecessor_AbstractAction="_h7t2CalCEe-A8_AyXtpQdA" successor_AbstractAction="_h7wSQqlCEe-A8_AyXtpQdA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7vEJKlCEe-A8_AyXtpQdA">
          <branchBehaviour_BranchTransition id="_h7vEJqlCEe-A8_AyXtpQdA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_h7t2CqlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7t2C6lCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_h7t2C6lCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h7t2CqlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7t2DKlCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_h7t2DKlCEe-A8_AyXtpQdA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_h7t2C6lCEe-A8_AyXtpQdA" successor_AbstractAction="_h7t2DalCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_h7t2DalCEe-A8_AyXtpQdA" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_h7t2DKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7udEKlCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_h7udEKlCEe-A8_AyXtpQdA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_h7t2DalCEe-A8_AyXtpQdA" successor_AbstractAction="_h7udEalCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_h7udEalCEe-A8_AyXtpQdA" entityName="deferredResult" predecessor_AbstractAction="_h7udEKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7vEIKlCEe-A8_AyXtpQdA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_h7vEIKlCEe-A8_AyXtpQdA" entityName="If Branch" predecessor_AbstractAction="_h7udEalCEe-A8_AyXtpQdA" successor_AbstractAction="_h7vEIalCEe-A8_AyXtpQdA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7udG6lCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_h7udHalCEe-A8_AyXtpQdA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_h7udEqlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7udE6lCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7udE6lCEe-A8_AyXtpQdA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_h7udEqlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7udFKlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7udFKlCEe-A8_AyXtpQdA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_h7udE6lCEe-A8_AyXtpQdA" successor_AbstractAction="_h7udFalCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7udFalCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h7udFKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7udFqlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7udFqlCEe-A8_AyXtpQdA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_h7udFalCEe-A8_AyXtpQdA" successor_AbstractAction="_h7udF6lCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7udF6lCEe-A8_AyXtpQdA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_h7udFqlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7udGKlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7udGKlCEe-A8_AyXtpQdA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_h7udF6lCEe-A8_AyXtpQdA" successor_AbstractAction="_h7udGalCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_h7udGalCEe-A8_AyXtpQdA" entityName="deferredResult" predecessor_AbstractAction="_h7udGKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7udGqlCEe-A8_AyXtpQdA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_h7udGqlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7udGalCEe-A8_AyXtpQdA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_h7vEIalCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h7vEIKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7vEIqlCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_h7vEIqlCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h7vEIalCEe-A8_AyXtpQdA" successor_AbstractAction="_h7vEI6lCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_h7vEI6lCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7vEIqlCEe-A8_AyXtpQdA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7vrOKlCEe-A8_AyXtpQdA">
          <branchBehaviour_BranchTransition id="_h7vrOqlCEe-A8_AyXtpQdA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_h7vEJ6lCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7vrNKlCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_h7vrNKlCEe-A8_AyXtpQdA" entityName="If Branch" predecessor_AbstractAction="_h7vEJ6lCEe-A8_AyXtpQdA" successor_AbstractAction="_h7vrNalCEe-A8_AyXtpQdA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7vrMalCEe-A8_AyXtpQdA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_h7vrM6lCEe-A8_AyXtpQdA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_h7vEKKlCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7vEKalCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7vEKalCEe-A8_AyXtpQdA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_h7vEKKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7vEKqlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7vEKqlCEe-A8_AyXtpQdA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_h7vEKalCEe-A8_AyXtpQdA" successor_AbstractAction="_h7vEK6lCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7vEK6lCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h7vEKqlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7vELKlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7vELKlCEe-A8_AyXtpQdA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_h7vEK6lCEe-A8_AyXtpQdA" successor_AbstractAction="_h7vELalCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7vELalCEe-A8_AyXtpQdA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_h7vELKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7vELqlCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_h7vELqlCEe-A8_AyXtpQdA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_h7vELalCEe-A8_AyXtpQdA" successor_AbstractAction="_h7vEL6lCEe-A8_AyXtpQdA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_h7vEL6lCEe-A8_AyXtpQdA" entityName="deferredResult" predecessor_AbstractAction="_h7vELqlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7vrMKlCEe-A8_AyXtpQdA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_h7vrMKlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7vEL6lCEe-A8_AyXtpQdA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_h7vrNalCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h7vrNKlCEe-A8_AyXtpQdA" successor_AbstractAction="_h7vrNqlCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_h7vrNqlCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h7vrNalCEe-A8_AyXtpQdA" successor_AbstractAction="_h7vrN6lCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_h7vrN6lCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7vrNqlCEe-A8_AyXtpQdA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_h7vrPqlCEe-A8_AyXtpQdA">
          <branchBehaviour_BranchTransition id="_h7wSQKlCEe-A8_AyXtpQdA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_h7vrO6lCEe-A8_AyXtpQdA" entityName="Start Action" successor_AbstractAction="_h7vrPKlCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_h7vrPKlCEe-A8_AyXtpQdA" entityName="stopWatch.stop()" predecessor_AbstractAction="_h7vrO6lCEe-A8_AyXtpQdA" successor_AbstractAction="_h7vrPalCEe-A8_AyXtpQdA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_h7vrPalCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7vrPKlCEe-A8_AyXtpQdA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_h7wSQqlCEe-A8_AyXtpQdA" entityName="Stop Action" predecessor_AbstractAction="_h7wSQalCEe-A8_AyXtpQdA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_h8uioalCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_h8vwxqlCEe-A8_AyXtpQdA" encapsulatedComponent__AssemblyContext="_h8erA6lCEe-A8_AyXtpQdA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_h8w-4alCEe-A8_AyXtpQdA" innerProvidedRole_ProvidedDelegationConnector="_h8erAqlCEe-A8_AyXtpQdA" outerProvidedRole_ProvidedDelegationConnector="_h8uioKlCEe-A8_AyXtpQdA" assemblyContext_ProvidedDelegationConnector="_h8vwxqlCEe-A8_AyXtpQdA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_h8uioKlCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_h8eD-KlCEe-A8_AyXtpQdA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_h8uipKlCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_h8vJtKlCEe-A8_AyXtpQdA" encapsulatedComponent__AssemblyContext="_h8huWKlCEe-A8_AyXtpQdA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_h8w-46lCEe-A8_AyXtpQdA" innerProvidedRole_ProvidedDelegationConnector="_h8huVqlCEe-A8_AyXtpQdA" outerProvidedRole_ProvidedDelegationConnector="_h8uio6lCEe-A8_AyXtpQdA" assemblyContext_ProvidedDelegationConnector="_h8vJtKlCEe-A8_AyXtpQdA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_h8w-5KlCEe-A8_AyXtpQdA" innerProvidedRole_ProvidedDelegationConnector="_h8huV6lCEe-A8_AyXtpQdA" outerProvidedRole_ProvidedDelegationConnector="_h8uioqlCEe-A8_AyXtpQdA" assemblyContext_ProvidedDelegationConnector="_h8vJtKlCEe-A8_AyXtpQdA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_h8uioqlCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_h8erAKlCEe-A8_AyXtpQdA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_h8uio6lCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_h8eD-qlCEe-A8_AyXtpQdA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_h8uipqlCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_h8vwwqlCEe-A8_AyXtpQdA" encapsulatedComponent__AssemblyContext="_h8ocDqlCEe-A8_AyXtpQdA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_h8w-4qlCEe-A8_AyXtpQdA" innerProvidedRole_ProvidedDelegationConnector="_h8ocDalCEe-A8_AyXtpQdA" outerProvidedRole_ProvidedDelegationConnector="_h8uipalCEe-A8_AyXtpQdA" assemblyContext_ProvidedDelegationConnector="_h8vwwqlCEe-A8_AyXtpQdA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_h8uipalCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_h8eD96lCEe-A8_AyXtpQdA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_h8uiqKlCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_h8vwxKlCEe-A8_AyXtpQdA" encapsulatedComponent__AssemblyContext="_h8q4RalCEe-A8_AyXtpQdA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_h8w-4KlCEe-A8_AyXtpQdA" innerProvidedRole_ProvidedDelegationConnector="_h8q4RKlCEe-A8_AyXtpQdA" outerProvidedRole_ProvidedDelegationConnector="_h8uip6lCEe-A8_AyXtpQdA" assemblyContext_ProvidedDelegationConnector="_h8vwxKlCEe-A8_AyXtpQdA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_h8uip6lCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_h8erAalCEe-A8_AyXtpQdA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_h8uiqalCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_h8vJsqlCEe-A8_AyXtpQdA" encapsulatedComponent__AssemblyContext="_h8q4Q6lCEe-A8_AyXtpQdA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_h8vJsalCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_h8vwwKlCEe-A8_AyXtpQdA" encapsulatedComponent__AssemblyContext="_h8mm1alCEe-A8_AyXtpQdA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_h8wX0KlCEe-A8_AyXtpQdA" innerProvidedRole_ProvidedDelegationConnector="_h8mm1KlCEe-A8_AyXtpQdA" outerProvidedRole_ProvidedDelegationConnector="_h8vJsKlCEe-A8_AyXtpQdA" assemblyContext_ProvidedDelegationConnector="_h8vwwKlCEe-A8_AyXtpQdA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_h8vJsKlCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_h8eD-alCEe-A8_AyXtpQdA"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_h8eD96lCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_h1uiwKlCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_h1t7sKlCEe-A8_AyXtpQdA">
      <parameters__OperationSignature dataType__Parameter="_h1tUoKlCEe-A8_AyXtpQdA" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_h8eD-KlCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_h1t7tKlCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_h1t7sKlCEe-A8_AyXtpQdA">
      <parameters__OperationSignature dataType__Parameter="_h1tUoKlCEe-A8_AyXtpQdA" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_h8eD-alCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_h1tUoalCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_h03AEalCEe-A8_AyXtpQdA">
      <parameters__OperationSignature dataType__Parameter="_h1tUoKlCEe-A8_AyXtpQdA" parameterName="registrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_h8eD-qlCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_h03nIKlCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_h03AEalCEe-A8_AyXtpQdA">
      <parameters__OperationSignature dataType__Parameter="_h01x8KlCEe-A8_AyXtpQdA" parameterName="authorization" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_h03AEKlCEe-A8_AyXtpQdA" parameterName="teleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_h8erAKlCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_h1stkalCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_h03AEalCEe-A8_AyXtpQdA">
      <parameters__OperationSignature dataType__Parameter="_h1stkKlCEe-A8_AyXtpQdA" parameterName="tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_h8erAalCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_h1t7salCEe-A8_AyXtpQdA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_h1t7sKlCEe-A8_AyXtpQdA">
      <parameters__OperationSignature dataType__Parameter="_h1tUpKlCEe-A8_AyXtpQdA" parameterName="request" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_h01x8KlCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_h03AEKlCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_h03AEalCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_h1stkKlCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_h1tUoKlCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_h1tUpKlCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_h1t7sKlCEe-A8_AyXtpQdA" entityName="app_coronawarn_verification_controller_DeferredResult"/>
</repository:Repository>
