<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_vq1ALPrUEe6iL5atnoopJQ">
  <components__Repository xsi:type="repository:BasicComponent" id="_vqj6ZPrUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vqj6Y_rUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_vqj6YfrUEe6iL5atnoopJQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_vp1hpvrUEe6iL5atnoopJQ" describedService__SEFF="_vjm90PrUEe6iL5atnoopJQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_vpzsgPrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vpzsh_rUEe6iL5atnoopJQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_vpzsh_rUEe6iL5atnoopJQ" entityName="If Branch" predecessor_AbstractAction="_vpzsgPrUEe6iL5atnoopJQ" successor_AbstractAction="_vpzsiPrUEe6iL5atnoopJQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vpzshPrUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_vpzshvrUEe6iL5atnoopJQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vpzsgfrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vpzsgvrUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vpzsgvrUEe6iL5atnoopJQ" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_vpzsgfrUEe6iL5atnoopJQ" successor_AbstractAction="_vpzsg_rUEe6iL5atnoopJQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vpzsg_rUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vpzsgvrUEe6iL5atnoopJQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_vpzsiPrUEe6iL5atnoopJQ" entityName="stopWatch.start()" predecessor_AbstractAction="_vpzsh_rUEe6iL5atnoopJQ" successor_AbstractAction="_vp1hpPrUEe6iL5atnoopJQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_vp1hpPrUEe6iL5atnoopJQ" entityName="If Branch" predecessor_AbstractAction="_vpzsiPrUEe6iL5atnoopJQ" successor_AbstractAction="_vp1hpfrUEe6iL5atnoopJQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vp1hofrUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_vp1ho_rUEe6iL5atnoopJQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vpzsifrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp06pPrUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_vp06pPrUEe6iL5atnoopJQ" entityName="If Branch" predecessor_AbstractAction="_vpzsifrUEe6iL5atnoopJQ" successor_AbstractAction="_vp1hoPrUEe6iL5atnoopJQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vp06ofrUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_vp06o_rUEe6iL5atnoopJQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vpzsivrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp06l_rUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_vp06l_rUEe6iL5atnoopJQ" entityName="Switch Branch" predecessor_AbstractAction="_vpzsivrUEe6iL5atnoopJQ" successor_AbstractAction="_vp06mPrUEe6iL5atnoopJQ">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vp0TivrUEe6iL5atnoopJQ">
                      <branchBehaviour_BranchTransition id="_vp0TjPrUEe6iL5atnoopJQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_vp0TgPrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp0Th_rUEe6iL5atnoopJQ"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_vp0Th_rUEe6iL5atnoopJQ" entityName="If Branch" predecessor_AbstractAction="_vp0TgPrUEe6iL5atnoopJQ" successor_AbstractAction="_vp0TiPrUEe6iL5atnoopJQ">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vp0ThPrUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_vp0ThvrUEe6iL5atnoopJQ">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_vp0TgfrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp0TgvrUEe6iL5atnoopJQ"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_vp0TgvrUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vp0TgfrUEe6iL5atnoopJQ" successor_AbstractAction="_vp0Tg_rUEe6iL5atnoopJQ"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_vp0Tg_rUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp0TgvrUEe6iL5atnoopJQ"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_vp0TiPrUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vp0Th_rUEe6iL5atnoopJQ" successor_AbstractAction="_vp0TifrUEe6iL5atnoopJQ"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_vp0TifrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp0TiPrUEe6iL5atnoopJQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vp0TkPrUEe6iL5atnoopJQ">
                      <branchBehaviour_BranchTransition id="_vp06kPrUEe6iL5atnoopJQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_vp0TjfrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp0TjvrUEe6iL5atnoopJQ"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_vp0TjvrUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vp0TjfrUEe6iL5atnoopJQ" successor_AbstractAction="_vp0Tj_rUEe6iL5atnoopJQ"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_vp0Tj_rUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp0TjvrUEe6iL5atnoopJQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vp06lPrUEe6iL5atnoopJQ">
                      <branchBehaviour_BranchTransition id="_vp06lvrUEe6iL5atnoopJQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_vp06kfrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp06kvrUEe6iL5atnoopJQ"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_vp06kvrUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vp06kfrUEe6iL5atnoopJQ" successor_AbstractAction="_vp06k_rUEe6iL5atnoopJQ"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_vp06k_rUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp06kvrUEe6iL5atnoopJQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp06mPrUEe6iL5atnoopJQ" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_vp06l_rUEe6iL5atnoopJQ" successor_AbstractAction="_vp06mfrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp06mfrUEe6iL5atnoopJQ" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_vp06mPrUEe6iL5atnoopJQ" successor_AbstractAction="_vp06mvrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp06mvrUEe6iL5atnoopJQ" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_vp06mfrUEe6iL5atnoopJQ" successor_AbstractAction="_vp06m_rUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp06m_rUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vp06mvrUEe6iL5atnoopJQ" successor_AbstractAction="_vp06nPrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp06nPrUEe6iL5atnoopJQ" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_vp06m_rUEe6iL5atnoopJQ" successor_AbstractAction="_vp06nfrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp06nfrUEe6iL5atnoopJQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_vp06nPrUEe6iL5atnoopJQ" successor_AbstractAction="_vp06nvrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp06nvrUEe6iL5atnoopJQ" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_vp06nfrUEe6iL5atnoopJQ" successor_AbstractAction="_vp06n_rUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vp06n_rUEe6iL5atnoopJQ" entityName="deferredResult" predecessor_AbstractAction="_vp06nvrUEe6iL5atnoopJQ" successor_AbstractAction="_vp06oPrUEe6iL5atnoopJQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vp06oPrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp06n_rUEe6iL5atnoopJQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vp1hoPrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp06pPrUEe6iL5atnoopJQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_vp1hpfrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp1hpPrUEe6iL5atnoopJQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_vqm9svrUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_vqm9tfrUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vqm9s_rUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_vqj6YPrUEe6iL5atnoopJQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vqm9tPrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_vqjTWPrUEe6iL5atnoopJQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_vp2vw_rUEe6iL5atnoopJQ" describedService__SEFF="_vjnk4PrUEe6iL5atnoopJQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_vp1hrfrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp2Iu_rUEe6iL5atnoopJQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_vp2Iu_rUEe6iL5atnoopJQ" entityName="If Branch" predecessor_AbstractAction="_vp1hrfrUEe6iL5atnoopJQ" successor_AbstractAction="_vp2vwfrUEe6iL5atnoopJQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vp2IsvrUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_vp2ItPrUEe6iL5atnoopJQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vp1hrvrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp2IsPrUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vp2IsPrUEe6iL5atnoopJQ" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_vp1hrvrUEe6iL5atnoopJQ" successor_AbstractAction="_vp2IsfrUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vp2IsfrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp2IsPrUEe6iL5atnoopJQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vp2IuPrUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_vp2IuvrUEe6iL5atnoopJQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vp2ItfrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp2ItvrUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vp2ItvrUEe6iL5atnoopJQ" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_vp2ItfrUEe6iL5atnoopJQ" successor_AbstractAction="_vp2It_rUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vp2It_rUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp2ItvrUEe6iL5atnoopJQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_vp2vwfrUEe6iL5atnoopJQ" entityName="If Branch" predecessor_AbstractAction="_vp2Iu_rUEe6iL5atnoopJQ" successor_AbstractAction="_vp2vwvrUEe6iL5atnoopJQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vp2Iy_rUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_vp2vwPrUEe6iL5atnoopJQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vp2IvPrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp2IyfrUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_vp2IyfrUEe6iL5atnoopJQ" entityName="If Branch" predecessor_AbstractAction="_vp2IvPrUEe6iL5atnoopJQ" successor_AbstractAction="_vp2IyvrUEe6iL5atnoopJQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vp2IwfrUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_vp2Iw_rUEe6iL5atnoopJQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vp2IvfrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp2IvvrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp2IvvrUEe6iL5atnoopJQ" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_vp2IvfrUEe6iL5atnoopJQ" successor_AbstractAction="_vp2Iv_rUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vp2Iv_rUEe6iL5atnoopJQ" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_vp2IvvrUEe6iL5atnoopJQ" successor_AbstractAction="_vp2IwPrUEe6iL5atnoopJQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vp2IwPrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp2Iv_rUEe6iL5atnoopJQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vp2IxvrUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_vp2IyPrUEe6iL5atnoopJQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vp2IxPrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp2IxfrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vp2IxfrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp2IxPrUEe6iL5atnoopJQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vp2IyvrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp2IyfrUEe6iL5atnoopJQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_vp2vwvrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp2vwfrUEe6iL5atnoopJQ"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_vp1hq_rUEe6iL5atnoopJQ" describedService__SEFF="_vixQUPrUEe6iL5atnoopJQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_vp1hqPrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp1hqfrUEe6iL5atnoopJQ"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vp1hqfrUEe6iL5atnoopJQ" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_vp1hqPrUEe6iL5atnoopJQ" successor_AbstractAction="_vp1hqvrUEe6iL5atnoopJQ">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_vp1hqvrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp1hqfrUEe6iL5atnoopJQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_vqr2N_rUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vqr2NvrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_vqjTWfrUEe6iL5atnoopJQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_vpx3RfrUEe6iL5atnoopJQ" describedService__SEFF="_vjlvsfrUEe6iL5atnoopJQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_vkCbofrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vpx3QvrUEe6iL5atnoopJQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_vpx3QvrUEe6iL5atnoopJQ" entityName="If Branch" predecessor_AbstractAction="_vkCbofrUEe6iL5atnoopJQ" successor_AbstractAction="_vpx3Q_rUEe6iL5atnoopJQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vpxQQ_rUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_vpx3QfrUEe6iL5atnoopJQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vkEQ0PrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vpxQQfrUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_vpxQQfrUEe6iL5atnoopJQ" entityName="Switch Branch" predecessor_AbstractAction="_vkEQ0PrUEe6iL5atnoopJQ" successor_AbstractAction="_vpxQQvrUEe6iL5atnoopJQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vpxQM_rUEe6iL5atnoopJQ">
                <branchBehaviour_BranchTransition id="_vpxQNfrUEe6iL5atnoopJQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vkE34PrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vptl1frUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_vptl1frUEe6iL5atnoopJQ" entityName="If Branch" predecessor_AbstractAction="_vkE34PrUEe6iL5atnoopJQ" successor_AbstractAction="_vpuM4PrUEe6iL5atnoopJQ">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vptl0vrUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_vptl1PrUEe6iL5atnoopJQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_vkE34frUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vptl0PrUEe6iL5atnoopJQ"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_vptl0PrUEe6iL5atnoopJQ" entityName="If Branch" predecessor_AbstractAction="_vkE34frUEe6iL5atnoopJQ" successor_AbstractAction="_vptl0frUEe6iL5atnoopJQ">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vkFe8PrUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_vkGGAPrUEe6iL5atnoopJQ">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_vkE34vrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vkE34_rUEe6iL5atnoopJQ"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_vkE34_rUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vkE34vrUEe6iL5atnoopJQ"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_vptl0frUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vptl0PrUEe6iL5atnoopJQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpuM4PrUEe6iL5atnoopJQ" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_vptl1frUEe6iL5atnoopJQ" successor_AbstractAction="_vpuz8PrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpuz8PrUEe6iL5atnoopJQ" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_vpuM4PrUEe6iL5atnoopJQ" successor_AbstractAction="_vpxQMPrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vpxQMPrUEe6iL5atnoopJQ" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_vpuz8PrUEe6iL5atnoopJQ" successor_AbstractAction="_vpxQMfrUEe6iL5atnoopJQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpxQMfrUEe6iL5atnoopJQ" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_vpxQMPrUEe6iL5atnoopJQ" successor_AbstractAction="_vpxQMvrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vpxQMvrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vpxQMfrUEe6iL5atnoopJQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vpxQOfrUEe6iL5atnoopJQ">
                <branchBehaviour_BranchTransition id="_vpxQO_rUEe6iL5atnoopJQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vpxQNvrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vpxQN_rUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpxQN_rUEe6iL5atnoopJQ" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_vpxQNvrUEe6iL5atnoopJQ" successor_AbstractAction="_vpxQOPrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vpxQOPrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vpxQN_rUEe6iL5atnoopJQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vpxQPvrUEe6iL5atnoopJQ">
                <branchBehaviour_BranchTransition id="_vpxQQPrUEe6iL5atnoopJQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vpxQPPrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vpxQPfrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vpxQPfrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vpxQPPrUEe6iL5atnoopJQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vpxQQvrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vpxQQfrUEe6iL5atnoopJQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_vpx3Q_rUEe6iL5atnoopJQ" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_vpx3QvrUEe6iL5atnoopJQ" successor_AbstractAction="_vpx3RPrUEe6iL5atnoopJQ"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_vpx3RPrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vpx3Q_rUEe6iL5atnoopJQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_vquScfrUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vquScPrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_vqjTWvrUEe6iL5atnoopJQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_vp4lAPrUEe6iL5atnoopJQ" describedService__SEFF="_vjmWwvrUEe6iL5atnoopJQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_vp2vxfrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp2vzPrUEe6iL5atnoopJQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_vp2vzPrUEe6iL5atnoopJQ" entityName="If Branch" predecessor_AbstractAction="_vp2vxfrUEe6iL5atnoopJQ" successor_AbstractAction="_vp3W0PrUEe6iL5atnoopJQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vp2vyfrUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_vp2vy_rUEe6iL5atnoopJQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vp2vxvrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp2vx_rUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vp2vx_rUEe6iL5atnoopJQ" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_vp2vxvrUEe6iL5atnoopJQ" successor_AbstractAction="_vp2vyPrUEe6iL5atnoopJQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController.generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController.generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vp2vyPrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp2vx_rUEe6iL5atnoopJQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_vp3W0PrUEe6iL5atnoopJQ" entityName="stopWatch.start()" predecessor_AbstractAction="_vp2vzPrUEe6iL5atnoopJQ" successor_AbstractAction="_vp4k_vrUEe6iL5atnoopJQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_vp4k_vrUEe6iL5atnoopJQ" entityName="Switch Branch" predecessor_AbstractAction="_vp3W0PrUEe6iL5atnoopJQ" successor_AbstractAction="_vp4k__rUEe6iL5atnoopJQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vp395PrUEe6iL5atnoopJQ">
          <branchBehaviour_BranchTransition id="_vp395vrUEe6iL5atnoopJQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vp3W0frUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp3W0vrUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vp3W0vrUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vp3W0frUEe6iL5atnoopJQ" successor_AbstractAction="_vp3W0_rUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vp3W0_rUEe6iL5atnoopJQ" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_vp3W0vrUEe6iL5atnoopJQ" successor_AbstractAction="_vp3W1PrUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vp3W1PrUEe6iL5atnoopJQ" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_vp3W0_rUEe6iL5atnoopJQ" successor_AbstractAction="_vp3W1frUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vp3W1frUEe6iL5atnoopJQ" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_vp3W1PrUEe6iL5atnoopJQ" successor_AbstractAction="_vp3W1vrUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vp3W1vrUEe6iL5atnoopJQ" entityName="deferredResult" predecessor_AbstractAction="_vp3W1frUEe6iL5atnoopJQ" successor_AbstractAction="_vp394PrUEe6iL5atnoopJQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_vp394PrUEe6iL5atnoopJQ" entityName="If Branch" predecessor_AbstractAction="_vp3W1vrUEe6iL5atnoopJQ" successor_AbstractAction="_vp394frUEe6iL5atnoopJQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vp3W4PrUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_vp3W4vrUEe6iL5atnoopJQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vp3W1_rUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp3W2PrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp3W2PrUEe6iL5atnoopJQ" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_vp3W1_rUEe6iL5atnoopJQ" successor_AbstractAction="_vp3W2frUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp3W2frUEe6iL5atnoopJQ" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_vp3W2PrUEe6iL5atnoopJQ" successor_AbstractAction="_vp3W2vrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp3W2vrUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vp3W2frUEe6iL5atnoopJQ" successor_AbstractAction="_vp3W2_rUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp3W2_rUEe6iL5atnoopJQ" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_vp3W2vrUEe6iL5atnoopJQ" successor_AbstractAction="_vp3W3PrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp3W3PrUEe6iL5atnoopJQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_vp3W2_rUEe6iL5atnoopJQ" successor_AbstractAction="_vp3W3frUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp3W3frUEe6iL5atnoopJQ" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_vp3W3PrUEe6iL5atnoopJQ" successor_AbstractAction="_vp3W3vrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vp3W3vrUEe6iL5atnoopJQ" entityName="deferredResult" predecessor_AbstractAction="_vp3W3frUEe6iL5atnoopJQ" successor_AbstractAction="_vp3W3_rUEe6iL5atnoopJQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vp3W3_rUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp3W3vrUEe6iL5atnoopJQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vp394frUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vp394PrUEe6iL5atnoopJQ" successor_AbstractAction="_vp394vrUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vp394vrUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vp394frUEe6iL5atnoopJQ" successor_AbstractAction="_vp394_rUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vp394_rUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp394vrUEe6iL5atnoopJQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vp4k9frUEe6iL5atnoopJQ">
          <branchBehaviour_BranchTransition id="_vp4k9_rUEe6iL5atnoopJQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vp395_rUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp4k8frUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_vp4k8frUEe6iL5atnoopJQ" entityName="If Branch" predecessor_AbstractAction="_vp395_rUEe6iL5atnoopJQ" successor_AbstractAction="_vp4k8vrUEe6iL5atnoopJQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vp398frUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_vp4k8PrUEe6iL5atnoopJQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vp396PrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp396frUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp396frUEe6iL5atnoopJQ" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_vp396PrUEe6iL5atnoopJQ" successor_AbstractAction="_vp396vrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp396vrUEe6iL5atnoopJQ" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_vp396frUEe6iL5atnoopJQ" successor_AbstractAction="_vp396_rUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp396_rUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vp396vrUEe6iL5atnoopJQ" successor_AbstractAction="_vp397PrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp397PrUEe6iL5atnoopJQ" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_vp396_rUEe6iL5atnoopJQ" successor_AbstractAction="_vp397frUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp397frUEe6iL5atnoopJQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_vp397PrUEe6iL5atnoopJQ" successor_AbstractAction="_vp397vrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vp397vrUEe6iL5atnoopJQ" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_vp397frUEe6iL5atnoopJQ" successor_AbstractAction="_vp397_rUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vp397_rUEe6iL5atnoopJQ" entityName="deferredResult" predecessor_AbstractAction="_vp397vrUEe6iL5atnoopJQ" successor_AbstractAction="_vp398PrUEe6iL5atnoopJQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vp398PrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp397_rUEe6iL5atnoopJQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vp4k8vrUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vp4k8frUEe6iL5atnoopJQ" successor_AbstractAction="_vp4k8_rUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vp4k8_rUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vp4k8vrUEe6iL5atnoopJQ" successor_AbstractAction="_vp4k9PrUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vp4k9PrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp4k8_rUEe6iL5atnoopJQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vp4k-_rUEe6iL5atnoopJQ">
          <branchBehaviour_BranchTransition id="_vp4k_frUEe6iL5atnoopJQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vp4k-PrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vp4k-frUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_vp4k-frUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vp4k-PrUEe6iL5atnoopJQ" successor_AbstractAction="_vp4k-vrUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vp4k-vrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp4k-frUEe6iL5atnoopJQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_vp4k__rUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vp4k_vrUEe6iL5atnoopJQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_vqwHrvrUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vqwHrfrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_vqj6YvrUEe6iL5atnoopJQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_vpzsfvrUEe6iL5atnoopJQ" describedService__SEFF="_vjnk4_rUEe6iL5atnoopJQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_vpx3R_rUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vpx3TvrUEe6iL5atnoopJQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_vpx3TvrUEe6iL5atnoopJQ" entityName="If Branch" predecessor_AbstractAction="_vpx3R_rUEe6iL5atnoopJQ" successor_AbstractAction="_vpx3T_rUEe6iL5atnoopJQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vpx3S_rUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_vpx3TfrUEe6iL5atnoopJQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vpx3SPrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vpx3SfrUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vpx3SfrUEe6iL5atnoopJQ" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_vpx3SPrUEe6iL5atnoopJQ" successor_AbstractAction="_vpx3SvrUEe6iL5atnoopJQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vpx3SvrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vpx3SfrUEe6iL5atnoopJQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_vpx3T_rUEe6iL5atnoopJQ" entityName="stopWatch.start()" predecessor_AbstractAction="_vpx3TvrUEe6iL5atnoopJQ" successor_AbstractAction="_vpzse_rUEe6iL5atnoopJQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_vpzse_rUEe6iL5atnoopJQ" entityName="If Branch" predecessor_AbstractAction="_vpx3T_rUEe6iL5atnoopJQ" successor_AbstractAction="_vpzsfPrUEe6iL5atnoopJQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vpzsePrUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_vpzsevrUEe6iL5atnoopJQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_vpx3UPrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vpzsdvrUEe6iL5atnoopJQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_vpzsdvrUEe6iL5atnoopJQ" entityName="Switch Branch" predecessor_AbstractAction="_vpx3UPrUEe6iL5atnoopJQ" successor_AbstractAction="_vpzsd_rUEe6iL5atnoopJQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vpzFYvrUEe6iL5atnoopJQ">
                <branchBehaviour_BranchTransition id="_vpzFZPrUEe6iL5atnoopJQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vpx3UfrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vpx3UvrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpx3UvrUEe6iL5atnoopJQ" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_vpx3UfrUEe6iL5atnoopJQ" successor_AbstractAction="_vpyeWvrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_vpyeWvrUEe6iL5atnoopJQ" entityName="If Branch" predecessor_AbstractAction="_vpx3UvrUEe6iL5atnoopJQ" successor_AbstractAction="_vpyeW_rUEe6iL5atnoopJQ">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vpyeV_rUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_vpyeWfrUEe6iL5atnoopJQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_vpx3U_rUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vpyeVfrUEe6iL5atnoopJQ"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_vpyeVfrUEe6iL5atnoopJQ" entityName="If Branch" predecessor_AbstractAction="_vpx3U_rUEe6iL5atnoopJQ" successor_AbstractAction="_vpyeVvrUEe6iL5atnoopJQ">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vpyeUvrUEe6iL5atnoopJQ" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_vpyeVPrUEe6iL5atnoopJQ">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_vpyeUPrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vpyeUfrUEe6iL5atnoopJQ"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_vpyeUfrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vpyeUPrUEe6iL5atnoopJQ"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_vpyeVvrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vpyeVfrUEe6iL5atnoopJQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpyeW_rUEe6iL5atnoopJQ" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_vpyeWvrUEe6iL5atnoopJQ" successor_AbstractAction="_vpyeXPrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpyeXPrUEe6iL5atnoopJQ" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_vpyeW_rUEe6iL5atnoopJQ" successor_AbstractAction="_vpyeXfrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpyeXfrUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vpyeXPrUEe6iL5atnoopJQ" successor_AbstractAction="_vpyeXvrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpyeXvrUEe6iL5atnoopJQ" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_vpyeXfrUEe6iL5atnoopJQ" successor_AbstractAction="_vpyeX_rUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpyeX_rUEe6iL5atnoopJQ" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_vpyeXvrUEe6iL5atnoopJQ" successor_AbstractAction="_vpyeYPrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vpyeYPrUEe6iL5atnoopJQ" entityName="deferredResult" predecessor_AbstractAction="_vpyeX_rUEe6iL5atnoopJQ" successor_AbstractAction="_vpyeYfrUEe6iL5atnoopJQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpyeYfrUEe6iL5atnoopJQ" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_vpyeYPrUEe6iL5atnoopJQ" successor_AbstractAction="_vpyeYvrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpyeYvrUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vpyeYfrUEe6iL5atnoopJQ" successor_AbstractAction="_vpyeY_rUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpyeY_rUEe6iL5atnoopJQ" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_vpyeYvrUEe6iL5atnoopJQ" successor_AbstractAction="_vpyeZPrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpyeZPrUEe6iL5atnoopJQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_vpyeY_rUEe6iL5atnoopJQ" successor_AbstractAction="_vpyeZfrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vpyeZfrUEe6iL5atnoopJQ" entityName="deferredResult" predecessor_AbstractAction="_vpyeZPrUEe6iL5atnoopJQ" successor_AbstractAction="_vpzFYPrUEe6iL5atnoopJQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpzFYPrUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vpyeZfrUEe6iL5atnoopJQ" successor_AbstractAction="_vpzFYfrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vpzFYfrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vpzFYPrUEe6iL5atnoopJQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vpzFbfrUEe6iL5atnoopJQ">
                <branchBehaviour_BranchTransition id="_vpzFb_rUEe6iL5atnoopJQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vpzFZfrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vpzFZvrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpzFZvrUEe6iL5atnoopJQ" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_vpzFZfrUEe6iL5atnoopJQ" successor_AbstractAction="_vpzFZ_rUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpzFZ_rUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vpzFZvrUEe6iL5atnoopJQ" successor_AbstractAction="_vpzFaPrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpzFaPrUEe6iL5atnoopJQ" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_vpzFZ_rUEe6iL5atnoopJQ" successor_AbstractAction="_vpzFafrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpzFafrUEe6iL5atnoopJQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_vpzFaPrUEe6iL5atnoopJQ" successor_AbstractAction="_vpzFavrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_vpzFavrUEe6iL5atnoopJQ" entityName="deferredResult" predecessor_AbstractAction="_vpzFafrUEe6iL5atnoopJQ" successor_AbstractAction="_vpzFa_rUEe6iL5atnoopJQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpzFa_rUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vpzFavrUEe6iL5atnoopJQ" successor_AbstractAction="_vpzFbPrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vpzFbPrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vpzFa_rUEe6iL5atnoopJQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_vpzsc_rUEe6iL5atnoopJQ">
                <branchBehaviour_BranchTransition id="_vpzsdfrUEe6iL5atnoopJQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_vpzscPrUEe6iL5atnoopJQ" entityName="Start Action" successor_AbstractAction="_vpzscfrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_vpzscfrUEe6iL5atnoopJQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_vpzscPrUEe6iL5atnoopJQ" successor_AbstractAction="_vpzscvrUEe6iL5atnoopJQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_vpzscvrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vpzscfrUEe6iL5atnoopJQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_vpzsd_rUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vpzsdvrUEe6iL5atnoopJQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_vpzsfPrUEe6iL5atnoopJQ" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_vpzse_rUEe6iL5atnoopJQ" successor_AbstractAction="_vpzsffrUEe6iL5atnoopJQ"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_vpzsffrUEe6iL5atnoopJQ" entityName="Stop Action" predecessor_AbstractAction="_vpzsfPrUEe6iL5atnoopJQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_vq0ZEfrUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_vq1AIPrUEe6iL5atnoopJQ" encapsulatedComponent__AssemblyContext="_vquScfrUEe6iL5atnoopJQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_vq1nNfrUEe6iL5atnoopJQ" innerProvidedRole_ProvidedDelegationConnector="_vquScPrUEe6iL5atnoopJQ" outerProvidedRole_ProvidedDelegationConnector="_vq0ZEPrUEe6iL5atnoopJQ" assemblyContext_ProvidedDelegationConnector="_vq1AIPrUEe6iL5atnoopJQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vq0ZEPrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_vqjTWvrUEe6iL5atnoopJQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_vq0ZEvrUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_vq1AJvrUEe6iL5atnoopJQ" encapsulatedComponent__AssemblyContext="_vqm9svrUEe6iL5atnoopJQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_vq0ZFPrUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_vq1AIvrUEe6iL5atnoopJQ" encapsulatedComponent__AssemblyContext="_vqr2N_rUEe6iL5atnoopJQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_vq1nNPrUEe6iL5atnoopJQ" innerProvidedRole_ProvidedDelegationConnector="_vqr2NvrUEe6iL5atnoopJQ" outerProvidedRole_ProvidedDelegationConnector="_vq0ZE_rUEe6iL5atnoopJQ" assemblyContext_ProvidedDelegationConnector="_vq1AIvrUEe6iL5atnoopJQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vq0ZE_rUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_vqjTWfrUEe6iL5atnoopJQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_vq0ZFvrUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_vq1AKvrUEe6iL5atnoopJQ" encapsulatedComponent__AssemblyContext="_vqj6ZPrUEe6iL5atnoopJQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_vq1nMvrUEe6iL5atnoopJQ" innerProvidedRole_ProvidedDelegationConnector="_vqj6Y_rUEe6iL5atnoopJQ" outerProvidedRole_ProvidedDelegationConnector="_vq0ZFfrUEe6iL5atnoopJQ" assemblyContext_ProvidedDelegationConnector="_vq1AKvrUEe6iL5atnoopJQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vq0ZFfrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_vqj6YfrUEe6iL5atnoopJQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_vq0ZGPrUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_vq1AJPrUEe6iL5atnoopJQ" encapsulatedComponent__AssemblyContext="_vqwHrvrUEe6iL5atnoopJQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_vq1nMfrUEe6iL5atnoopJQ" innerProvidedRole_ProvidedDelegationConnector="_vqwHrfrUEe6iL5atnoopJQ" outerProvidedRole_ProvidedDelegationConnector="_vq0ZF_rUEe6iL5atnoopJQ" assemblyContext_ProvidedDelegationConnector="_vq1AJPrUEe6iL5atnoopJQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vq0ZF_rUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_vqj6YvrUEe6iL5atnoopJQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_vq0ZG_rUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_vq1AKPrUEe6iL5atnoopJQ" encapsulatedComponent__AssemblyContext="_vqm9tfrUEe6iL5atnoopJQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_vq1nMPrUEe6iL5atnoopJQ" innerProvidedRole_ProvidedDelegationConnector="_vqm9tPrUEe6iL5atnoopJQ" outerProvidedRole_ProvidedDelegationConnector="_vq0ZGvrUEe6iL5atnoopJQ" assemblyContext_ProvidedDelegationConnector="_vq1AKPrUEe6iL5atnoopJQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_vq1nM_rUEe6iL5atnoopJQ" innerProvidedRole_ProvidedDelegationConnector="_vqm9s_rUEe6iL5atnoopJQ" outerProvidedRole_ProvidedDelegationConnector="_vq0ZGfrUEe6iL5atnoopJQ" assemblyContext_ProvidedDelegationConnector="_vq1AKPrUEe6iL5atnoopJQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vq0ZGfrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_vqj6YPrUEe6iL5atnoopJQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_vq0ZGvrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_vqjTWPrUEe6iL5atnoopJQ"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_vqjTWPrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_vixQUPrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_viwpQPrUEe6iL5atnoopJQ">
      <parameters__OperationSignature dataType__Parameter="_vivbIPrUEe6iL5atnoopJQ" parameterName="Tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_vqjTWfrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_vjlvsfrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_viwpQPrUEe6iL5atnoopJQ">
      <parameters__OperationSignature dataType__Parameter="_vjlvsPrUEe6iL5atnoopJQ" parameterName="RegistrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_vqjTWvrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_vjmWwvrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_vjmWwfrUEe6iL5atnoopJQ">
      <parameters__OperationSignature dataType__Parameter="_vjmWwPrUEe6iL5atnoopJQ" parameterName="RegistrationTokenRequest" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_vqj6YPrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_vjnk4PrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_viwpQPrUEe6iL5atnoopJQ">
      <parameters__OperationSignature dataType__Parameter="_vjm90_rUEe6iL5atnoopJQ" parameterName="AuthorizationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_vjm91PrUEe6iL5atnoopJQ" parameterName="TeleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_vqj6YfrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_vjm90PrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_vjmWwfrUEe6iL5atnoopJQ">
      <parameters__OperationSignature dataType__Parameter="_vjlvsPrUEe6iL5atnoopJQ" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_vqj6YvrUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_vjnk4_rUEe6iL5atnoopJQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_vjmWwfrUEe6iL5atnoopJQ">
      <parameters__OperationSignature dataType__Parameter="_vjlvsPrUEe6iL5atnoopJQ" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_vivbIPrUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_viwpQPrUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_vjlvsPrUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_vjmWwPrUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_vjmWwfrUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_vjm90_rUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_vjm91PrUEe6iL5atnoopJQ" entityName="app_coronawarn_verification_model_TeleTanType"/>
</repository:Repository>
