<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_SClygEu-Ee-CnOa0U_g8IA">
  <components__Repository xsi:type="repository:BasicComponent" id="_SCTeoku-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SCTeoUu-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_SCS3lku-Ee-CnOa0U_g8IA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_SBrMk0u-Ee-CnOa0U_g8IA" describedService__SEFF="_R8GI9Eu-Ee-CnOa0U_g8IA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_SBpXV0u-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBpXXku-Ee-CnOa0U_g8IA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SBpXXku-Ee-CnOa0U_g8IA" entityName="If Branch" predecessor_AbstractAction="_SBpXV0u-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBpXX0u-Ee-CnOa0U_g8IA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBpXW0u-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SBpXXUu-Ee-CnOa0U_g8IA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SBpXWEu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBpXWUu-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SBpXWUu-Ee-CnOa0U_g8IA" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_SBpXWEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBpXWku-Ee-CnOa0U_g8IA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController_generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController_generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SBpXWku-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBpXWUu-Ee-CnOa0U_g8IA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_SBpXX0u-Ee-CnOa0U_g8IA" entityName="stopWatch.start()" predecessor_AbstractAction="_SBpXXku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBrMkUu-Ee-CnOa0U_g8IA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SBrMkUu-Ee-CnOa0U_g8IA" entityName="Switch Branch" predecessor_AbstractAction="_SBpXX0u-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBrMkku-Ee-CnOa0U_g8IA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBqldEu-Ee-CnOa0U_g8IA">
          <branchBehaviour_BranchTransition id="_SBqldku-Ee-CnOa0U_g8IA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SBpXYEu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBpXYUu-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SBpXYUu-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBpXYEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBp-YEu-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SBp-YEu-Ee-CnOa0U_g8IA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SBpXYUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBp-YUu-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SBp-YUu-Ee-CnOa0U_g8IA" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_SBp-YEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBp-Yku-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SBp-Yku-Ee-CnOa0U_g8IA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_SBp-YUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBp-Y0u-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SBp-Y0u-Ee-CnOa0U_g8IA" entityName="deferredResult" predecessor_AbstractAction="_SBp-Yku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBqlcEu-Ee-CnOa0U_g8IA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_SBqlcEu-Ee-CnOa0U_g8IA" entityName="If Branch" predecessor_AbstractAction="_SBp-Y0u-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBqlcUu-Ee-CnOa0U_g8IA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBp-bUu-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_SBp-b0u-Ee-CnOa0U_g8IA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SBp-ZEu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBp-ZUu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBp-ZUu-Ee-CnOa0U_g8IA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_SBp-ZEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBp-Zku-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBp-Zku-Ee-CnOa0U_g8IA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_SBp-ZUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBp-Z0u-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBp-Z0u-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBp-Zku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBp-aEu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBp-aEu-Ee-CnOa0U_g8IA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SBp-Z0u-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBp-aUu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBp-aUu-Ee-CnOa0U_g8IA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_SBp-aEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBp-aku-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBp-aku-Ee-CnOa0U_g8IA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_SBp-aUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBp-a0u-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SBp-a0u-Ee-CnOa0U_g8IA" entityName="deferredResult" predecessor_AbstractAction="_SBp-aku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBp-bEu-Ee-CnOa0U_g8IA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SBp-bEu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBp-a0u-Ee-CnOa0U_g8IA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SBqlcUu-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBqlcEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBqlcku-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SBqlcku-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBqlcUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBqlc0u-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SBqlc0u-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBqlcku-Ee-CnOa0U_g8IA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBrMiEu-Ee-CnOa0U_g8IA">
          <branchBehaviour_BranchTransition id="_SBrMiku-Ee-CnOa0U_g8IA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SBqld0u-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBrMhEu-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_SBrMhEu-Ee-CnOa0U_g8IA" entityName="If Branch" predecessor_AbstractAction="_SBqld0u-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBrMhUu-Ee-CnOa0U_g8IA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBrMgUu-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_SBrMg0u-Ee-CnOa0U_g8IA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SBqleEu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBqleUu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBqleUu-Ee-CnOa0U_g8IA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_SBqleEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBqleku-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBqleku-Ee-CnOa0U_g8IA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_SBqleUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBqle0u-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBqle0u-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBqleku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBqlfEu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBqlfEu-Ee-CnOa0U_g8IA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SBqle0u-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBqlfUu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBqlfUu-Ee-CnOa0U_g8IA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_SBqlfEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBqlfku-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBqlfku-Ee-CnOa0U_g8IA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_SBqlfUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBqlf0u-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SBqlf0u-Ee-CnOa0U_g8IA" entityName="deferredResult" predecessor_AbstractAction="_SBqlfku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBrMgEu-Ee-CnOa0U_g8IA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SBrMgEu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBqlf0u-Ee-CnOa0U_g8IA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SBrMhUu-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBrMhEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBrMhku-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SBrMhku-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBrMhUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBrMh0u-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SBrMh0u-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBrMhku-Ee-CnOa0U_g8IA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBrMjku-Ee-CnOa0U_g8IA">
          <branchBehaviour_BranchTransition id="_SBrMkEu-Ee-CnOa0U_g8IA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SBrMi0u-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBrMjEu-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SBrMjEu-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBrMi0u-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBrMjUu-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SBrMjUu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBrMjEu-Ee-CnOa0U_g8IA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_SBrMkku-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBrMkUu-Ee-CnOa0U_g8IA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_SCXJAEu-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_SCXJAku-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SCXJAUu-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_SCS3lUu-Ee-CnOa0U_g8IA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_SBtoyEu-Ee-CnOa0U_g8IA" describedService__SEFF="_R7dPwEu-Ee-CnOa0U_g8IA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_SBrMlUu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBrzlUu-Ee-CnOa0U_g8IA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SBrzlUu-Ee-CnOa0U_g8IA" entityName="If Branch" predecessor_AbstractAction="_SBrMlUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBrzlku-Ee-CnOa0U_g8IA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBrzkku-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SBrzlEu-Ee-CnOa0U_g8IA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SBrMlku-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBrzkEu-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SBrzkEu-Ee-CnOa0U_g8IA" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_SBrMlku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBrzkUu-Ee-CnOa0U_g8IA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SBrzkUu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBrzkEu-Ee-CnOa0U_g8IA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_SBrzlku-Ee-CnOa0U_g8IA" entityName="stopWatch.start()" predecessor_AbstractAction="_SBrzlUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBtoxUu-Ee-CnOa0U_g8IA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SBtoxUu-Ee-CnOa0U_g8IA" entityName="If Branch" predecessor_AbstractAction="_SBrzlku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBtoxku-Ee-CnOa0U_g8IA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBtowku-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SBtoxEu-Ee-CnOa0U_g8IA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SBrzl0u-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBtowEu-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_SBtowEu-Ee-CnOa0U_g8IA" entityName="Switch Branch" predecessor_AbstractAction="_SBrzl0u-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBtowUu-Ee-CnOa0U_g8IA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBsaq0u-Ee-CnOa0U_g8IA">
                <branchBehaviour_BranchTransition id="_SBsarUu-Ee-CnOa0U_g8IA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SBrzmEu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBrzmUu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBrzmUu-Ee-CnOa0U_g8IA" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_SBrzmEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBrzpUu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_SBrzpUu-Ee-CnOa0U_g8IA" entityName="If Branch" predecessor_AbstractAction="_SBrzmUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBrzpku-Ee-CnOa0U_g8IA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBrzoku-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_SBrzpEu-Ee-CnOa0U_g8IA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_SBrzmku-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBrzoEu-Ee-CnOa0U_g8IA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_SBrzoEu-Ee-CnOa0U_g8IA" entityName="If Branch" predecessor_AbstractAction="_SBrzmku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBrzoUu-Ee-CnOa0U_g8IA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBrznUu-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_SBrzn0u-Ee-CnOa0U_g8IA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_SBrzm0u-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBrznEu-Ee-CnOa0U_g8IA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_SBrznEu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBrzm0u-Ee-CnOa0U_g8IA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_SBrzoUu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBrzoEu-Ee-CnOa0U_g8IA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBrzpku-Ee-CnOa0U_g8IA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_SBrzpUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBrzp0u-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBrzp0u-Ee-CnOa0U_g8IA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_SBrzpku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBsaoEu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBsaoEu-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBrzp0u-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBsaoUu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBsaoUu-Ee-CnOa0U_g8IA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SBsaoEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBsaoku-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBsaoku-Ee-CnOa0U_g8IA" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_SBsaoUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBsao0u-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SBsao0u-Ee-CnOa0U_g8IA" entityName="deferredResult" predecessor_AbstractAction="_SBsaoku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBsapEu-Ee-CnOa0U_g8IA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBsapEu-Ee-CnOa0U_g8IA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_SBsao0u-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBsapUu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBsapUu-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBsapEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBsapku-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBsapku-Ee-CnOa0U_g8IA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SBsapUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBsap0u-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBsap0u-Ee-CnOa0U_g8IA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_SBsapku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBsaqEu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SBsaqEu-Ee-CnOa0U_g8IA" entityName="deferredResult" predecessor_AbstractAction="_SBsap0u-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBsaqUu-Ee-CnOa0U_g8IA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBsaqUu-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBsaqEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBsaqku-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SBsaqku-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBsaqUu-Ee-CnOa0U_g8IA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBtBuEu-Ee-CnOa0U_g8IA">
                <branchBehaviour_BranchTransition id="_SBtBuku-Ee-CnOa0U_g8IA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SBtBsEu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBtBsUu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBtBsUu-Ee-CnOa0U_g8IA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_SBtBsEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBtBsku-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBtBsku-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBtBsUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBtBs0u-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBtBs0u-Ee-CnOa0U_g8IA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SBtBsku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBtBtEu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBtBtEu-Ee-CnOa0U_g8IA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_SBtBs0u-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBtBtUu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SBtBtUu-Ee-CnOa0U_g8IA" entityName="deferredResult" predecessor_AbstractAction="_SBtBtEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBtBtku-Ee-CnOa0U_g8IA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBtBtku-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBtBtUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBtBt0u-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SBtBt0u-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBtBtku-Ee-CnOa0U_g8IA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBtBvku-Ee-CnOa0U_g8IA">
                <branchBehaviour_BranchTransition id="_SBtBwEu-Ee-CnOa0U_g8IA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SBtBu0u-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBtBvEu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBtBvEu-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBtBu0u-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBtBvUu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SBtBvUu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBtBvEu-Ee-CnOa0U_g8IA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SBtowUu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBtowEu-Ee-CnOa0U_g8IA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_SBtoxku-Ee-CnOa0U_g8IA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_SBtoxUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBtox0u-Ee-CnOa0U_g8IA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_SBtox0u-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBtoxku-Ee-CnOa0U_g8IA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_SCZlSUu-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SCZlR0u-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_SCS3mEu-Ee-CnOa0U_g8IA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SCZlSEu-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_SCS3l0u-Ee-CnOa0U_g8IA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_SBhbgku-Ee-CnOa0U_g8IA" describedService__SEFF="_R8GI8Eu-Ee-CnOa0U_g8IA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_R8hmwEu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBhbgEu-Ee-CnOa0U_g8IA"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SBhbgEu-Ee-CnOa0U_g8IA" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_R8hmwEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBhbgUu-Ee-CnOa0U_g8IA">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_SBhbgUu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBhbgEu-Ee-CnOa0U_g8IA"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_SBlF40u-Ee-CnOa0U_g8IA" describedService__SEFF="_R8Fh4ku-Ee-CnOa0U_g8IA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_SBhbhEu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBj3xku-Ee-CnOa0U_g8IA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SBj3xku-Ee-CnOa0U_g8IA" entityName="If Branch" predecessor_AbstractAction="_SBhbhEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBlF4Uu-Ee-CnOa0U_g8IA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBjQsEu-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SBjQsku-Ee-CnOa0U_g8IA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SBiCkEu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBipoEu-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SBipoEu-Ee-CnOa0U_g8IA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_SBiCkEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBipoUu-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SBipoUu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBipoEu-Ee-CnOa0U_g8IA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBj3w0u-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SBj3xUu-Ee-CnOa0U_g8IA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SBj3wEu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBj3wUu-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SBj3wUu-Ee-CnOa0U_g8IA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_SBj3wEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBj3wku-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SBj3wku-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBj3wUu-Ee-CnOa0U_g8IA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SBlF4Uu-Ee-CnOa0U_g8IA" entityName="If Branch" predecessor_AbstractAction="_SBj3xku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBlF4ku-Ee-CnOa0U_g8IA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBke30u-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SBlF4Eu-Ee-CnOa0U_g8IA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SBke0Eu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBke3Uu-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_SBke3Uu-Ee-CnOa0U_g8IA" entityName="If Branch" predecessor_AbstractAction="_SBke0Eu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBke3ku-Ee-CnOa0U_g8IA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBke1Uu-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_SBke10u-Ee-CnOa0U_g8IA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SBke0Uu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBke0ku-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBke0ku-Ee-CnOa0U_g8IA" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_SBke0Uu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBke00u-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SBke00u-Ee-CnOa0U_g8IA" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_SBke0ku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBke1Eu-Ee-CnOa0U_g8IA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SBke1Eu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBke00u-Ee-CnOa0U_g8IA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBke2ku-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_SBke3Eu-Ee-CnOa0U_g8IA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SBke2Eu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBke2Uu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SBke2Uu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBke2Eu-Ee-CnOa0U_g8IA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SBke3ku-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBke3Uu-Ee-CnOa0U_g8IA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_SBlF4ku-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBlF4Uu-Ee-CnOa0U_g8IA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_SCedxEu-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SCedw0u-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_SCTeoEu-Ee-CnOa0U_g8IA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_SBm7I0u-Ee-CnOa0U_g8IA" describedService__SEFF="_R8GwAku-Ee-CnOa0U_g8IA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_SBlF5Uu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBm7IEu-Ee-CnOa0U_g8IA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SBm7IEu-Ee-CnOa0U_g8IA" entityName="If Branch" predecessor_AbstractAction="_SBlF5Uu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBm7IUu-Ee-CnOa0U_g8IA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBm7HUu-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SBm7H0u-Ee-CnOa0U_g8IA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SBlF5ku-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBm7G0u-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_SBm7G0u-Ee-CnOa0U_g8IA" entityName="Switch Branch" predecessor_AbstractAction="_SBlF5ku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBm7HEu-Ee-CnOa0U_g8IA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBmUCku-Ee-CnOa0U_g8IA">
                <branchBehaviour_BranchTransition id="_SBmUDEu-Ee-CnOa0U_g8IA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SBls8Eu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBmUBEu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_SBmUBEu-Ee-CnOa0U_g8IA" entityName="If Branch" predecessor_AbstractAction="_SBls8Eu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBmUBUu-Ee-CnOa0U_g8IA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBmUAUu-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_SBmUA0u-Ee-CnOa0U_g8IA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_SBls8Uu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBls90u-Ee-CnOa0U_g8IA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_SBls90u-Ee-CnOa0U_g8IA" entityName="If Branch" predecessor_AbstractAction="_SBls8Uu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBmUAEu-Ee-CnOa0U_g8IA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBls9Eu-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_SBls9ku-Ee-CnOa0U_g8IA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_SBls8ku-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBls80u-Ee-CnOa0U_g8IA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_SBls80u-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBls8ku-Ee-CnOa0U_g8IA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_SBmUAEu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBls90u-Ee-CnOa0U_g8IA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBmUBUu-Ee-CnOa0U_g8IA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_SBmUBEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBmUBku-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBmUBku-Ee-CnOa0U_g8IA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_SBmUBUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBmUB0u-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SBmUB0u-Ee-CnOa0U_g8IA" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_SBmUBku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBmUCEu-Ee-CnOa0U_g8IA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBmUCEu-Ee-CnOa0U_g8IA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_SBmUB0u-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBmUCUu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SBmUCUu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBmUCEu-Ee-CnOa0U_g8IA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBm7E0u-Ee-CnOa0U_g8IA">
                <branchBehaviour_BranchTransition id="_SBm7FUu-Ee-CnOa0U_g8IA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SBm7EEu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBm7EUu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBm7EUu-Ee-CnOa0U_g8IA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_SBm7EEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBm7Eku-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SBm7Eku-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBm7EUu-Ee-CnOa0U_g8IA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBm7GEu-Ee-CnOa0U_g8IA">
                <branchBehaviour_BranchTransition id="_SBm7Gku-Ee-CnOa0U_g8IA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SBm7Fku-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBm7F0u-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SBm7F0u-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBm7Fku-Ee-CnOa0U_g8IA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SBm7HEu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBm7G0u-Ee-CnOa0U_g8IA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_SBm7IUu-Ee-CnOa0U_g8IA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_SBm7IEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBm7Iku-Ee-CnOa0U_g8IA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_SBm7Iku-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBm7IUu-Ee-CnOa0U_g8IA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_SCg6AUu-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SCg6AEu-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_SCS3mUu-Ee-CnOa0U_g8IA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_SBpXVUu-Ee-CnOa0U_g8IA" describedService__SEFF="_R8E60Eu-Ee-CnOa0U_g8IA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_SBm7JUu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBniJUu-Ee-CnOa0U_g8IA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SBniJUu-Ee-CnOa0U_g8IA" entityName="If Branch" predecessor_AbstractAction="_SBm7JUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBniJku-Ee-CnOa0U_g8IA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBniIku-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SBniJEu-Ee-CnOa0U_g8IA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SBm7Jku-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBniIEu-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SBniIEu-Ee-CnOa0U_g8IA" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_SBm7Jku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBniIUu-Ee-CnOa0U_g8IA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SBniIUu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBniIEu-Ee-CnOa0U_g8IA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_SBniJku-Ee-CnOa0U_g8IA" entityName="stopWatch.start()" predecessor_AbstractAction="_SBniJUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBpXU0u-Ee-CnOa0U_g8IA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SBpXU0u-Ee-CnOa0U_g8IA" entityName="If Branch" predecessor_AbstractAction="_SBniJku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBpXVEu-Ee-CnOa0U_g8IA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBpXUEu-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SBpXUku-Ee-CnOa0U_g8IA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SBniJ0u-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBowS0u-Ee-CnOa0U_g8IA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_SBowS0u-Ee-CnOa0U_g8IA" entityName="If Branch" predecessor_AbstractAction="_SBniJ0u-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBowTEu-Ee-CnOa0U_g8IA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBowSEu-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_SBowSku-Ee-CnOa0U_g8IA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SBniKEu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBoJQEu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_SBoJQEu-Ee-CnOa0U_g8IA" entityName="Switch Branch" predecessor_AbstractAction="_SBniKEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBoJQUu-Ee-CnOa0U_g8IA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBoJMUu-Ee-CnOa0U_g8IA">
                      <branchBehaviour_BranchTransition id="_SBoJM0u-Ee-CnOa0U_g8IA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_SBniKUu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBniMEu-Ee-CnOa0U_g8IA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_SBniMEu-Ee-CnOa0U_g8IA" entityName="If Branch" predecessor_AbstractAction="_SBniKUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBniMUu-Ee-CnOa0U_g8IA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBniLUu-Ee-CnOa0U_g8IA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_SBniL0u-Ee-CnOa0U_g8IA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_SBniKku-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBniK0u-Ee-CnOa0U_g8IA"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_SBniK0u-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBniKku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBniLEu-Ee-CnOa0U_g8IA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_SBniLEu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBniK0u-Ee-CnOa0U_g8IA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_SBniMUu-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBniMEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBoJMEu-Ee-CnOa0U_g8IA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_SBoJMEu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBniMUu-Ee-CnOa0U_g8IA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBoJN0u-Ee-CnOa0U_g8IA">
                      <branchBehaviour_BranchTransition id="_SBoJOUu-Ee-CnOa0U_g8IA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_SBoJNEu-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBoJNUu-Ee-CnOa0U_g8IA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_SBoJNUu-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBoJNEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBoJNku-Ee-CnOa0U_g8IA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_SBoJNku-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBoJNUu-Ee-CnOa0U_g8IA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SBoJPUu-Ee-CnOa0U_g8IA">
                      <branchBehaviour_BranchTransition id="_SBoJP0u-Ee-CnOa0U_g8IA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_SBoJOku-Ee-CnOa0U_g8IA" entityName="Start Action" successor_AbstractAction="_SBoJO0u-Ee-CnOa0U_g8IA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_SBoJO0u-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBoJOku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBoJPEu-Ee-CnOa0U_g8IA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_SBoJPEu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBoJO0u-Ee-CnOa0U_g8IA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBoJQUu-Ee-CnOa0U_g8IA" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_SBoJQEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBowQEu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBowQEu-Ee-CnOa0U_g8IA" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_SBoJQUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBowQUu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBowQUu-Ee-CnOa0U_g8IA" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_SBowQEu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBowQku-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBowQku-Ee-CnOa0U_g8IA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SBowQUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBowQ0u-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBowQ0u-Ee-CnOa0U_g8IA" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SBowQku-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBowREu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBowREu-Ee-CnOa0U_g8IA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_SBowQ0u-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBowRUu-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SBowRUu-Ee-CnOa0U_g8IA" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_SBowREu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBowRku-Ee-CnOa0U_g8IA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SBowRku-Ee-CnOa0U_g8IA" entityName="deferredResult" predecessor_AbstractAction="_SBowRUu-Ee-CnOa0U_g8IA" successor_AbstractAction="_SBowR0u-Ee-CnOa0U_g8IA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SBowR0u-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBowRku-Ee-CnOa0U_g8IA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SBowTEu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBowS0u-Ee-CnOa0U_g8IA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_SBpXVEu-Ee-CnOa0U_g8IA" entityName="Stop Action" predecessor_AbstractAction="_SBpXU0u-Ee-CnOa0U_g8IA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_SCkkYUu-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_SClLdku-Ee-CnOa0U_g8IA" encapsulatedComponent__AssemblyContext="_SCXJAku-Ee-CnOa0U_g8IA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_SCmZk0u-Ee-CnOa0U_g8IA" innerProvidedRole_ProvidedDelegationConnector="_SCXJAUu-Ee-CnOa0U_g8IA" outerProvidedRole_ProvidedDelegationConnector="_SCkkYEu-Ee-CnOa0U_g8IA" assemblyContext_ProvidedDelegationConnector="_SClLdku-Ee-CnOa0U_g8IA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SCkkYEu-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_SCS3lUu-Ee-CnOa0U_g8IA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_SCkkY0u-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_SClLcku-Ee-CnOa0U_g8IA" encapsulatedComponent__AssemblyContext="_SCTeoku-Ee-CnOa0U_g8IA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_SClygku-Ee-CnOa0U_g8IA" innerProvidedRole_ProvidedDelegationConnector="_SCTeoUu-Ee-CnOa0U_g8IA" outerProvidedRole_ProvidedDelegationConnector="_SCkkYku-Ee-CnOa0U_g8IA" assemblyContext_ProvidedDelegationConnector="_SClLcku-Ee-CnOa0U_g8IA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SCkkYku-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_SCS3lku-Ee-CnOa0U_g8IA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_SCkkZku-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_SClLeEu-Ee-CnOa0U_g8IA" encapsulatedComponent__AssemblyContext="_SCZlSUu-Ee-CnOa0U_g8IA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_SClygUu-Ee-CnOa0U_g8IA" innerProvidedRole_ProvidedDelegationConnector="_SCZlR0u-Ee-CnOa0U_g8IA" outerProvidedRole_ProvidedDelegationConnector="_SCkkZEu-Ee-CnOa0U_g8IA" assemblyContext_ProvidedDelegationConnector="_SClLeEu-Ee-CnOa0U_g8IA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_SCmZkUu-Ee-CnOa0U_g8IA" innerProvidedRole_ProvidedDelegationConnector="_SCZlSEu-Ee-CnOa0U_g8IA" outerProvidedRole_ProvidedDelegationConnector="_SCkkZUu-Ee-CnOa0U_g8IA" assemblyContext_ProvidedDelegationConnector="_SClLeEu-Ee-CnOa0U_g8IA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SCkkZEu-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_SCS3mEu-Ee-CnOa0U_g8IA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SCkkZUu-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_SCS3l0u-Ee-CnOa0U_g8IA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_SCkkaEu-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_SClLdEu-Ee-CnOa0U_g8IA" encapsulatedComponent__AssemblyContext="_SCedxEu-Ee-CnOa0U_g8IA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_SCmZkEu-Ee-CnOa0U_g8IA" innerProvidedRole_ProvidedDelegationConnector="_SCedw0u-Ee-CnOa0U_g8IA" outerProvidedRole_ProvidedDelegationConnector="_SCkkZ0u-Ee-CnOa0U_g8IA" assemblyContext_ProvidedDelegationConnector="_SClLdEu-Ee-CnOa0U_g8IA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SCkkZ0u-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_SCTeoEu-Ee-CnOa0U_g8IA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_SCkkaku-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_SClLeku-Ee-CnOa0U_g8IA" encapsulatedComponent__AssemblyContext="_SCg6AUu-Ee-CnOa0U_g8IA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_SCmZkku-Ee-CnOa0U_g8IA" innerProvidedRole_ProvidedDelegationConnector="_SCg6AEu-Ee-CnOa0U_g8IA" outerProvidedRole_ProvidedDelegationConnector="_SCkkaUu-Ee-CnOa0U_g8IA" assemblyContext_ProvidedDelegationConnector="_SClLeku-Ee-CnOa0U_g8IA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SCkkaUu-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_SCS3mUu-Ee-CnOa0U_g8IA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_SCkka0u-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_SClLcEu-Ee-CnOa0U_g8IA" encapsulatedComponent__AssemblyContext="_SCXJAEu-Ee-CnOa0U_g8IA"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_SCS3lUu-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_R7dPwEu-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_R7cosEu-Ee-CnOa0U_g8IA">
      <parameters__OperationSignature dataType__Parameter="_R7bakEu-Ee-CnOa0U_g8IA" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_SCS3lku-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_R8GI9Eu-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_R7cosEu-Ee-CnOa0U_g8IA">
      <parameters__OperationSignature dataType__Parameter="_R8GI80u-Ee-CnOa0U_g8IA" parameterName="request" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_SCS3l0u-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_R8Fh4ku-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_R8Fh4Uu-Ee-CnOa0U_g8IA">
      <parameters__OperationSignature dataType__Parameter="_R8E600u-Ee-CnOa0U_g8IA" parameterName="authorization" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_R8Fh4Eu-Ee-CnOa0U_g8IA" parameterName="teleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_SCS3mEu-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_R8GI8Eu-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_R8Fh4Uu-Ee-CnOa0U_g8IA">
      <parameters__OperationSignature dataType__Parameter="_R8Fh5Uu-Ee-CnOa0U_g8IA" parameterName="tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_SCS3mUu-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_R8E60Eu-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_R7cosEu-Ee-CnOa0U_g8IA">
      <parameters__OperationSignature dataType__Parameter="_R7bakEu-Ee-CnOa0U_g8IA" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_SCTeoEu-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_R8GwAku-Ee-CnOa0U_g8IA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_R8Fh4Uu-Ee-CnOa0U_g8IA">
      <parameters__OperationSignature dataType__Parameter="_R7bakEu-Ee-CnOa0U_g8IA" parameterName="registrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_R7bakEu-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_R7cosEu-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_R8E600u-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_R8Fh4Eu-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_R8Fh4Uu-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_R8Fh5Uu-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_R8GI80u-Ee-CnOa0U_g8IA" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
</repository:Repository>
