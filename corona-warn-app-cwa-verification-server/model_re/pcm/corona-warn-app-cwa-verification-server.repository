<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_hgwrDBAFEe-Tlfqg8cZV9A">
  <components__Repository xsi:type="repository:BasicComponent" id="_hgdwGxAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hgdwGhAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_hgdwFBAFEe-Tlfqg8cZV9A"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_hftiLRAFEe-Tlfqg8cZV9A" describedService__SEFF="_hZIZABAFEe-Tlfqg8cZV9A">
      <steps_Behaviour xsi:type="seff:StartAction" id="_hfrF5BAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfrF6xAFEe-Tlfqg8cZV9A"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_hfrF6xAFEe-Tlfqg8cZV9A" entityName="If Branch" predecessor_AbstractAction="_hfrF5BAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfrF7BAFEe-Tlfqg8cZV9A">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfrF6BAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_hfrF6hAFEe-Tlfqg8cZV9A">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hfrF5RAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfrF5hAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hfrF5hAFEe-Tlfqg8cZV9A" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_hfrF5RAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfrF5xAFEe-Tlfqg8cZV9A">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hfrF5xAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfrF5hAFEe-Tlfqg8cZV9A"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_hfrF7BAFEe-Tlfqg8cZV9A" entityName="stopWatch.start()" predecessor_AbstractAction="_hfrF6xAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hftiKhAFEe-Tlfqg8cZV9A"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_hftiKhAFEe-Tlfqg8cZV9A" entityName="If Branch" predecessor_AbstractAction="_hfrF7BAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hftiKxAFEe-Tlfqg8cZV9A">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hftiJxAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_hftiKRAFEe-Tlfqg8cZV9A">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hfrs8BAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hftiJRAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_hftiJRAFEe-Tlfqg8cZV9A" entityName="Switch Branch" predecessor_AbstractAction="_hfrs8BAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hftiJhAFEe-Tlfqg8cZV9A">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfsUCBAFEe-Tlfqg8cZV9A">
                <branchBehaviour_BranchTransition id="_hfsUChAFEe-Tlfqg8cZV9A">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hfrs8RAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfrs8hAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfrs8hAFEe-Tlfqg8cZV9A" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_hfrs8RAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfrs_hAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_hfrs_hAFEe-Tlfqg8cZV9A" entityName="If Branch" predecessor_AbstractAction="_hfrs8hAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfrs_xAFEe-Tlfqg8cZV9A">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfrs-xAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_hfrs_RAFEe-Tlfqg8cZV9A">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_hfrs8xAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfrs-RAFEe-Tlfqg8cZV9A"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_hfrs-RAFEe-Tlfqg8cZV9A" entityName="If Branch" predecessor_AbstractAction="_hfrs8xAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfrs-hAFEe-Tlfqg8cZV9A">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfrs9hAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_hfrs-BAFEe-Tlfqg8cZV9A">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_hfrs9BAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfrs9RAFEe-Tlfqg8cZV9A"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_hfrs9RAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfrs9BAFEe-Tlfqg8cZV9A"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_hfrs-hAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfrs-RAFEe-Tlfqg8cZV9A"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfrs_xAFEe-Tlfqg8cZV9A" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_hfrs_hAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfrtABAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfrtABAFEe-Tlfqg8cZV9A" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_hfrs_xAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfrtARAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfrtARAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfrtABAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfrtAhAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfrtAhAFEe-Tlfqg8cZV9A" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_hfrtARAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfrtAxAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfrtAxAFEe-Tlfqg8cZV9A" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_hfrtAhAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfsUABAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hfsUABAFEe-Tlfqg8cZV9A" entityName="deferredResult" predecessor_AbstractAction="_hfrtAxAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfsUARAFEe-Tlfqg8cZV9A">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfsUARAFEe-Tlfqg8cZV9A" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_hfsUABAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfsUAhAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfsUAhAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfsUARAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfsUAxAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfsUAxAFEe-Tlfqg8cZV9A" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_hfsUAhAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfsUBBAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfsUBBAFEe-Tlfqg8cZV9A" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_hfsUAxAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfsUBRAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hfsUBRAFEe-Tlfqg8cZV9A" entityName="deferredResult" predecessor_AbstractAction="_hfsUBBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfsUBhAFEe-Tlfqg8cZV9A">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfsUBhAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfsUBRAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfsUBxAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hfsUBxAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfsUBhAFEe-Tlfqg8cZV9A"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfs7GBAFEe-Tlfqg8cZV9A">
                <branchBehaviour_BranchTransition id="_hfs7GhAFEe-Tlfqg8cZV9A">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hfs7EBAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfs7ERAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfs7ERAFEe-Tlfqg8cZV9A" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_hfs7EBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfs7EhAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfs7EhAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfs7ERAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfs7ExAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfs7ExAFEe-Tlfqg8cZV9A" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_hfs7EhAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfs7FBAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfs7FBAFEe-Tlfqg8cZV9A" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_hfs7ExAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfs7FRAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hfs7FRAFEe-Tlfqg8cZV9A" entityName="deferredResult" predecessor_AbstractAction="_hfs7FBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfs7FhAFEe-Tlfqg8cZV9A">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfs7FhAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfs7FRAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfs7FxAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hfs7FxAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfs7FhAFEe-Tlfqg8cZV9A"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hftiIhAFEe-Tlfqg8cZV9A">
                <branchBehaviour_BranchTransition id="_hftiJBAFEe-Tlfqg8cZV9A">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hfs7GxAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hftiIBAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hftiIBAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfs7GxAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hftiIRAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hftiIRAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hftiIBAFEe-Tlfqg8cZV9A"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hftiJhAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hftiJRAFEe-Tlfqg8cZV9A"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_hftiKxAFEe-Tlfqg8cZV9A" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_hftiKhAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hftiLBAFEe-Tlfqg8cZV9A"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_hftiLBAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hftiKxAFEe-Tlfqg8cZV9A"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_hghadBAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hghacxAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_hgdwFxAFEe-Tlfqg8cZV9A"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_hfxMkhAFEe-Tlfqg8cZV9A" describedService__SEFF="_hZ0VgBAFEe-Tlfqg8cZV9A">
      <steps_Behaviour xsi:type="seff:StartAction" id="_hfvXUxAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfvXWhAFEe-Tlfqg8cZV9A"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_hfvXWhAFEe-Tlfqg8cZV9A" entityName="If Branch" predecessor_AbstractAction="_hfvXUxAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfvXWxAFEe-Tlfqg8cZV9A">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfvXVxAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_hfvXWRAFEe-Tlfqg8cZV9A">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hfvXVBAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfvXVRAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hfvXVRAFEe-Tlfqg8cZV9A" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_hfvXVBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfvXVhAFEe-Tlfqg8cZV9A">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController.generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController.generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hfvXVhAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfvXVRAFEe-Tlfqg8cZV9A"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_hfvXWxAFEe-Tlfqg8cZV9A" entityName="stopWatch.start()" predecessor_AbstractAction="_hfvXWhAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfxMkBAFEe-Tlfqg8cZV9A"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_hfxMkBAFEe-Tlfqg8cZV9A" entityName="Switch Branch" predecessor_AbstractAction="_hfvXWxAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfxMkRAFEe-Tlfqg8cZV9A">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfwlcxAFEe-Tlfqg8cZV9A">
          <branchBehaviour_BranchTransition id="_hfwldRAFEe-Tlfqg8cZV9A">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hfvXXBAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfvXXRAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hfvXXRAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfvXXBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfvXXhAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hfvXXhAFEe-Tlfqg8cZV9A" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_hfvXXRAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfvXXxAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hfvXXxAFEe-Tlfqg8cZV9A" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_hfvXXhAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfvXYBAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hfvXYBAFEe-Tlfqg8cZV9A" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_hfvXXxAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfv-YBAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hfv-YBAFEe-Tlfqg8cZV9A" entityName="deferredResult" predecessor_AbstractAction="_hfvXYBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfv-bRAFEe-Tlfqg8cZV9A">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_hfv-bRAFEe-Tlfqg8cZV9A" entityName="If Branch" predecessor_AbstractAction="_hfv-YBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfwlcBAFEe-Tlfqg8cZV9A">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfv-ahAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_hfv-bBAFEe-Tlfqg8cZV9A">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hfv-YRAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfv-YhAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfv-YhAFEe-Tlfqg8cZV9A" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_hfv-YRAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfv-YxAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfv-YxAFEe-Tlfqg8cZV9A" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_hfv-YhAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfv-ZBAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfv-ZBAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfv-YxAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfv-ZRAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfv-ZRAFEe-Tlfqg8cZV9A" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_hfv-ZBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfv-ZhAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfv-ZhAFEe-Tlfqg8cZV9A" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_hfv-ZRAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfv-ZxAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfv-ZxAFEe-Tlfqg8cZV9A" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_hfv-ZhAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfv-aBAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hfv-aBAFEe-Tlfqg8cZV9A" entityName="deferredResult" predecessor_AbstractAction="_hfv-ZxAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfv-aRAFEe-Tlfqg8cZV9A">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hfv-aRAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfv-aBAFEe-Tlfqg8cZV9A"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hfwlcBAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfv-bRAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfwlcRAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hfwlcRAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfwlcBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfwlchAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hfwlchAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfwlcRAFEe-Tlfqg8cZV9A"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfxMhxAFEe-Tlfqg8cZV9A">
          <branchBehaviour_BranchTransition id="_hfxMiRAFEe-Tlfqg8cZV9A">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hfwldhAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfxMgxAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_hfxMgxAFEe-Tlfqg8cZV9A" entityName="If Branch" predecessor_AbstractAction="_hfwldhAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfxMhBAFEe-Tlfqg8cZV9A">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfxMgBAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_hfxMghAFEe-Tlfqg8cZV9A">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hfwldxAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfwleBAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfwleBAFEe-Tlfqg8cZV9A" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_hfwldxAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfwleRAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfwleRAFEe-Tlfqg8cZV9A" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_hfwleBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfwlehAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfwlehAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfwleRAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfwlexAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfwlexAFEe-Tlfqg8cZV9A" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_hfwlehAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfwlfBAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfwlfBAFEe-Tlfqg8cZV9A" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_hfwlexAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfwlfRAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfwlfRAFEe-Tlfqg8cZV9A" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_hfwlfBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfwlfhAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hfwlfhAFEe-Tlfqg8cZV9A" entityName="deferredResult" predecessor_AbstractAction="_hfwlfRAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfwlfxAFEe-Tlfqg8cZV9A">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hfwlfxAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfwlfhAFEe-Tlfqg8cZV9A"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hfxMhBAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfxMgxAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfxMhRAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hfxMhRAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfxMhBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfxMhhAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hfxMhhAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfxMhRAFEe-Tlfqg8cZV9A"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfxMjRAFEe-Tlfqg8cZV9A">
          <branchBehaviour_BranchTransition id="_hfxMjxAFEe-Tlfqg8cZV9A">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hfxMihAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfxMixAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hfxMixAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfxMihAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfxMjBAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hfxMjBAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfxMixAFEe-Tlfqg8cZV9A"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_hfxMkRAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfxMkBAFEe-Tlfqg8cZV9A"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_hgj2vRAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hgj2vBAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_hgdwFRAFEe-Tlfqg8cZV9A"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_hfzBsBAFEe-Tlfqg8cZV9A" describedService__SEFF="_hZ1johAFEe-Tlfqg8cZV9A">
      <steps_Behaviour xsi:type="seff:StartAction" id="_hfxzkBAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfyathAFEe-Tlfqg8cZV9A"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_hfyathAFEe-Tlfqg8cZV9A" entityName="If Branch" predecessor_AbstractAction="_hfxzkBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfyatxAFEe-Tlfqg8cZV9A">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfyasxAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_hfyatRAFEe-Tlfqg8cZV9A">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hfxzkRAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfyasRAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_hfyasRAFEe-Tlfqg8cZV9A" entityName="Switch Branch" predecessor_AbstractAction="_hfxzkRAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfyashAFEe-Tlfqg8cZV9A">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfyaoxAFEe-Tlfqg8cZV9A">
                <branchBehaviour_BranchTransition id="_hfyapRAFEe-Tlfqg8cZV9A">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hfxzkhAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfxznhAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_hfxznhAFEe-Tlfqg8cZV9A" entityName="If Branch" predecessor_AbstractAction="_hfxzkhAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfxznxAFEe-Tlfqg8cZV9A">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfxzmxAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_hfxznRAFEe-Tlfqg8cZV9A">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_hfxzkxAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfxzmRAFEe-Tlfqg8cZV9A"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_hfxzmRAFEe-Tlfqg8cZV9A" entityName="If Branch" predecessor_AbstractAction="_hfxzkxAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfxzmhAFEe-Tlfqg8cZV9A">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfxzlhAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_hfxzmBAFEe-Tlfqg8cZV9A">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_hfxzlBAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfxzlRAFEe-Tlfqg8cZV9A"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_hfxzlRAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfxzlBAFEe-Tlfqg8cZV9A"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_hfxzmhAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfxzmRAFEe-Tlfqg8cZV9A"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfxznxAFEe-Tlfqg8cZV9A" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_hfxznhAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfxzoBAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfxzoBAFEe-Tlfqg8cZV9A" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_hfxznxAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfyaoBAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hfyaoBAFEe-Tlfqg8cZV9A" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_hfxzoBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfyaoRAFEe-Tlfqg8cZV9A">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfyaoRAFEe-Tlfqg8cZV9A" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_hfyaoBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfyaohAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hfyaohAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfyaoRAFEe-Tlfqg8cZV9A"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfyaqRAFEe-Tlfqg8cZV9A">
                <branchBehaviour_BranchTransition id="_hfyaqxAFEe-Tlfqg8cZV9A">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hfyaphAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfyapxAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfyapxAFEe-Tlfqg8cZV9A" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_hfyaphAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfyaqBAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hfyaqBAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfyapxAFEe-Tlfqg8cZV9A"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfyarhAFEe-Tlfqg8cZV9A">
                <branchBehaviour_BranchTransition id="_hfyasBAFEe-Tlfqg8cZV9A">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hfyarBAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfyarRAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hfyarRAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfyarBAFEe-Tlfqg8cZV9A"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hfyashAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfyasRAFEe-Tlfqg8cZV9A"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_hfyatxAFEe-Tlfqg8cZV9A" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_hfyathAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfyauBAFEe-Tlfqg8cZV9A"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_hfyauBAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfyatxAFEe-Tlfqg8cZV9A"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_hgmS_hAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hgmS_RAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_hgdwGBAFEe-Tlfqg8cZV9A"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_hfrF4hAFEe-Tlfqg8cZV9A" describedService__SEFF="_hZ0VgxAFEe-Tlfqg8cZV9A">
      <steps_Behaviour xsi:type="seff:StartAction" id="_haTdsRAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfoCkBAFEe-Tlfqg8cZV9A"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_hfoCkBAFEe-Tlfqg8cZV9A" entityName="If Branch" predecessor_AbstractAction="_haTdsRAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfoCkRAFEe-Tlfqg8cZV9A">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfm0cBAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_hfnbgBAFEe-Tlfqg8cZV9A">
            <steps_Behaviour xsi:type="seff:StartAction" id="_haVS4BAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfmNYBAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hfmNYBAFEe-Tlfqg8cZV9A" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_haVS4BAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfmNYRAFEe-Tlfqg8cZV9A">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hfmNYRAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfmNYBAFEe-Tlfqg8cZV9A"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_hfoCkRAFEe-Tlfqg8cZV9A" entityName="stopWatch.start()" predecessor_AbstractAction="_hfoCkBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfrF4BAFEe-Tlfqg8cZV9A"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_hfrF4BAFEe-Tlfqg8cZV9A" entityName="If Branch" predecessor_AbstractAction="_hfoCkRAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfrF4RAFEe-Tlfqg8cZV9A">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfqe2RAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_hfqe2xAFEe-Tlfqg8cZV9A">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hfopoBAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfqe1xAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_hfqe1xAFEe-Tlfqg8cZV9A" entityName="If Branch" predecessor_AbstractAction="_hfopoBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfqe2BAFEe-Tlfqg8cZV9A">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfqe1BAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_hfqe1hAFEe-Tlfqg8cZV9A">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hfopoRAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfp3xhAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_hfp3xhAFEe-Tlfqg8cZV9A" entityName="Switch Branch" predecessor_AbstractAction="_hfopoRAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfp3xxAFEe-Tlfqg8cZV9A">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfpQuRAFEe-Tlfqg8cZV9A">
                      <branchBehaviour_BranchTransition id="_hfpQuxAFEe-Tlfqg8cZV9A">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_hfopohAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfpQthAFEe-Tlfqg8cZV9A"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_hfpQthAFEe-Tlfqg8cZV9A" entityName="If Branch" predecessor_AbstractAction="_hfopohAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfpQtxAFEe-Tlfqg8cZV9A">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfpQsxAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_hfpQtRAFEe-Tlfqg8cZV9A">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_hfpQsBAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfpQsRAFEe-Tlfqg8cZV9A"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_hfpQsRAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfpQsBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfpQshAFEe-Tlfqg8cZV9A"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_hfpQshAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfpQsRAFEe-Tlfqg8cZV9A"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_hfpQtxAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfpQthAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfpQuBAFEe-Tlfqg8cZV9A"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_hfpQuBAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfpQtxAFEe-Tlfqg8cZV9A"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfpQvxAFEe-Tlfqg8cZV9A">
                      <branchBehaviour_BranchTransition id="_hfpQwRAFEe-Tlfqg8cZV9A">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_hfpQvBAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfpQvRAFEe-Tlfqg8cZV9A"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_hfpQvRAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfpQvBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfpQvhAFEe-Tlfqg8cZV9A"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_hfpQvhAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfpQvRAFEe-Tlfqg8cZV9A"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfp3wxAFEe-Tlfqg8cZV9A">
                      <branchBehaviour_BranchTransition id="_hfp3xRAFEe-Tlfqg8cZV9A">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_hfp3wBAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfp3wRAFEe-Tlfqg8cZV9A"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_hfp3wRAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfp3wBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfp3whAFEe-Tlfqg8cZV9A"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_hfp3whAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfp3wRAFEe-Tlfqg8cZV9A"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfp3xxAFEe-Tlfqg8cZV9A" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_hfp3xhAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfp3yBAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfp3yBAFEe-Tlfqg8cZV9A" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_hfp3xxAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfp3yRAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfp3yRAFEe-Tlfqg8cZV9A" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_hfp3yBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfp3yhAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfp3yhAFEe-Tlfqg8cZV9A" entityName="stopWatch.stop()" predecessor_AbstractAction="_hfp3yRAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfp3yxAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfp3yxAFEe-Tlfqg8cZV9A" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_hfp3yhAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfqe0BAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfqe0BAFEe-Tlfqg8cZV9A" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_hfp3yxAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfqe0RAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfqe0RAFEe-Tlfqg8cZV9A" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_hfqe0BAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfqe0hAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hfqe0hAFEe-Tlfqg8cZV9A" entityName="deferredResult" predecessor_AbstractAction="_hfqe0RAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfqe0xAFEe-Tlfqg8cZV9A">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hfqe0xAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfqe0hAFEe-Tlfqg8cZV9A"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hfqe2BAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfqe1xAFEe-Tlfqg8cZV9A"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_hfrF4RAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfrF4BAFEe-Tlfqg8cZV9A"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_hgpWQhAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hgpWQBAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_hgdwFhAFEe-Tlfqg8cZV9A"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hgpWQRAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_hgdwGRAFEe-Tlfqg8cZV9A"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_hfvXURAFEe-Tlfqg8cZV9A" describedService__SEFF="_hZ08lBAFEe-Tlfqg8cZV9A">
      <steps_Behaviour xsi:type="seff:StartAction" id="_hfuJNBAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfuwQhAFEe-Tlfqg8cZV9A"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_hfuwQhAFEe-Tlfqg8cZV9A" entityName="If Branch" predecessor_AbstractAction="_hfuJNBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfuwVRAFEe-Tlfqg8cZV9A">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfuJOBAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_hfuJOhAFEe-Tlfqg8cZV9A">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hfuJNRAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfuJNhAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hfuJNhAFEe-Tlfqg8cZV9A" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_hfuJNRAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfuJNxAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hfuJNxAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfuJNhAFEe-Tlfqg8cZV9A"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfuJPhAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_hfuwQRAFEe-Tlfqg8cZV9A">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hfuJOxAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfuJPBAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hfuJPBAFEe-Tlfqg8cZV9A" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_hfuJOxAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfuJPRAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hfuJPRAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfuJPBAFEe-Tlfqg8cZV9A"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_hfuwVRAFEe-Tlfqg8cZV9A" entityName="If Branch" predecessor_AbstractAction="_hfuwQhAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfvXUBAFEe-Tlfqg8cZV9A">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfuwUhAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_hfuwVBAFEe-Tlfqg8cZV9A">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hfuwQxAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfuwUBAFEe-Tlfqg8cZV9A"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_hfuwUBAFEe-Tlfqg8cZV9A" entityName="If Branch" predecessor_AbstractAction="_hfuwQxAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfuwURAFEe-Tlfqg8cZV9A">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfuwSBAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_hfuwShAFEe-Tlfqg8cZV9A">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hfuwRBAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfuwRRAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hfuwRRAFEe-Tlfqg8cZV9A" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_hfuwRBAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfuwRhAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hfuwRhAFEe-Tlfqg8cZV9A" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_hfuwRRAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfuwRxAFEe-Tlfqg8cZV9A">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hfuwRxAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfuwRhAFEe-Tlfqg8cZV9A"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hfuwTRAFEe-Tlfqg8cZV9A" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_hfuwTxAFEe-Tlfqg8cZV9A">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hfuwSxAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfuwTBAFEe-Tlfqg8cZV9A"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hfuwTBAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfuwSxAFEe-Tlfqg8cZV9A"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hfuwURAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfuwUBAFEe-Tlfqg8cZV9A"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_hfvXUBAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfuwVRAFEe-Tlfqg8cZV9A"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_hfuJMhAFEe-Tlfqg8cZV9A" describedService__SEFF="_hZzucRAFEe-Tlfqg8cZV9A">
      <steps_Behaviour xsi:type="seff:StartAction" id="_hftiLxAFEe-Tlfqg8cZV9A" entityName="Start Action" successor_AbstractAction="_hfuJMBAFEe-Tlfqg8cZV9A"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hfuJMBAFEe-Tlfqg8cZV9A" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_hftiLxAFEe-Tlfqg8cZV9A" successor_AbstractAction="_hfuJMRAFEe-Tlfqg8cZV9A">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_hfuJMRAFEe-Tlfqg8cZV9A" entityName="Stop Action" predecessor_AbstractAction="_hfuJMBAFEe-Tlfqg8cZV9A"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_hgtnvBAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:CompositeComponent" id="_hgvc4RAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_hgwrBhAFEe-Tlfqg8cZV9A" encapsulatedComponent__AssemblyContext="_hgdwGxAFEe-Tlfqg8cZV9A"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_hgx5IBAFEe-Tlfqg8cZV9A" innerProvidedRole_ProvidedDelegationConnector="_hgdwGhAFEe-Tlfqg8cZV9A" outerProvidedRole_ProvidedDelegationConnector="_hgvc4BAFEe-Tlfqg8cZV9A" assemblyContext_ProvidedDelegationConnector="_hgwrBhAFEe-Tlfqg8cZV9A"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hgvc4BAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_hgdwFBAFEe-Tlfqg8cZV9A"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_hgwD8RAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_hgwrABAFEe-Tlfqg8cZV9A" encapsulatedComponent__AssemblyContext="_hgj2vRAFEe-Tlfqg8cZV9A"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_hgx5JBAFEe-Tlfqg8cZV9A" innerProvidedRole_ProvidedDelegationConnector="_hgj2vBAFEe-Tlfqg8cZV9A" outerProvidedRole_ProvidedDelegationConnector="_hgwD8BAFEe-Tlfqg8cZV9A" assemblyContext_ProvidedDelegationConnector="_hgwrABAFEe-Tlfqg8cZV9A"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hgwD8BAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_hgdwFRAFEe-Tlfqg8cZV9A"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_hgwD8xAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_hgwrAhAFEe-Tlfqg8cZV9A" encapsulatedComponent__AssemblyContext="_hgmS_hAFEe-Tlfqg8cZV9A"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_hgx5IxAFEe-Tlfqg8cZV9A" innerProvidedRole_ProvidedDelegationConnector="_hgmS_RAFEe-Tlfqg8cZV9A" outerProvidedRole_ProvidedDelegationConnector="_hgwD8hAFEe-Tlfqg8cZV9A" assemblyContext_ProvidedDelegationConnector="_hgwrAhAFEe-Tlfqg8cZV9A"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hgwD8hAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_hgdwGBAFEe-Tlfqg8cZV9A"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_hgwD9hAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_hgwrBBAFEe-Tlfqg8cZV9A" encapsulatedComponent__AssemblyContext="_hgpWQhAFEe-Tlfqg8cZV9A"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_hgx5IRAFEe-Tlfqg8cZV9A" innerProvidedRole_ProvidedDelegationConnector="_hgpWQRAFEe-Tlfqg8cZV9A" outerProvidedRole_ProvidedDelegationConnector="_hgwD9RAFEe-Tlfqg8cZV9A" assemblyContext_ProvidedDelegationConnector="_hgwrBBAFEe-Tlfqg8cZV9A"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_hgx5JRAFEe-Tlfqg8cZV9A" innerProvidedRole_ProvidedDelegationConnector="_hgpWQBAFEe-Tlfqg8cZV9A" outerProvidedRole_ProvidedDelegationConnector="_hgwD9BAFEe-Tlfqg8cZV9A" assemblyContext_ProvidedDelegationConnector="_hgwrBBAFEe-Tlfqg8cZV9A"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hgwD9BAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_hgdwFhAFEe-Tlfqg8cZV9A"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hgwD9RAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_hgdwGRAFEe-Tlfqg8cZV9A"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_hgwD9xAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_hgwrChAFEe-Tlfqg8cZV9A" encapsulatedComponent__AssemblyContext="_hgtnvBAFEe-Tlfqg8cZV9A"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_hgwD-RAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_hgwrCBAFEe-Tlfqg8cZV9A" encapsulatedComponent__AssemblyContext="_hghadBAFEe-Tlfqg8cZV9A"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_hgx5IhAFEe-Tlfqg8cZV9A" innerProvidedRole_ProvidedDelegationConnector="_hghacxAFEe-Tlfqg8cZV9A" outerProvidedRole_ProvidedDelegationConnector="_hgwD-BAFEe-Tlfqg8cZV9A" assemblyContext_ProvidedDelegationConnector="_hgwrCBAFEe-Tlfqg8cZV9A"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hgwD-BAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_hgdwFxAFEe-Tlfqg8cZV9A"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_hgdwFBAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_hZIZABAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_hZHx8BAFEe-Tlfqg8cZV9A">
      <parameters__OperationSignature dataType__Parameter="_hZF8wBAFEe-Tlfqg8cZV9A" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_hgdwFRAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_hZ1johAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_hZzucBAFEe-Tlfqg8cZV9A">
      <parameters__OperationSignature dataType__Parameter="_hZF8wBAFEe-Tlfqg8cZV9A" parameterName="RegistrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_hgdwFhAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_hZ08lBAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_hZzucBAFEe-Tlfqg8cZV9A">
      <parameters__OperationSignature dataType__Parameter="_hZ08khAFEe-Tlfqg8cZV9A" parameterName="AuthorizationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_hZ08kxAFEe-Tlfqg8cZV9A" parameterName="TeleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_hgdwFxAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_hZ0VgBAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_hZHx8BAFEe-Tlfqg8cZV9A">
      <parameters__OperationSignature dataType__Parameter="_hZzudBAFEe-Tlfqg8cZV9A" parameterName="RegistrationTokenRequest" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_hgdwGBAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_hZ0VgxAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_hZHx8BAFEe-Tlfqg8cZV9A">
      <parameters__OperationSignature dataType__Parameter="_hZF8wBAFEe-Tlfqg8cZV9A" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_hgdwGRAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_hZzucRAFEe-Tlfqg8cZV9A" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_hZzucBAFEe-Tlfqg8cZV9A">
      <parameters__OperationSignature dataType__Parameter="_hZzHYBAFEe-Tlfqg8cZV9A" parameterName="Tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_hZF8wBAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_hZHx8BAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_hZzHYBAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_hZzucBAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_hZzudBAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_hZ08khAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_hZ08kxAFEe-Tlfqg8cZV9A" entityName="app_coronawarn_verification_model_TeleTanType"/>
</repository:Repository>
