<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_hyXZUOTMEe6R55ArMo8fLQ">
  <components__Repository xsi:type="repository:BasicComponent" id="_hyFFd-TMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hyFFduTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_hyFFcOTMEe6R55ArMo8fLQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_hxaXGOTMEe6R55ArMo8fLQ" describedService__SEFF="_hqpAsOTMEe6R55ArMo8fLQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_hxX64OTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxX65-TMEe6R55ArMo8fLQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_hxX65-TMEe6R55ArMo8fLQ" entityName="If Branch" predecessor_AbstractAction="_hxX64OTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxYh4OTMEe6R55ArMo8fLQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxX65OTMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_hxX65uTMEe6R55ArMo8fLQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hxX64eTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxX64uTMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hxX64uTMEe6R55ArMo8fLQ" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_hxX64eTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxX64-TMEe6R55ArMo8fLQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController.generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController.generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hxX64-TMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxX64uTMEe6R55ArMo8fLQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_hxYh4OTMEe6R55ArMo8fLQ" entityName="stopWatch.start()" predecessor_AbstractAction="_hxX65-TMEe6R55ArMo8fLQ" successor_AbstractAction="_hxaXFuTMEe6R55ArMo8fLQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_hxaXFuTMEe6R55ArMo8fLQ" entityName="Switch Branch" predecessor_AbstractAction="_hxYh4OTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxaXF-TMEe6R55ArMo8fLQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxZI9OTMEe6R55ArMo8fLQ">
          <branchBehaviour_BranchTransition id="_hxZI9uTMEe6R55ArMo8fLQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hxYh4eTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxYh4uTMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hxYh4uTMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxYh4eTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxYh4-TMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hxYh4-TMEe6R55ArMo8fLQ" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_hxYh4uTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxYh5OTMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hxYh5OTMEe6R55ArMo8fLQ" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_hxYh4-TMEe6R55ArMo8fLQ" successor_AbstractAction="_hxYh5eTMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hxYh5eTMEe6R55ArMo8fLQ" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_hxYh5OTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxYh5uTMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hxYh5uTMEe6R55ArMo8fLQ" entityName="deferredResult" predecessor_AbstractAction="_hxYh5eTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxZI8OTMEe6R55ArMo8fLQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_hxZI8OTMEe6R55ArMo8fLQ" entityName="If Branch" predecessor_AbstractAction="_hxYh5uTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxZI8eTMEe6R55ArMo8fLQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxYh8OTMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_hxYh8uTMEe6R55ArMo8fLQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hxYh5-TMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxYh6OTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxYh6OTMEe6R55ArMo8fLQ" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_hxYh5-TMEe6R55ArMo8fLQ" successor_AbstractAction="_hxYh6eTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxYh6eTMEe6R55ArMo8fLQ" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_hxYh6OTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxYh6uTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxYh6uTMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxYh6eTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxYh6-TMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxYh6-TMEe6R55ArMo8fLQ" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_hxYh6uTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxYh7OTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxYh7OTMEe6R55ArMo8fLQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_hxYh6-TMEe6R55ArMo8fLQ" successor_AbstractAction="_hxYh7eTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxYh7eTMEe6R55ArMo8fLQ" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_hxYh7OTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxYh7uTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hxYh7uTMEe6R55ArMo8fLQ" entityName="deferredResult" predecessor_AbstractAction="_hxYh7eTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxYh7-TMEe6R55ArMo8fLQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hxYh7-TMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxYh7uTMEe6R55ArMo8fLQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hxZI8eTMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxZI8OTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxZI8uTMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hxZI8uTMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxZI8eTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxZI8-TMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hxZI8-TMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxZI8uTMEe6R55ArMo8fLQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxZwBOTMEe6R55ArMo8fLQ">
          <branchBehaviour_BranchTransition id="_hxZwBuTMEe6R55ArMo8fLQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hxZI9-TMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxZwAOTMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_hxZwAOTMEe6R55ArMo8fLQ" entityName="If Branch" predecessor_AbstractAction="_hxZI9-TMEe6R55ArMo8fLQ" successor_AbstractAction="_hxZwAeTMEe6R55ArMo8fLQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxZJAeTMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_hxZJA-TMEe6R55ArMo8fLQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hxZI-OTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxZI-eTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxZI-eTMEe6R55ArMo8fLQ" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_hxZI-OTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxZI-uTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxZI-uTMEe6R55ArMo8fLQ" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_hxZI-eTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxZI--TMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxZI--TMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxZI-uTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxZI_OTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxZI_OTMEe6R55ArMo8fLQ" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_hxZI--TMEe6R55ArMo8fLQ" successor_AbstractAction="_hxZI_eTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxZI_eTMEe6R55ArMo8fLQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_hxZI_OTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxZI_uTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxZI_uTMEe6R55ArMo8fLQ" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_hxZI_eTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxZI_-TMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hxZI_-TMEe6R55ArMo8fLQ" entityName="deferredResult" predecessor_AbstractAction="_hxZI_uTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxZJAOTMEe6R55ArMo8fLQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hxZJAOTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxZI_-TMEe6R55ArMo8fLQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hxZwAeTMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxZwAOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxZwAuTMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hxZwAuTMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxZwAeTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxZwA-TMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hxZwA-TMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxZwAuTMEe6R55ArMo8fLQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxaXE-TMEe6R55ArMo8fLQ">
          <branchBehaviour_BranchTransition id="_hxaXFeTMEe6R55ArMo8fLQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hxaXEOTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxaXEeTMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hxaXEeTMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxaXEOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxaXEuTMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hxaXEuTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxaXEeTMEe6R55ArMo8fLQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_hxaXF-TMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxaXFuTMEe6R55ArMo8fLQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_hyIIxuTMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hyIIxeTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_hyFFcuTMEe6R55ArMo8fLQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_hxX63uTMEe6R55ArMo8fLQ" describedService__SEFF="_hrriguTMEe6R55ArMo8fLQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_hxWswOTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxX62-TMEe6R55ArMo8fLQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_hxX62-TMEe6R55ArMo8fLQ" entityName="If Branch" predecessor_AbstractAction="_hxWswOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxX63OTMEe6R55ArMo8fLQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxX62OTMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_hxX62uTMEe6R55ArMo8fLQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hxWsweTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxX61uTMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_hxX61uTMEe6R55ArMo8fLQ" entityName="Switch Branch" predecessor_AbstractAction="_hxWsweTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxX61-TMEe6R55ArMo8fLQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxXT0eTMEe6R55ArMo8fLQ">
                <branchBehaviour_BranchTransition id="_hxXT0-TMEe6R55ArMo8fLQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hxWswuTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxXTy-TMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_hxXTy-TMEe6R55ArMo8fLQ" entityName="If Branch" predecessor_AbstractAction="_hxWswuTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxXTzOTMEe6R55ArMo8fLQ">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxXTyOTMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_hxXTyuTMEe6R55ArMo8fLQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_hxXTwOTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxXTxuTMEe6R55ArMo8fLQ"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_hxXTxuTMEe6R55ArMo8fLQ" entityName="If Branch" predecessor_AbstractAction="_hxXTwOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxXTx-TMEe6R55ArMo8fLQ">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxXTw-TMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_hxXTxeTMEe6R55ArMo8fLQ">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_hxXTweTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxXTwuTMEe6R55ArMo8fLQ"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_hxXTwuTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxXTweTMEe6R55ArMo8fLQ"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_hxXTx-TMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxXTxuTMEe6R55ArMo8fLQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxXTzOTMEe6R55ArMo8fLQ" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_hxXTy-TMEe6R55ArMo8fLQ" successor_AbstractAction="_hxXTzeTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxXTzeTMEe6R55ArMo8fLQ" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_hxXTzOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxXTzuTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hxXTzuTMEe6R55ArMo8fLQ" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_hxXTzeTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxXTz-TMEe6R55ArMo8fLQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxXTz-TMEe6R55ArMo8fLQ" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_hxXTzuTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxXT0OTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hxXT0OTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxXTz-TMEe6R55ArMo8fLQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxXT1-TMEe6R55ArMo8fLQ">
                <branchBehaviour_BranchTransition id="_hxX60OTMEe6R55ArMo8fLQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hxXT1OTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxXT1eTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxXT1eTMEe6R55ArMo8fLQ" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_hxXT1OTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxXT1uTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hxXT1uTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxXT1eTMEe6R55ArMo8fLQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxX60-TMEe6R55ArMo8fLQ">
                <branchBehaviour_BranchTransition id="_hxX61eTMEe6R55ArMo8fLQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hxX60eTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxX60uTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hxX60uTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxX60eTMEe6R55ArMo8fLQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hxX61-TMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxX61uTMEe6R55ArMo8fLQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_hxX63OTMEe6R55ArMo8fLQ" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_hxX62-TMEe6R55ArMo8fLQ" successor_AbstractAction="_hxX63eTMEe6R55ArMo8fLQ"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_hxX63eTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxX63OTMEe6R55ArMo8fLQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_hyKlDuTMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hyKlDeTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_hyFFc-TMEe6R55ArMo8fLQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_hxczU-TMEe6R55ArMo8fLQ" describedService__SEFF="_hrswoOTMEe6R55ArMo8fLQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_hxaXGuTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxaXIeTMEe6R55ArMo8fLQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_hxaXIeTMEe6R55ArMo8fLQ" entityName="If Branch" predecessor_AbstractAction="_hxaXGuTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxaXIuTMEe6R55ArMo8fLQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxaXHuTMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_hxaXIOTMEe6R55ArMo8fLQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hxaXG-TMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxaXHOTMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hxaXHOTMEe6R55ArMo8fLQ" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_hxaXG-TMEe6R55ArMo8fLQ" successor_AbstractAction="_hxaXHeTMEe6R55ArMo8fLQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hxaXHeTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxaXHOTMEe6R55ArMo8fLQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_hxaXIuTMEe6R55ArMo8fLQ" entityName="stopWatch.start()" predecessor_AbstractAction="_hxaXIeTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxczUOTMEe6R55ArMo8fLQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_hxczUOTMEe6R55ArMo8fLQ" entityName="If Branch" predecessor_AbstractAction="_hxaXIuTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxczUeTMEe6R55ArMo8fLQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxcMUOTMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_hxcMUuTMEe6R55ArMo8fLQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hxaXI-TMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxcMTuTMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_hxcMTuTMEe6R55ArMo8fLQ" entityName="Switch Branch" predecessor_AbstractAction="_hxaXI-TMEe6R55ArMo8fLQ" successor_AbstractAction="_hxcMT-TMEe6R55ArMo8fLQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxblN-TMEe6R55ArMo8fLQ">
                <branchBehaviour_BranchTransition id="_hxblOeTMEe6R55ArMo8fLQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hxaXJOTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxa-IOTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxa-IOTMEe6R55ArMo8fLQ" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_hxaXJOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxa-LOTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_hxa-LOTMEe6R55ArMo8fLQ" entityName="If Branch" predecessor_AbstractAction="_hxa-IOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxa-LeTMEe6R55ArMo8fLQ">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxa-KeTMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_hxa-K-TMEe6R55ArMo8fLQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_hxa-IeTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxa-J-TMEe6R55ArMo8fLQ"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_hxa-J-TMEe6R55ArMo8fLQ" entityName="If Branch" predecessor_AbstractAction="_hxa-IeTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxa-KOTMEe6R55ArMo8fLQ">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxa-JOTMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_hxa-JuTMEe6R55ArMo8fLQ">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_hxa-IuTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxa-I-TMEe6R55ArMo8fLQ"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_hxa-I-TMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxa-IuTMEe6R55ArMo8fLQ"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_hxa-KOTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxa-J-TMEe6R55ArMo8fLQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxa-LeTMEe6R55ArMo8fLQ" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_hxa-LOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxa-LuTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxa-LuTMEe6R55ArMo8fLQ" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_hxa-LeTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxa-L-TMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxa-L-TMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxa-LuTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxa-MOTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxa-MOTMEe6R55ArMo8fLQ" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_hxa-L-TMEe6R55ArMo8fLQ" successor_AbstractAction="_hxa-MeTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxa-MeTMEe6R55ArMo8fLQ" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_hxa-MOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxa-MuTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hxa-MuTMEe6R55ArMo8fLQ" entityName="deferredResult" predecessor_AbstractAction="_hxa-MeTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxblMOTMEe6R55ArMo8fLQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxblMOTMEe6R55ArMo8fLQ" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_hxa-MuTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxblMeTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxblMeTMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxblMOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxblMuTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxblMuTMEe6R55ArMo8fLQ" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_hxblMeTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxblM-TMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxblM-TMEe6R55ArMo8fLQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_hxblMuTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxblNOTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hxblNOTMEe6R55ArMo8fLQ" entityName="deferredResult" predecessor_AbstractAction="_hxblM-TMEe6R55ArMo8fLQ" successor_AbstractAction="_hxblNeTMEe6R55ArMo8fLQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxblNeTMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxblNOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxblNuTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hxblNuTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxblNeTMEe6R55ArMo8fLQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxcMReTMEe6R55ArMo8fLQ">
                <branchBehaviour_BranchTransition id="_hxcMR-TMEe6R55ArMo8fLQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hxblOuTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxblO-TMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxblO-TMEe6R55ArMo8fLQ" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_hxblOuTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxblPOTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxblPOTMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxblO-TMEe6R55ArMo8fLQ" successor_AbstractAction="_hxcMQOTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxcMQOTMEe6R55ArMo8fLQ" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_hxblPOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxcMQeTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxcMQeTMEe6R55ArMo8fLQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_hxcMQOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxcMQuTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hxcMQuTMEe6R55ArMo8fLQ" entityName="deferredResult" predecessor_AbstractAction="_hxcMQeTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxcMQ-TMEe6R55ArMo8fLQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxcMQ-TMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxcMQuTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxcMROTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hxcMROTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxcMQ-TMEe6R55ArMo8fLQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxcMS-TMEe6R55ArMo8fLQ">
                <branchBehaviour_BranchTransition id="_hxcMTeTMEe6R55ArMo8fLQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hxcMSOTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxcMSeTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxcMSeTMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxcMSOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxcMSuTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hxcMSuTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxcMSeTMEe6R55ArMo8fLQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hxcMT-TMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxcMTuTMEe6R55ArMo8fLQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_hxczUeTMEe6R55ArMo8fLQ" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_hxczUOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxczUuTMEe6R55ArMo8fLQ"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_hxczUuTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxczUeTMEe6R55ArMo8fLQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_hyNoUOTMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_hyNoUuTMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hyNoUeTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_hyFFdOTMEe6R55ArMo8fLQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_hxWsvuTMEe6R55ArMo8fLQ" describedService__SEFF="_hrtXsuTMEe6R55ArMo8fLQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_hxU3iOTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxU3j-TMEe6R55ArMo8fLQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_hxU3j-TMEe6R55ArMo8fLQ" entityName="If Branch" predecessor_AbstractAction="_hxU3iOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxU3kOTMEe6R55ArMo8fLQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxU3jOTMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_hxU3juTMEe6R55ArMo8fLQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hxU3ieTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxU3iuTMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hxU3iuTMEe6R55ArMo8fLQ" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_hxU3ieTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxU3i-TMEe6R55ArMo8fLQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hxU3i-TMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxU3iuTMEe6R55ArMo8fLQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_hxU3kOTMEe6R55ArMo8fLQ" entityName="stopWatch.start()" predecessor_AbstractAction="_hxU3j-TMEe6R55ArMo8fLQ" successor_AbstractAction="_hxWsvOTMEe6R55ArMo8fLQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_hxWsvOTMEe6R55ArMo8fLQ" entityName="If Branch" predecessor_AbstractAction="_hxU3kOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxWsveTMEe6R55ArMo8fLQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxWsueTMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_hxWsu-TMEe6R55ArMo8fLQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hxU3keTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxWst-TMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_hxWst-TMEe6R55ArMo8fLQ" entityName="If Branch" predecessor_AbstractAction="_hxU3keTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxWsuOTMEe6R55ArMo8fLQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxWstOTMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_hxWstuTMEe6R55ArMo8fLQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hxU3kuTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxWFseTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_hxWFseTMEe6R55ArMo8fLQ" entityName="Switch Branch" predecessor_AbstractAction="_hxU3kuTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxWFsuTMEe6R55ArMo8fLQ">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxWFouTMEe6R55ArMo8fLQ">
                      <branchBehaviour_BranchTransition id="_hxWFpOTMEe6R55ArMo8fLQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_hxVekOTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxVel-TMEe6R55ArMo8fLQ"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_hxVel-TMEe6R55ArMo8fLQ" entityName="If Branch" predecessor_AbstractAction="_hxVekOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxWFoOTMEe6R55ArMo8fLQ">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxVelOTMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_hxVeluTMEe6R55ArMo8fLQ">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_hxVekeTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxVekuTMEe6R55ArMo8fLQ"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_hxVekuTMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxVekeTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxVek-TMEe6R55ArMo8fLQ"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_hxVek-TMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxVekuTMEe6R55ArMo8fLQ"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_hxWFoOTMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxVel-TMEe6R55ArMo8fLQ" successor_AbstractAction="_hxWFoeTMEe6R55ArMo8fLQ"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_hxWFoeTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxWFoOTMEe6R55ArMo8fLQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxWFqOTMEe6R55ArMo8fLQ">
                      <branchBehaviour_BranchTransition id="_hxWFquTMEe6R55ArMo8fLQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_hxWFpeTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxWFpuTMEe6R55ArMo8fLQ"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_hxWFpuTMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxWFpeTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxWFp-TMEe6R55ArMo8fLQ"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_hxWFp-TMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxWFpuTMEe6R55ArMo8fLQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxWFruTMEe6R55ArMo8fLQ">
                      <branchBehaviour_BranchTransition id="_hxWFsOTMEe6R55ArMo8fLQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_hxWFq-TMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxWFrOTMEe6R55ArMo8fLQ"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_hxWFrOTMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxWFq-TMEe6R55ArMo8fLQ" successor_AbstractAction="_hxWFreTMEe6R55ArMo8fLQ"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_hxWFreTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxWFrOTMEe6R55ArMo8fLQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxWFsuTMEe6R55ArMo8fLQ" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_hxWFseTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxWFs-TMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxWFs-TMEe6R55ArMo8fLQ" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_hxWFsuTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxWFtOTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxWFtOTMEe6R55ArMo8fLQ" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_hxWFs-TMEe6R55ArMo8fLQ" successor_AbstractAction="_hxWFteTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxWFteTMEe6R55ArMo8fLQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_hxWFtOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxWFtuTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxWFtuTMEe6R55ArMo8fLQ" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_hxWFteTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxWssOTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxWssOTMEe6R55ArMo8fLQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_hxWFtuTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxWsseTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxWsseTMEe6R55ArMo8fLQ" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_hxWssOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxWssuTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hxWssuTMEe6R55ArMo8fLQ" entityName="deferredResult" predecessor_AbstractAction="_hxWsseTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxWss-TMEe6R55ArMo8fLQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hxWss-TMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxWssuTMEe6R55ArMo8fLQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hxWsuOTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxWst-TMEe6R55ArMo8fLQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_hxWsveTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxWsvOTMEe6R55ArMo8fLQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_hyPdj-TMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hyPdjeTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_hyFFdeTMEe6R55ArMo8fLQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hyPdjuTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_hyFFceTMEe6R55ArMo8fLQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_hxRNIuTMEe6R55ArMo8fLQ" describedService__SEFF="_hrswpOTMEe6R55ArMo8fLQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_hsIOceTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxRNIOTMEe6R55ArMo8fLQ"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hxRNIOTMEe6R55ArMo8fLQ" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_hsIOceTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxRNIeTMEe6R55ArMo8fLQ">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_hxRNIeTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxRNIOTMEe6R55ArMo8fLQ"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_hxU3huTMEe6R55ArMo8fLQ" describedService__SEFF="_hrsJlOTMEe6R55ArMo8fLQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_hxRNJOTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxUQcOTMEe6R55ArMo8fLQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_hxUQcOTMEe6R55ArMo8fLQ" entityName="If Branch" predecessor_AbstractAction="_hxRNJOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxU3hOTMEe6R55ArMo8fLQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxTCUOTMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_hxTpYOTMEe6R55ArMo8fLQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hxR0MOTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxSbQOTMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hxSbQOTMEe6R55ArMo8fLQ" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_hxR0MOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxSbQeTMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hxSbQeTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxSbQOTMEe6R55ArMo8fLQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxTpZOTMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_hxTpZuTMEe6R55ArMo8fLQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hxTpYeTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxTpYuTMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_hxTpYuTMEe6R55ArMo8fLQ" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_hxTpYeTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxTpY-TMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hxTpY-TMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxTpYuTMEe6R55ArMo8fLQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_hxU3hOTMEe6R55ArMo8fLQ" entityName="If Branch" predecessor_AbstractAction="_hxUQcOTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxU3heTMEe6R55ArMo8fLQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxU3geTMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_hxU3g-TMEe6R55ArMo8fLQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_hxUQceTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxUQfuTMEe6R55ArMo8fLQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_hxUQfuTMEe6R55ArMo8fLQ" entityName="If Branch" predecessor_AbstractAction="_hxUQceTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxU3gOTMEe6R55ArMo8fLQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxUQduTMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_hxUQeOTMEe6R55ArMo8fLQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hxUQcuTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxUQc-TMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_hxUQc-TMEe6R55ArMo8fLQ" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_hxUQcuTMEe6R55ArMo8fLQ" successor_AbstractAction="_hxUQdOTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_hxUQdOTMEe6R55ArMo8fLQ" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_hxUQc-TMEe6R55ArMo8fLQ" successor_AbstractAction="_hxUQdeTMEe6R55ArMo8fLQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hxUQdeTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxUQdOTMEe6R55ArMo8fLQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_hxUQe-TMEe6R55ArMo8fLQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_hxUQfeTMEe6R55ArMo8fLQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_hxUQeeTMEe6R55ArMo8fLQ" entityName="Start Action" successor_AbstractAction="_hxUQeuTMEe6R55ArMo8fLQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_hxUQeuTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxUQeeTMEe6R55ArMo8fLQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_hxU3gOTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxUQfuTMEe6R55ArMo8fLQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_hxU3heTMEe6R55ArMo8fLQ" entityName="Stop Action" predecessor_AbstractAction="_hxU3hOTMEe6R55ArMo8fLQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_hyWLMeTMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_hyWySOTMEe6R55ArMo8fLQ" encapsulatedComponent__AssemblyContext="_hyIIxuTMEe6R55ArMo8fLQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_hyYAYuTMEe6R55ArMo8fLQ" innerProvidedRole_ProvidedDelegationConnector="_hyIIxeTMEe6R55ArMo8fLQ" outerProvidedRole_ProvidedDelegationConnector="_hyWLMOTMEe6R55ArMo8fLQ" assemblyContext_ProvidedDelegationConnector="_hyWySOTMEe6R55ArMo8fLQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hyWLMOTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_hyFFcuTMEe6R55ArMo8fLQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_hyWLMuTMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_hyWyQuTMEe6R55ArMo8fLQ" encapsulatedComponent__AssemblyContext="_hyNoUOTMEe6R55ArMo8fLQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_hyWLNOTMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_hyWyQOTMEe6R55ArMo8fLQ" encapsulatedComponent__AssemblyContext="_hyNoUuTMEe6R55ArMo8fLQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_hyYAY-TMEe6R55ArMo8fLQ" innerProvidedRole_ProvidedDelegationConnector="_hyNoUeTMEe6R55ArMo8fLQ" outerProvidedRole_ProvidedDelegationConnector="_hyWLM-TMEe6R55ArMo8fLQ" assemblyContext_ProvidedDelegationConnector="_hyWyQOTMEe6R55ArMo8fLQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hyWLM-TMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_hyFFdOTMEe6R55ArMo8fLQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_hyWLNuTMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_hyWyROTMEe6R55ArMo8fLQ" encapsulatedComponent__AssemblyContext="_hyFFd-TMEe6R55ArMo8fLQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_hyYAYeTMEe6R55ArMo8fLQ" innerProvidedRole_ProvidedDelegationConnector="_hyFFduTMEe6R55ArMo8fLQ" outerProvidedRole_ProvidedDelegationConnector="_hyWLNeTMEe6R55ArMo8fLQ" assemblyContext_ProvidedDelegationConnector="_hyWyROTMEe6R55ArMo8fLQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hyWLNeTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_hyFFcOTMEe6R55ArMo8fLQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_hyWLOOTMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_hyWyRuTMEe6R55ArMo8fLQ" encapsulatedComponent__AssemblyContext="_hyKlDuTMEe6R55ArMo8fLQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_hyYAZOTMEe6R55ArMo8fLQ" innerProvidedRole_ProvidedDelegationConnector="_hyKlDeTMEe6R55ArMo8fLQ" outerProvidedRole_ProvidedDelegationConnector="_hyWLN-TMEe6R55ArMo8fLQ" assemblyContext_ProvidedDelegationConnector="_hyWyRuTMEe6R55ArMo8fLQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hyWLN-TMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_hyFFc-TMEe6R55ArMo8fLQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_hyWLO-TMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_hyWySuTMEe6R55ArMo8fLQ" encapsulatedComponent__AssemblyContext="_hyPdj-TMEe6R55ArMo8fLQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_hyYAYOTMEe6R55ArMo8fLQ" innerProvidedRole_ProvidedDelegationConnector="_hyPdjeTMEe6R55ArMo8fLQ" outerProvidedRole_ProvidedDelegationConnector="_hyWLOuTMEe6R55ArMo8fLQ" assemblyContext_ProvidedDelegationConnector="_hyWySuTMEe6R55ArMo8fLQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_hyYAZeTMEe6R55ArMo8fLQ" innerProvidedRole_ProvidedDelegationConnector="_hyPdjuTMEe6R55ArMo8fLQ" outerProvidedRole_ProvidedDelegationConnector="_hyWLOeTMEe6R55ArMo8fLQ" assemblyContext_ProvidedDelegationConnector="_hyWySuTMEe6R55ArMo8fLQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hyWLOeTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_hyFFceTMEe6R55ArMo8fLQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_hyWLOuTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_hyFFdeTMEe6R55ArMo8fLQ"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_hyFFcOTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_hqpAsOTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_hqoZoOTMEe6R55ArMo8fLQ">
      <parameters__OperationSignature dataType__Parameter="_hqmkcOTMEe6R55ArMo8fLQ" parameterName="RegistrationTokenRequest" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_hyFFceTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_hrsJlOTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_hrrigeTMEe6R55ArMo8fLQ">
      <parameters__OperationSignature dataType__Parameter="_hrsJkuTMEe6R55ArMo8fLQ" parameterName="AuthorizationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_hrsJk-TMEe6R55ArMo8fLQ" parameterName="TeleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_hyFFcuTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_hrriguTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_hrrigeTMEe6R55ArMo8fLQ">
      <parameters__OperationSignature dataType__Parameter="_hrrigOTMEe6R55ArMo8fLQ" parameterName="RegistrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_hyFFc-TMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_hrswoOTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_hqoZoOTMEe6R55ArMo8fLQ">
      <parameters__OperationSignature dataType__Parameter="_hrrigOTMEe6R55ArMo8fLQ" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_hyFFdOTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_hrtXsuTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_hqoZoOTMEe6R55ArMo8fLQ">
      <parameters__OperationSignature dataType__Parameter="_hrrigOTMEe6R55ArMo8fLQ" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_hyFFdeTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_hrswpOTMEe6R55ArMo8fLQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_hrrigeTMEe6R55ArMo8fLQ">
      <parameters__OperationSignature dataType__Parameter="_hrswo-TMEe6R55ArMo8fLQ" parameterName="Tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_hqmkcOTMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_hqoZoOTMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_hrrigOTMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_hrrigeTMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_hrsJkuTMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_hrsJk-TMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_hrswo-TMEe6R55ArMo8fLQ" entityName="app_coronawarn_verification_model_Tan"/>
</repository:Repository>
