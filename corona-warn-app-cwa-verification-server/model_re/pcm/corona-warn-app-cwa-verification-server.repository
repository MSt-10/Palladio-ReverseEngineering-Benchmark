<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_ldwFYmNREe-7SakFEA0Yfw">
  <components__Repository xsi:type="repository:BasicComponent" id="_lddxjWNREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_lddxjGNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_lddximNREe-7SakFEA0Yfw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_lc5w0WNREe-7SakFEA0Yfw" describedService__SEFF="_lWQWQGNREe-7SakFEA0Yfw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_lc3UpGNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc37pmNREe-7SakFEA0Yfw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_lc37pmNREe-7SakFEA0Yfw" entityName="If Branch" predecessor_AbstractAction="_lc3UpGNREe-7SakFEA0Yfw" successor_AbstractAction="_lc37p2NREe-7SakFEA0Yfw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc37o2NREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_lc37pWNREe-7SakFEA0Yfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lc37oGNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc37oWNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lc37oWNREe-7SakFEA0Yfw" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_lc37oGNREe-7SakFEA0Yfw" successor_AbstractAction="_lc37omNREe-7SakFEA0Yfw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lc37omNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc37oWNREe-7SakFEA0Yfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_lc37p2NREe-7SakFEA0Yfw" entityName="stopWatch.start()" predecessor_AbstractAction="_lc37pmNREe-7SakFEA0Yfw" successor_AbstractAction="_lc5JzmNREe-7SakFEA0Yfw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_lc5JzmNREe-7SakFEA0Yfw" entityName="If Branch" predecessor_AbstractAction="_lc37p2NREe-7SakFEA0Yfw" successor_AbstractAction="_lc5w0GNREe-7SakFEA0Yfw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc5Jy2NREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_lc5JzWNREe-7SakFEA0Yfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lc37qGNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc5JyWNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_lc5JyWNREe-7SakFEA0Yfw" entityName="If Branch" predecessor_AbstractAction="_lc37qGNREe-7SakFEA0Yfw" successor_AbstractAction="_lc5JymNREe-7SakFEA0Yfw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc5JxmNREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_lc5JyGNREe-7SakFEA0Yfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lc37qWNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc4iv2NREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_lc4iv2NREe-7SakFEA0Yfw" entityName="Switch Branch" predecessor_AbstractAction="_lc37qWNREe-7SakFEA0Yfw" successor_AbstractAction="_lc4iwGNREe-7SakFEA0Yfw">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc4isGNREe-7SakFEA0Yfw">
                      <branchBehaviour_BranchTransition id="_lc4ismNREe-7SakFEA0Yfw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_lc37qmNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc37sWNREe-7SakFEA0Yfw"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_lc37sWNREe-7SakFEA0Yfw" entityName="If Branch" predecessor_AbstractAction="_lc37qmNREe-7SakFEA0Yfw" successor_AbstractAction="_lc37smNREe-7SakFEA0Yfw">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc37rmNREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_lc37sGNREe-7SakFEA0Yfw">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_lc37q2NREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc37rGNREe-7SakFEA0Yfw"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_lc37rGNREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lc37q2NREe-7SakFEA0Yfw" successor_AbstractAction="_lc37rWNREe-7SakFEA0Yfw"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_lc37rWNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc37rGNREe-7SakFEA0Yfw"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_lc37smNREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lc37sWNREe-7SakFEA0Yfw" successor_AbstractAction="_lc37s2NREe-7SakFEA0Yfw"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_lc37s2NREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc37smNREe-7SakFEA0Yfw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc4itmNREe-7SakFEA0Yfw">
                      <branchBehaviour_BranchTransition id="_lc4iuGNREe-7SakFEA0Yfw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_lc4is2NREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc4itGNREe-7SakFEA0Yfw"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_lc4itGNREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lc4is2NREe-7SakFEA0Yfw" successor_AbstractAction="_lc4itWNREe-7SakFEA0Yfw"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_lc4itWNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc4itGNREe-7SakFEA0Yfw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc4ivGNREe-7SakFEA0Yfw">
                      <branchBehaviour_BranchTransition id="_lc4ivmNREe-7SakFEA0Yfw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_lc4iuWNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc4iumNREe-7SakFEA0Yfw"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_lc4iumNREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lc4iuWNREe-7SakFEA0Yfw" successor_AbstractAction="_lc4iu2NREe-7SakFEA0Yfw"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_lc4iu2NREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc4iumNREe-7SakFEA0Yfw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc4iwGNREe-7SakFEA0Yfw" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_lc4iv2NREe-7SakFEA0Yfw" successor_AbstractAction="_lc4iwWNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc4iwWNREe-7SakFEA0Yfw" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_lc4iwGNREe-7SakFEA0Yfw" successor_AbstractAction="_lc4iwmNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc4iwmNREe-7SakFEA0Yfw" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_lc4iwWNREe-7SakFEA0Yfw" successor_AbstractAction="_lc5JwGNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc5JwGNREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lc4iwmNREe-7SakFEA0Yfw" successor_AbstractAction="_lc5JwWNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc5JwWNREe-7SakFEA0Yfw" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_lc5JwGNREe-7SakFEA0Yfw" successor_AbstractAction="_lc5JwmNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc5JwmNREe-7SakFEA0Yfw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_lc5JwWNREe-7SakFEA0Yfw" successor_AbstractAction="_lc5Jw2NREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc5Jw2NREe-7SakFEA0Yfw" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_lc5JwmNREe-7SakFEA0Yfw" successor_AbstractAction="_lc5JxGNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lc5JxGNREe-7SakFEA0Yfw" entityName="deferredResult" predecessor_AbstractAction="_lc5Jw2NREe-7SakFEA0Yfw" successor_AbstractAction="_lc5JxWNREe-7SakFEA0Yfw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lc5JxWNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc5JxGNREe-7SakFEA0Yfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lc5JymNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc5JyWNREe-7SakFEA0Yfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_lc5w0GNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc5JzmNREe-7SakFEA0Yfw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_ldg01GNREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ldg002NREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_lddxiWNREe-7SakFEA0Yfw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_lcycGGNREe-7SakFEA0Yfw" describedService__SEFF="_lXByUGNREe-7SakFEA0Yfw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_lXaM0WNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lcuxsWNREe-7SakFEA0Yfw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_lcuxsWNREe-7SakFEA0Yfw" entityName="If Branch" predecessor_AbstractAction="_lXaM0WNREe-7SakFEA0Yfw" successor_AbstractAction="_lcv_0GNREe-7SakFEA0Yfw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lcuKoGNREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_lcuxsGNREe-7SakFEA0Yfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lXba8GNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lctjkGNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lctjkGNREe-7SakFEA0Yfw" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_lXba8GNREe-7SakFEA0Yfw" successor_AbstractAction="_lctjkWNREe-7SakFEA0Yfw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController_generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController_generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lctjkWNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lctjkGNREe-7SakFEA0Yfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_lcv_0GNREe-7SakFEA0Yfw" entityName="stopWatch.start()" predecessor_AbstractAction="_lcuxsWNREe-7SakFEA0Yfw" successor_AbstractAction="_lcycFmNREe-7SakFEA0Yfw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_lcycFmNREe-7SakFEA0Yfw" entityName="Switch Branch" predecessor_AbstractAction="_lcv_0GNREe-7SakFEA0Yfw" successor_AbstractAction="_lcycF2NREe-7SakFEA0Yfw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lcxN-WNREe-7SakFEA0Yfw">
          <branchBehaviour_BranchTransition id="_lcxN-2NREe-7SakFEA0Yfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lcv_0WNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lcv_0mNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lcv_0mNREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lcv_0WNREe-7SakFEA0Yfw" successor_AbstractAction="_lcwm4GNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lcwm4GNREe-7SakFEA0Yfw" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_lcv_0mNREe-7SakFEA0Yfw" successor_AbstractAction="_lcwm4WNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lcwm4WNREe-7SakFEA0Yfw" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_lcwm4GNREe-7SakFEA0Yfw" successor_AbstractAction="_lcwm4mNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lcwm4mNREe-7SakFEA0Yfw" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_lcwm4WNREe-7SakFEA0Yfw" successor_AbstractAction="_lcwm42NREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lcwm42NREe-7SakFEA0Yfw" entityName="deferredResult" predecessor_AbstractAction="_lcwm4mNREe-7SakFEA0Yfw" successor_AbstractAction="_lcxN9WNREe-7SakFEA0Yfw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_lcxN9WNREe-7SakFEA0Yfw" entityName="If Branch" predecessor_AbstractAction="_lcwm42NREe-7SakFEA0Yfw" successor_AbstractAction="_lcxN9mNREe-7SakFEA0Yfw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lcxN8mNREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_lcxN9GNREe-7SakFEA0Yfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lcwm5GNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lcwm5WNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lcwm5WNREe-7SakFEA0Yfw" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_lcwm5GNREe-7SakFEA0Yfw" successor_AbstractAction="_lcwm5mNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lcwm5mNREe-7SakFEA0Yfw" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_lcwm5WNREe-7SakFEA0Yfw" successor_AbstractAction="_lcwm52NREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lcwm52NREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lcwm5mNREe-7SakFEA0Yfw" successor_AbstractAction="_lcwm6GNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lcwm6GNREe-7SakFEA0Yfw" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_lcwm52NREe-7SakFEA0Yfw" successor_AbstractAction="_lcwm6WNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lcwm6WNREe-7SakFEA0Yfw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_lcwm6GNREe-7SakFEA0Yfw" successor_AbstractAction="_lcwm6mNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lcwm6mNREe-7SakFEA0Yfw" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_lcwm6WNREe-7SakFEA0Yfw" successor_AbstractAction="_lcxN8GNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lcxN8GNREe-7SakFEA0Yfw" entityName="deferredResult" predecessor_AbstractAction="_lcwm6mNREe-7SakFEA0Yfw" successor_AbstractAction="_lcxN8WNREe-7SakFEA0Yfw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lcxN8WNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lcxN8GNREe-7SakFEA0Yfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lcxN9mNREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lcxN9WNREe-7SakFEA0Yfw" successor_AbstractAction="_lcxN92NREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lcxN92NREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lcxN9mNREe-7SakFEA0Yfw" successor_AbstractAction="_lcxN-GNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lcxN-GNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lcxN92NREe-7SakFEA0Yfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lcx1DmNREe-7SakFEA0Yfw">
          <branchBehaviour_BranchTransition id="_lcx1EGNREe-7SakFEA0Yfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lcxN_GNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lcx1CmNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_lcx1CmNREe-7SakFEA0Yfw" entityName="If Branch" predecessor_AbstractAction="_lcxN_GNREe-7SakFEA0Yfw" successor_AbstractAction="_lcx1C2NREe-7SakFEA0Yfw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lcx1B2NREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_lcx1CWNREe-7SakFEA0Yfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lcxN_WNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lcxN_mNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lcxN_mNREe-7SakFEA0Yfw" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_lcxN_WNREe-7SakFEA0Yfw" successor_AbstractAction="_lcx1AGNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lcx1AGNREe-7SakFEA0Yfw" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_lcxN_mNREe-7SakFEA0Yfw" successor_AbstractAction="_lcx1AWNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lcx1AWNREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lcx1AGNREe-7SakFEA0Yfw" successor_AbstractAction="_lcx1AmNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lcx1AmNREe-7SakFEA0Yfw" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_lcx1AWNREe-7SakFEA0Yfw" successor_AbstractAction="_lcx1A2NREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lcx1A2NREe-7SakFEA0Yfw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_lcx1AmNREe-7SakFEA0Yfw" successor_AbstractAction="_lcx1BGNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lcx1BGNREe-7SakFEA0Yfw" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_lcx1A2NREe-7SakFEA0Yfw" successor_AbstractAction="_lcx1BWNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lcx1BWNREe-7SakFEA0Yfw" entityName="deferredResult" predecessor_AbstractAction="_lcx1BGNREe-7SakFEA0Yfw" successor_AbstractAction="_lcx1BmNREe-7SakFEA0Yfw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lcx1BmNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lcx1BWNREe-7SakFEA0Yfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lcx1C2NREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lcx1CmNREe-7SakFEA0Yfw" successor_AbstractAction="_lcx1DGNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lcx1DGNREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lcx1C2NREe-7SakFEA0Yfw" successor_AbstractAction="_lcx1DWNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lcx1DWNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lcx1DGNREe-7SakFEA0Yfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lcycE2NREe-7SakFEA0Yfw">
          <branchBehaviour_BranchTransition id="_lcycFWNREe-7SakFEA0Yfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lcycEGNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lcycEWNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lcycEWNREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lcycEGNREe-7SakFEA0Yfw" successor_AbstractAction="_lcycEmNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lcycEmNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lcycEWNREe-7SakFEA0Yfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_lcycF2NREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lcycFmNREe-7SakFEA0Yfw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_ldiqDmNREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ldiqDWNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_lddxiGNREe-7SakFEA0Yfw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_lczqQGNREe-7SakFEA0Yfw" describedService__SEFF="_lXBLQmNREe-7SakFEA0Yfw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_lcycGmNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lczqPWNREe-7SakFEA0Yfw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_lczqPWNREe-7SakFEA0Yfw" entityName="If Branch" predecessor_AbstractAction="_lcycGmNREe-7SakFEA0Yfw" successor_AbstractAction="_lczqPmNREe-7SakFEA0Yfw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lczqOmNREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_lczqPGNREe-7SakFEA0Yfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lcycG2NREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lczqOGNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_lczqOGNREe-7SakFEA0Yfw" entityName="Switch Branch" predecessor_AbstractAction="_lcycG2NREe-7SakFEA0Yfw" successor_AbstractAction="_lczqOWNREe-7SakFEA0Yfw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lczDKmNREe-7SakFEA0Yfw">
                <branchBehaviour_BranchTransition id="_lczDLGNREe-7SakFEA0Yfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lcycHGNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lczDJGNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_lczDJGNREe-7SakFEA0Yfw" entityName="If Branch" predecessor_AbstractAction="_lcycHGNREe-7SakFEA0Yfw" successor_AbstractAction="_lczDJWNREe-7SakFEA0Yfw">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lczDIWNREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_lczDI2NREe-7SakFEA0Yfw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_lcycHWNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lcycI2NREe-7SakFEA0Yfw"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_lcycI2NREe-7SakFEA0Yfw" entityName="If Branch" predecessor_AbstractAction="_lcycHWNREe-7SakFEA0Yfw" successor_AbstractAction="_lczDIGNREe-7SakFEA0Yfw">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lcycIGNREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_lcycImNREe-7SakFEA0Yfw">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_lcycHmNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lcycH2NREe-7SakFEA0Yfw"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_lcycH2NREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lcycHmNREe-7SakFEA0Yfw"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_lczDIGNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lcycI2NREe-7SakFEA0Yfw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lczDJWNREe-7SakFEA0Yfw" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_lczDJGNREe-7SakFEA0Yfw" successor_AbstractAction="_lczDJmNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lczDJmNREe-7SakFEA0Yfw" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_lczDJWNREe-7SakFEA0Yfw" successor_AbstractAction="_lczDJ2NREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lczDJ2NREe-7SakFEA0Yfw" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_lczDJmNREe-7SakFEA0Yfw" successor_AbstractAction="_lczDKGNREe-7SakFEA0Yfw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lczDKGNREe-7SakFEA0Yfw" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_lczDJ2NREe-7SakFEA0Yfw" successor_AbstractAction="_lczDKWNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lczDKWNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lczDKGNREe-7SakFEA0Yfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lczqMGNREe-7SakFEA0Yfw">
                <branchBehaviour_BranchTransition id="_lczqMmNREe-7SakFEA0Yfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lczDLWNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lczDLmNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lczDLmNREe-7SakFEA0Yfw" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_lczDLWNREe-7SakFEA0Yfw" successor_AbstractAction="_lczDL2NREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lczDL2NREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lczDLmNREe-7SakFEA0Yfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lczqNWNREe-7SakFEA0Yfw">
                <branchBehaviour_BranchTransition id="_lczqN2NREe-7SakFEA0Yfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lczqM2NREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lczqNGNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lczqNGNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lczqM2NREe-7SakFEA0Yfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lczqOWNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lczqOGNREe-7SakFEA0Yfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_lczqPmNREe-7SakFEA0Yfw" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_lczqPWNREe-7SakFEA0Yfw" successor_AbstractAction="_lczqP2NREe-7SakFEA0Yfw"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_lczqP2NREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lczqPmNREe-7SakFEA0Yfw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_ldltUWNREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ldltUGNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_lddxhmNREe-7SakFEA0Yfw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_lc2GeWNREe-7SakFEA0Yfw" describedService__SEFF="_lW_9IGNREe-7SakFEA0Yfw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_lczqQmNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc0RQ2NREe-7SakFEA0Yfw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_lc0RQ2NREe-7SakFEA0Yfw" entityName="If Branch" predecessor_AbstractAction="_lczqQmNREe-7SakFEA0Yfw" successor_AbstractAction="_lc0RRGNREe-7SakFEA0Yfw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc0RQGNREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_lc0RQmNREe-7SakFEA0Yfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lczqQ2NREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lczqRGNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lczqRGNREe-7SakFEA0Yfw" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_lczqQ2NREe-7SakFEA0Yfw" successor_AbstractAction="_lczqRWNREe-7SakFEA0Yfw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lczqRWNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lczqRGNREe-7SakFEA0Yfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_lc0RRGNREe-7SakFEA0Yfw" entityName="stopWatch.start()" predecessor_AbstractAction="_lc0RQ2NREe-7SakFEA0Yfw" successor_AbstractAction="_lc2GdmNREe-7SakFEA0Yfw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_lc2GdmNREe-7SakFEA0Yfw" entityName="If Branch" predecessor_AbstractAction="_lc0RRGNREe-7SakFEA0Yfw" successor_AbstractAction="_lc2Gd2NREe-7SakFEA0Yfw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc2Gc2NREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_lc2GdWNREe-7SakFEA0Yfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lc0RRWNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc2GcWNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_lc2GcWNREe-7SakFEA0Yfw" entityName="Switch Branch" predecessor_AbstractAction="_lc0RRWNREe-7SakFEA0Yfw" successor_AbstractAction="_lc2GcmNREe-7SakFEA0Yfw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc04WmNREe-7SakFEA0Yfw">
                <branchBehaviour_BranchTransition id="_lc04XGNREe-7SakFEA0Yfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lc0RRmNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc0RR2NREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc0RR2NREe-7SakFEA0Yfw" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_lc0RRmNREe-7SakFEA0Yfw" successor_AbstractAction="_lc0RU2NREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_lc0RU2NREe-7SakFEA0Yfw" entityName="If Branch" predecessor_AbstractAction="_lc0RR2NREe-7SakFEA0Yfw" successor_AbstractAction="_lc0RVGNREe-7SakFEA0Yfw">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc0RUGNREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_lc0RUmNREe-7SakFEA0Yfw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_lc0RSGNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc0RTmNREe-7SakFEA0Yfw"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_lc0RTmNREe-7SakFEA0Yfw" entityName="If Branch" predecessor_AbstractAction="_lc0RSGNREe-7SakFEA0Yfw" successor_AbstractAction="_lc0RT2NREe-7SakFEA0Yfw">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc0RS2NREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_lc0RTWNREe-7SakFEA0Yfw">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_lc0RSWNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc0RSmNREe-7SakFEA0Yfw"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_lc0RSmNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc0RSWNREe-7SakFEA0Yfw"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_lc0RT2NREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc0RTmNREe-7SakFEA0Yfw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc0RVGNREe-7SakFEA0Yfw" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_lc0RU2NREe-7SakFEA0Yfw" successor_AbstractAction="_lc0RVWNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc0RVWNREe-7SakFEA0Yfw" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_lc0RVGNREe-7SakFEA0Yfw" successor_AbstractAction="_lc0RVmNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc0RVmNREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lc0RVWNREe-7SakFEA0Yfw" successor_AbstractAction="_lc04UGNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc04UGNREe-7SakFEA0Yfw" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_lc0RVmNREe-7SakFEA0Yfw" successor_AbstractAction="_lc04UWNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc04UWNREe-7SakFEA0Yfw" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_lc04UGNREe-7SakFEA0Yfw" successor_AbstractAction="_lc04UmNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lc04UmNREe-7SakFEA0Yfw" entityName="deferredResult" predecessor_AbstractAction="_lc04UWNREe-7SakFEA0Yfw" successor_AbstractAction="_lc04U2NREe-7SakFEA0Yfw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc04U2NREe-7SakFEA0Yfw" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_lc04UmNREe-7SakFEA0Yfw" successor_AbstractAction="_lc04VGNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc04VGNREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lc04U2NREe-7SakFEA0Yfw" successor_AbstractAction="_lc04VWNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc04VWNREe-7SakFEA0Yfw" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_lc04VGNREe-7SakFEA0Yfw" successor_AbstractAction="_lc04VmNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc04VmNREe-7SakFEA0Yfw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_lc04VWNREe-7SakFEA0Yfw" successor_AbstractAction="_lc04V2NREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lc04V2NREe-7SakFEA0Yfw" entityName="deferredResult" predecessor_AbstractAction="_lc04VmNREe-7SakFEA0Yfw" successor_AbstractAction="_lc04WGNREe-7SakFEA0Yfw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc04WGNREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lc04V2NREe-7SakFEA0Yfw" successor_AbstractAction="_lc04WWNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lc04WWNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc04WGNREe-7SakFEA0Yfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc1faGNREe-7SakFEA0Yfw">
                <branchBehaviour_BranchTransition id="_lc1famNREe-7SakFEA0Yfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lc1fYGNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc1fYWNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc1fYWNREe-7SakFEA0Yfw" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_lc1fYGNREe-7SakFEA0Yfw" successor_AbstractAction="_lc1fYmNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc1fYmNREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lc1fYWNREe-7SakFEA0Yfw" successor_AbstractAction="_lc1fY2NREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc1fY2NREe-7SakFEA0Yfw" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_lc1fYmNREe-7SakFEA0Yfw" successor_AbstractAction="_lc1fZGNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc1fZGNREe-7SakFEA0Yfw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_lc1fY2NREe-7SakFEA0Yfw" successor_AbstractAction="_lc1fZWNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lc1fZWNREe-7SakFEA0Yfw" entityName="deferredResult" predecessor_AbstractAction="_lc1fZGNREe-7SakFEA0Yfw" successor_AbstractAction="_lc1fZmNREe-7SakFEA0Yfw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc1fZmNREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lc1fZWNREe-7SakFEA0Yfw" successor_AbstractAction="_lc1fZ2NREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lc1fZ2NREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc1fZmNREe-7SakFEA0Yfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc1fbmNREe-7SakFEA0Yfw">
                <branchBehaviour_BranchTransition id="_lc2GcGNREe-7SakFEA0Yfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lc1fa2NREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc1fbGNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc1fbGNREe-7SakFEA0Yfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_lc1fa2NREe-7SakFEA0Yfw" successor_AbstractAction="_lc1fbWNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lc1fbWNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc1fbGNREe-7SakFEA0Yfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lc2GcmNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc2GcWNREe-7SakFEA0Yfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_lc2Gd2NREe-7SakFEA0Yfw" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_lc2GdmNREe-7SakFEA0Yfw" successor_AbstractAction="_lc2GeGNREe-7SakFEA0Yfw"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_lc2GeGNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc2Gd2NREe-7SakFEA0Yfw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_ldnijWNREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_ldoJkmNREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ldoJkGNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_lddxh2NREe-7SakFEA0Yfw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ldoJkWNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_lddxi2NREe-7SakFEA0Yfw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_lc3UomNREe-7SakFEA0Yfw" describedService__SEFF="_lXAkNWNREe-7SakFEA0Yfw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_lc2tg2NREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc2tkGNREe-7SakFEA0Yfw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_lc2tkGNREe-7SakFEA0Yfw" entityName="If Branch" predecessor_AbstractAction="_lc2tg2NREe-7SakFEA0Yfw" successor_AbstractAction="_lc3UoGNREe-7SakFEA0Yfw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc2th2NREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_lc2tiWNREe-7SakFEA0Yfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lc2thGNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc2thWNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lc2thWNREe-7SakFEA0Yfw" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_lc2thGNREe-7SakFEA0Yfw" successor_AbstractAction="_lc2thmNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lc2thmNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc2thWNREe-7SakFEA0Yfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc2tjWNREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_lc2tj2NREe-7SakFEA0Yfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lc2timNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc2ti2NREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lc2ti2NREe-7SakFEA0Yfw" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_lc2timNREe-7SakFEA0Yfw" successor_AbstractAction="_lc2tjGNREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lc2tjGNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc2ti2NREe-7SakFEA0Yfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_lc3UoGNREe-7SakFEA0Yfw" entityName="If Branch" predecessor_AbstractAction="_lc2tkGNREe-7SakFEA0Yfw" successor_AbstractAction="_lc3UoWNREe-7SakFEA0Yfw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc3UnWNREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_lc3Un2NREe-7SakFEA0Yfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lc2tkWNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc3Um2NREe-7SakFEA0Yfw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_lc3Um2NREe-7SakFEA0Yfw" entityName="If Branch" predecessor_AbstractAction="_lc2tkWNREe-7SakFEA0Yfw" successor_AbstractAction="_lc3UnGNREe-7SakFEA0Yfw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc3Uk2NREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_lc3UlWNREe-7SakFEA0Yfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lc2tkmNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc3UkGNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lc3UkGNREe-7SakFEA0Yfw" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_lc2tkmNREe-7SakFEA0Yfw" successor_AbstractAction="_lc3UkWNREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lc3UkWNREe-7SakFEA0Yfw" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_lc3UkGNREe-7SakFEA0Yfw" successor_AbstractAction="_lc3UkmNREe-7SakFEA0Yfw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lc3UkmNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc3UkWNREe-7SakFEA0Yfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lc3UmGNREe-7SakFEA0Yfw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_lc3UmmNREe-7SakFEA0Yfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lc3UlmNREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc3Ul2NREe-7SakFEA0Yfw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lc3Ul2NREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc3UlmNREe-7SakFEA0Yfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lc3UnGNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc3Um2NREe-7SakFEA0Yfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_lc3UoWNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc3UoGNREe-7SakFEA0Yfw"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_lc2tgWNREe-7SakFEA0Yfw" describedService__SEFF="_lXAkMGNREe-7SakFEA0Yfw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_lc2Ge2NREe-7SakFEA0Yfw" entityName="Start Action" successor_AbstractAction="_lc2GfGNREe-7SakFEA0Yfw"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lc2GfGNREe-7SakFEA0Yfw" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_lc2Ge2NREe-7SakFEA0Yfw" successor_AbstractAction="_lc2tgGNREe-7SakFEA0Yfw">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_lc2tgGNREe-7SakFEA0Yfw" entityName="Stop Action" predecessor_AbstractAction="_lc2GfGNREe-7SakFEA0Yfw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_ldu3QWNREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_ldveVmNREe-7SakFEA0Yfw" encapsulatedComponent__AssemblyContext="_ldg01GNREe-7SakFEA0Yfw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_ldwsdWNREe-7SakFEA0Yfw" innerProvidedRole_ProvidedDelegationConnector="_ldg002NREe-7SakFEA0Yfw" outerProvidedRole_ProvidedDelegationConnector="_ldu3QGNREe-7SakFEA0Yfw" assemblyContext_ProvidedDelegationConnector="_ldveVmNREe-7SakFEA0Yfw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ldu3QGNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_lddxiWNREe-7SakFEA0Yfw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_ldu3QmNREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_ldveWGNREe-7SakFEA0Yfw" encapsulatedComponent__AssemblyContext="_ldnijWNREe-7SakFEA0Yfw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_ldu3RGNREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_ldveVGNREe-7SakFEA0Yfw" encapsulatedComponent__AssemblyContext="_lddxjWNREe-7SakFEA0Yfw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_ldwscWNREe-7SakFEA0Yfw" innerProvidedRole_ProvidedDelegationConnector="_lddxjGNREe-7SakFEA0Yfw" outerProvidedRole_ProvidedDelegationConnector="_ldu3Q2NREe-7SakFEA0Yfw" assemblyContext_ProvidedDelegationConnector="_ldveVGNREe-7SakFEA0Yfw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ldu3Q2NREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_lddximNREe-7SakFEA0Yfw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_ldu3RmNREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_ldveUGNREe-7SakFEA0Yfw" encapsulatedComponent__AssemblyContext="_ldiqDmNREe-7SakFEA0Yfw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_ldwscGNREe-7SakFEA0Yfw" innerProvidedRole_ProvidedDelegationConnector="_ldiqDWNREe-7SakFEA0Yfw" outerProvidedRole_ProvidedDelegationConnector="_ldu3RWNREe-7SakFEA0Yfw" assemblyContext_ProvidedDelegationConnector="_ldveUGNREe-7SakFEA0Yfw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ldu3RWNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_lddxiGNREe-7SakFEA0Yfw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_ldu3SWNREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_ldveUmNREe-7SakFEA0Yfw" encapsulatedComponent__AssemblyContext="_ldoJkmNREe-7SakFEA0Yfw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_ldwscmNREe-7SakFEA0Yfw" innerProvidedRole_ProvidedDelegationConnector="_ldoJkGNREe-7SakFEA0Yfw" outerProvidedRole_ProvidedDelegationConnector="_ldu3SGNREe-7SakFEA0Yfw" assemblyContext_ProvidedDelegationConnector="_ldveUmNREe-7SakFEA0Yfw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_ldwsc2NREe-7SakFEA0Yfw" innerProvidedRole_ProvidedDelegationConnector="_ldoJkWNREe-7SakFEA0Yfw" outerProvidedRole_ProvidedDelegationConnector="_ldu3R2NREe-7SakFEA0Yfw" assemblyContext_ProvidedDelegationConnector="_ldveUmNREe-7SakFEA0Yfw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ldu3R2NREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_lddxi2NREe-7SakFEA0Yfw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ldu3SGNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_lddxh2NREe-7SakFEA0Yfw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_ldu3S2NREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_ldwFYGNREe-7SakFEA0Yfw" encapsulatedComponent__AssemblyContext="_ldltUWNREe-7SakFEA0Yfw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_ldwsdGNREe-7SakFEA0Yfw" innerProvidedRole_ProvidedDelegationConnector="_ldltUGNREe-7SakFEA0Yfw" outerProvidedRole_ProvidedDelegationConnector="_ldu3SmNREe-7SakFEA0Yfw" assemblyContext_ProvidedDelegationConnector="_ldwFYGNREe-7SakFEA0Yfw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ldu3SmNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_lddxhmNREe-7SakFEA0Yfw"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_lddxhmNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_lW_9IGNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_lWPvMGNREe-7SakFEA0Yfw">
      <parameters__OperationSignature dataType__Parameter="_lWOhEGNREe-7SakFEA0Yfw" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_lddxh2NREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_lXAkNWNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_lW_9JGNREe-7SakFEA0Yfw">
      <parameters__OperationSignature dataType__Parameter="_lXAkM2NREe-7SakFEA0Yfw" parameterName="authorization" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_lXAkNGNREe-7SakFEA0Yfw" parameterName="teleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_lddxiGNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_lXBLQmNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_lW_9JGNREe-7SakFEA0Yfw">
      <parameters__OperationSignature dataType__Parameter="_lWOhEGNREe-7SakFEA0Yfw" parameterName="registrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_lddxiWNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_lXByUGNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_lWPvMGNREe-7SakFEA0Yfw">
      <parameters__OperationSignature dataType__Parameter="_lXBLRWNREe-7SakFEA0Yfw" parameterName="request" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_lddximNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_lWQWQGNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_lWPvMGNREe-7SakFEA0Yfw">
      <parameters__OperationSignature dataType__Parameter="_lWOhEGNREe-7SakFEA0Yfw" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_lddxi2NREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_lXAkMGNREe-7SakFEA0Yfw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_lW_9JGNREe-7SakFEA0Yfw">
      <parameters__OperationSignature dataType__Parameter="_lW_9I2NREe-7SakFEA0Yfw" parameterName="tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_lWOhEGNREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_lWPvMGNREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_lW_9I2NREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_lW_9JGNREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_lXAkM2NREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_lXAkNGNREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_lXBLRWNREe-7SakFEA0Yfw" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
</repository:Repository>
