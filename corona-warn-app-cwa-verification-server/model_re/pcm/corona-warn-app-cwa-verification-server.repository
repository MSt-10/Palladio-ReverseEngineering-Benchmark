<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_pSEx6qh5Ee-7dJB5mITKig">
  <components__Repository xsi:type="repository:BasicComponent" id="_pRyeB6h5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_pRyeBqh5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_pRyeAKh5Ee-7dJB5mITKig"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_pRHvqKh5Ee-7dJB5mITKig" describedService__SEFF="_pLqA0Kh5Ee-7dJB5mITKig">
      <steps_Behaviour xsi:type="seff:StartAction" id="_pRFTb6h5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRF6dah5Ee-7dJB5mITKig"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_pRF6dah5Ee-7dJB5mITKig" entityName="If Branch" predecessor_AbstractAction="_pRFTb6h5Ee-7dJB5mITKig" successor_AbstractAction="_pRF6dqh5Ee-7dJB5mITKig">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRF6cqh5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_pRF6dKh5Ee-7dJB5mITKig">
            <steps_Behaviour xsi:type="seff:StartAction" id="_pRFTcKh5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRF6cKh5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_pRF6cKh5Ee-7dJB5mITKig" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_pRFTcKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRF6cah5Ee-7dJB5mITKig">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController_generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController_generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_pRF6cah5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRF6cKh5Ee-7dJB5mITKig"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_pRF6dqh5Ee-7dJB5mITKig" entityName="stopWatch.start()" predecessor_AbstractAction="_pRF6dah5Ee-7dJB5mITKig" successor_AbstractAction="_pRHvpqh5Ee-7dJB5mITKig"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_pRHvpqh5Ee-7dJB5mITKig" entityName="Switch Branch" predecessor_AbstractAction="_pRF6dqh5Ee-7dJB5mITKig" successor_AbstractAction="_pRHvp6h5Ee-7dJB5mITKig">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRGhiah5Ee-7dJB5mITKig">
          <branchBehaviour_BranchTransition id="_pRGhi6h5Ee-7dJB5mITKig">
            <steps_Behaviour xsi:type="seff:StartAction" id="_pRF6d6h5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRF6eKh5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_pRF6eKh5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pRF6d6h5Ee-7dJB5mITKig" successor_AbstractAction="_pRF6eah5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_pRF6eah5Ee-7dJB5mITKig" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_pRF6eKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRF6eqh5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_pRF6eqh5Ee-7dJB5mITKig" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_pRF6eah5Ee-7dJB5mITKig" successor_AbstractAction="_pRF6e6h5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_pRF6e6h5Ee-7dJB5mITKig" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_pRF6eqh5Ee-7dJB5mITKig" successor_AbstractAction="_pRF6fKh5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_pRF6fKh5Ee-7dJB5mITKig" entityName="deferredResult" predecessor_AbstractAction="_pRF6e6h5Ee-7dJB5mITKig" successor_AbstractAction="_pRGhhah5Ee-7dJB5mITKig">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_pRGhhah5Ee-7dJB5mITKig" entityName="If Branch" predecessor_AbstractAction="_pRF6fKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRGhhqh5Ee-7dJB5mITKig">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRGhgqh5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_pRGhhKh5Ee-7dJB5mITKig">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_pRF6fah5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRF6fqh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRF6fqh5Ee-7dJB5mITKig" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_pRF6fah5Ee-7dJB5mITKig" successor_AbstractAction="_pRF6f6h5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRF6f6h5Ee-7dJB5mITKig" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_pRF6fqh5Ee-7dJB5mITKig" successor_AbstractAction="_pRF6gKh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRF6gKh5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pRF6f6h5Ee-7dJB5mITKig" successor_AbstractAction="_pRF6gah5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRF6gah5Ee-7dJB5mITKig" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_pRF6gKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRF6gqh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRF6gqh5Ee-7dJB5mITKig" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_pRF6gah5Ee-7dJB5mITKig" successor_AbstractAction="_pRF6g6h5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRF6g6h5Ee-7dJB5mITKig" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_pRF6gqh5Ee-7dJB5mITKig" successor_AbstractAction="_pRGhgKh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_pRGhgKh5Ee-7dJB5mITKig" entityName="deferredResult" predecessor_AbstractAction="_pRF6g6h5Ee-7dJB5mITKig" successor_AbstractAction="_pRGhgah5Ee-7dJB5mITKig">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_pRGhgah5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRGhgKh5Ee-7dJB5mITKig"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_pRGhhqh5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pRGhhah5Ee-7dJB5mITKig" successor_AbstractAction="_pRGhh6h5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_pRGhh6h5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pRGhhqh5Ee-7dJB5mITKig" successor_AbstractAction="_pRGhiKh5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_pRGhiKh5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRGhh6h5Ee-7dJB5mITKig"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRHInah5Ee-7dJB5mITKig">
          <branchBehaviour_BranchTransition id="_pRHIn6h5Ee-7dJB5mITKig">
            <steps_Behaviour xsi:type="seff:StartAction" id="_pRGhjKh5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRHImah5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_pRHImah5Ee-7dJB5mITKig" entityName="If Branch" predecessor_AbstractAction="_pRGhjKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRHImqh5Ee-7dJB5mITKig">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRHIlqh5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_pRHImKh5Ee-7dJB5mITKig">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_pRGhjah5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRGhjqh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRGhjqh5Ee-7dJB5mITKig" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_pRGhjah5Ee-7dJB5mITKig" successor_AbstractAction="_pRGhj6h5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRGhj6h5Ee-7dJB5mITKig" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_pRGhjqh5Ee-7dJB5mITKig" successor_AbstractAction="_pRHIkKh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRHIkKh5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pRGhj6h5Ee-7dJB5mITKig" successor_AbstractAction="_pRHIkah5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRHIkah5Ee-7dJB5mITKig" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_pRHIkKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRHIkqh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRHIkqh5Ee-7dJB5mITKig" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_pRHIkah5Ee-7dJB5mITKig" successor_AbstractAction="_pRHIk6h5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRHIk6h5Ee-7dJB5mITKig" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_pRHIkqh5Ee-7dJB5mITKig" successor_AbstractAction="_pRHIlKh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_pRHIlKh5Ee-7dJB5mITKig" entityName="deferredResult" predecessor_AbstractAction="_pRHIk6h5Ee-7dJB5mITKig" successor_AbstractAction="_pRHIlah5Ee-7dJB5mITKig">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_pRHIlah5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRHIlKh5Ee-7dJB5mITKig"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_pRHImqh5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pRHImah5Ee-7dJB5mITKig" successor_AbstractAction="_pRHIm6h5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_pRHIm6h5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pRHImqh5Ee-7dJB5mITKig" successor_AbstractAction="_pRHInKh5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_pRHInKh5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRHIm6h5Ee-7dJB5mITKig"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRHvo6h5Ee-7dJB5mITKig">
          <branchBehaviour_BranchTransition id="_pRHvpah5Ee-7dJB5mITKig">
            <steps_Behaviour xsi:type="seff:StartAction" id="_pRHvoKh5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRHvoah5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_pRHvoah5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pRHvoKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRHvoqh5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_pRHvoqh5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRHvoah5Ee-7dJB5mITKig"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_pRHvp6h5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRHvpqh5Ee-7dJB5mITKig"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_pR2IZKh5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_pR2IY6h5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_pRyeBKh5Ee-7dJB5mITKig"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_pRFTbah5Ee-7dJB5mITKig" describedService__SEFF="_pLoLpKh5Ee-7dJB5mITKig">
      <steps_Behaviour xsi:type="seff:StartAction" id="_pRDePah5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pREFQah5Ee-7dJB5mITKig"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_pREFQah5Ee-7dJB5mITKig" entityName="If Branch" predecessor_AbstractAction="_pRDePah5Ee-7dJB5mITKig" successor_AbstractAction="_pREFQqh5Ee-7dJB5mITKig">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRDeQah5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_pREFQKh5Ee-7dJB5mITKig">
            <steps_Behaviour xsi:type="seff:StartAction" id="_pRDePqh5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRDeP6h5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_pRDeP6h5Ee-7dJB5mITKig" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_pRDePqh5Ee-7dJB5mITKig" successor_AbstractAction="_pRDeQKh5Ee-7dJB5mITKig">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_pRDeQKh5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRDeP6h5Ee-7dJB5mITKig"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_pREFQqh5Ee-7dJB5mITKig" entityName="stopWatch.start()" predecessor_AbstractAction="_pREFQah5Ee-7dJB5mITKig" successor_AbstractAction="_pRFTa6h5Ee-7dJB5mITKig"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_pRFTa6h5Ee-7dJB5mITKig" entityName="If Branch" predecessor_AbstractAction="_pREFQqh5Ee-7dJB5mITKig" successor_AbstractAction="_pRFTbKh5Ee-7dJB5mITKig">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRFTaKh5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_pRFTaqh5Ee-7dJB5mITKig">
            <steps_Behaviour xsi:type="seff:StartAction" id="_pREFQ6h5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRFTZqh5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_pRFTZqh5Ee-7dJB5mITKig" entityName="If Branch" predecessor_AbstractAction="_pREFQ6h5Ee-7dJB5mITKig" successor_AbstractAction="_pRFTZ6h5Ee-7dJB5mITKig">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRFTY6h5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_pRFTZah5Ee-7dJB5mITKig">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_pREFRKh5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pREsWqh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_pREsWqh5Ee-7dJB5mITKig" entityName="Switch Branch" predecessor_AbstractAction="_pREFRKh5Ee-7dJB5mITKig" successor_AbstractAction="_pREsW6h5Ee-7dJB5mITKig">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pREFT6h5Ee-7dJB5mITKig">
                      <branchBehaviour_BranchTransition id="_pREFUah5Ee-7dJB5mITKig">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_pREFRah5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pREFTKh5Ee-7dJB5mITKig"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_pREFTKh5Ee-7dJB5mITKig" entityName="If Branch" predecessor_AbstractAction="_pREFRah5Ee-7dJB5mITKig" successor_AbstractAction="_pREFTah5Ee-7dJB5mITKig">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pREFSah5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_pREFS6h5Ee-7dJB5mITKig">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_pREFRqh5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pREFR6h5Ee-7dJB5mITKig"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_pREFR6h5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pREFRqh5Ee-7dJB5mITKig" successor_AbstractAction="_pREFSKh5Ee-7dJB5mITKig"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_pREFSKh5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pREFR6h5Ee-7dJB5mITKig"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_pREFTah5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pREFTKh5Ee-7dJB5mITKig" successor_AbstractAction="_pREFTqh5Ee-7dJB5mITKig"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_pREFTqh5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pREFTah5Ee-7dJB5mITKig"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pREsUah5Ee-7dJB5mITKig">
                      <branchBehaviour_BranchTransition id="_pREsU6h5Ee-7dJB5mITKig">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_pREFUqh5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pREFU6h5Ee-7dJB5mITKig"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_pREFU6h5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pREFUqh5Ee-7dJB5mITKig" successor_AbstractAction="_pREsUKh5Ee-7dJB5mITKig"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_pREsUKh5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pREFU6h5Ee-7dJB5mITKig"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pREsV6h5Ee-7dJB5mITKig">
                      <branchBehaviour_BranchTransition id="_pREsWah5Ee-7dJB5mITKig">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_pREsVKh5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pREsVah5Ee-7dJB5mITKig"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_pREsVah5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pREsVKh5Ee-7dJB5mITKig" successor_AbstractAction="_pREsVqh5Ee-7dJB5mITKig"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_pREsVqh5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pREsVah5Ee-7dJB5mITKig"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pREsW6h5Ee-7dJB5mITKig" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_pREsWqh5Ee-7dJB5mITKig" successor_AbstractAction="_pREsXKh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pREsXKh5Ee-7dJB5mITKig" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_pREsW6h5Ee-7dJB5mITKig" successor_AbstractAction="_pREsXah5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pREsXah5Ee-7dJB5mITKig" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_pREsXKh5Ee-7dJB5mITKig" successor_AbstractAction="_pREsXqh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pREsXqh5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pREsXah5Ee-7dJB5mITKig" successor_AbstractAction="_pREsX6h5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pREsX6h5Ee-7dJB5mITKig" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_pREsXqh5Ee-7dJB5mITKig" successor_AbstractAction="_pREsYKh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pREsYKh5Ee-7dJB5mITKig" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_pREsX6h5Ee-7dJB5mITKig" successor_AbstractAction="_pRFTYKh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRFTYKh5Ee-7dJB5mITKig" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_pREsYKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRFTYah5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_pRFTYah5Ee-7dJB5mITKig" entityName="deferredResult" predecessor_AbstractAction="_pRFTYKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRFTYqh5Ee-7dJB5mITKig">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_pRFTYqh5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRFTYah5Ee-7dJB5mITKig"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_pRFTZ6h5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRFTZqh5Ee-7dJB5mITKig"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_pRFTbKh5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRFTa6h5Ee-7dJB5mITKig"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_pR39nqh5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_pR39nah5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_pRyeAqh5Ee-7dJB5mITKig"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_pRDeO6h5Ee-7dJB5mITKig" describedService__SEFF="_pK_5gKh5Ee-7dJB5mITKig">
      <steps_Behaviour xsi:type="seff:StartAction" id="_pRBB9Kh5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRBB-6h5Ee-7dJB5mITKig"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_pRBB-6h5Ee-7dJB5mITKig" entityName="If Branch" predecessor_AbstractAction="_pRBB9Kh5Ee-7dJB5mITKig" successor_AbstractAction="_pRBB_Kh5Ee-7dJB5mITKig">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRBB-Kh5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_pRBB-qh5Ee-7dJB5mITKig">
            <steps_Behaviour xsi:type="seff:StartAction" id="_pRBB9ah5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRBB9qh5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_pRBB9qh5Ee-7dJB5mITKig" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_pRBB9ah5Ee-7dJB5mITKig" successor_AbstractAction="_pRBB96h5Ee-7dJB5mITKig">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_pRBB96h5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRBB9qh5Ee-7dJB5mITKig"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_pRBB_Kh5Ee-7dJB5mITKig" entityName="stopWatch.start()" predecessor_AbstractAction="_pRBB-6h5Ee-7dJB5mITKig" successor_AbstractAction="_pRDeOKh5Ee-7dJB5mITKig"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_pRDeOKh5Ee-7dJB5mITKig" entityName="If Branch" predecessor_AbstractAction="_pRBB_Kh5Ee-7dJB5mITKig" successor_AbstractAction="_pRDeOah5Ee-7dJB5mITKig">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRDeNah5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_pRDeN6h5Ee-7dJB5mITKig">
            <steps_Behaviour xsi:type="seff:StartAction" id="_pRBB_ah5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRDeM6h5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_pRDeM6h5Ee-7dJB5mITKig" entityName="Switch Branch" predecessor_AbstractAction="_pRBB_ah5Ee-7dJB5mITKig" successor_AbstractAction="_pRDeNKh5Ee-7dJB5mITKig">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRCQGKh5Ee-7dJB5mITKig">
                <branchBehaviour_BranchTransition id="_pRCQGqh5Ee-7dJB5mITKig">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_pRBpAKh5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRBpAah5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRBpAah5Ee-7dJB5mITKig" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_pRBpAKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRBpDah5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_pRBpDah5Ee-7dJB5mITKig" entityName="If Branch" predecessor_AbstractAction="_pRBpAah5Ee-7dJB5mITKig" successor_AbstractAction="_pRBpDqh5Ee-7dJB5mITKig">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRBpCqh5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_pRBpDKh5Ee-7dJB5mITKig">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_pRBpAqh5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRBpCKh5Ee-7dJB5mITKig"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_pRBpCKh5Ee-7dJB5mITKig" entityName="If Branch" predecessor_AbstractAction="_pRBpAqh5Ee-7dJB5mITKig" successor_AbstractAction="_pRBpCah5Ee-7dJB5mITKig">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRBpBah5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_pRBpB6h5Ee-7dJB5mITKig">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_pRBpA6h5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRBpBKh5Ee-7dJB5mITKig"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_pRBpBKh5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRBpA6h5Ee-7dJB5mITKig"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_pRBpCah5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRBpCKh5Ee-7dJB5mITKig"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRBpDqh5Ee-7dJB5mITKig" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_pRBpDah5Ee-7dJB5mITKig" successor_AbstractAction="_pRBpD6h5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRBpD6h5Ee-7dJB5mITKig" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_pRBpDqh5Ee-7dJB5mITKig" successor_AbstractAction="_pRBpEKh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRBpEKh5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pRBpD6h5Ee-7dJB5mITKig" successor_AbstractAction="_pRBpEah5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRBpEah5Ee-7dJB5mITKig" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_pRBpEKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRBpEqh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRBpEqh5Ee-7dJB5mITKig" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_pRBpEah5Ee-7dJB5mITKig" successor_AbstractAction="_pRCQEKh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_pRCQEKh5Ee-7dJB5mITKig" entityName="deferredResult" predecessor_AbstractAction="_pRBpEqh5Ee-7dJB5mITKig" successor_AbstractAction="_pRCQEah5Ee-7dJB5mITKig">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRCQEah5Ee-7dJB5mITKig" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_pRCQEKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRCQEqh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRCQEqh5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pRCQEah5Ee-7dJB5mITKig" successor_AbstractAction="_pRCQE6h5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRCQE6h5Ee-7dJB5mITKig" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_pRCQEqh5Ee-7dJB5mITKig" successor_AbstractAction="_pRCQFKh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRCQFKh5Ee-7dJB5mITKig" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_pRCQE6h5Ee-7dJB5mITKig" successor_AbstractAction="_pRCQFah5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_pRCQFah5Ee-7dJB5mITKig" entityName="deferredResult" predecessor_AbstractAction="_pRCQFKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRCQFqh5Ee-7dJB5mITKig">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRCQFqh5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pRCQFah5Ee-7dJB5mITKig" successor_AbstractAction="_pRCQF6h5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_pRCQF6h5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRCQFqh5Ee-7dJB5mITKig"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRC3KKh5Ee-7dJB5mITKig">
                <branchBehaviour_BranchTransition id="_pRC3Kqh5Ee-7dJB5mITKig">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_pRC3IKh5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRC3Iah5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRC3Iah5Ee-7dJB5mITKig" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_pRC3IKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRC3Iqh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRC3Iqh5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pRC3Iah5Ee-7dJB5mITKig" successor_AbstractAction="_pRC3I6h5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRC3I6h5Ee-7dJB5mITKig" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_pRC3Iqh5Ee-7dJB5mITKig" successor_AbstractAction="_pRC3JKh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRC3JKh5Ee-7dJB5mITKig" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_pRC3I6h5Ee-7dJB5mITKig" successor_AbstractAction="_pRC3Jah5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_pRC3Jah5Ee-7dJB5mITKig" entityName="deferredResult" predecessor_AbstractAction="_pRC3JKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRC3Jqh5Ee-7dJB5mITKig">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRC3Jqh5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pRC3Jah5Ee-7dJB5mITKig" successor_AbstractAction="_pRC3J6h5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_pRC3J6h5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRC3Jqh5Ee-7dJB5mITKig"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRDeMKh5Ee-7dJB5mITKig">
                <branchBehaviour_BranchTransition id="_pRDeMqh5Ee-7dJB5mITKig">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_pRC3K6h5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRC3LKh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRC3LKh5Ee-7dJB5mITKig" entityName="stopWatch.stop()" predecessor_AbstractAction="_pRC3K6h5Ee-7dJB5mITKig" successor_AbstractAction="_pRC3Lah5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_pRC3Lah5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRC3LKh5Ee-7dJB5mITKig"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_pRDeNKh5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRDeM6h5Ee-7dJB5mITKig"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_pRDeOah5Ee-7dJB5mITKig" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_pRDeOKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRDeOqh5Ee-7dJB5mITKig"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_pRDeOqh5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRDeOah5Ee-7dJB5mITKig"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_pR7A5Kh5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_pR7A4qh5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_pRyeA6h5Ee-7dJB5mITKig"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_pR7A46h5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_pRyeAah5Ee-7dJB5mITKig"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_pRBB8qh5Ee-7dJB5mITKig" describedService__SEFF="_pLpZwqh5Ee-7dJB5mITKig">
      <steps_Behaviour xsi:type="seff:StartAction" id="_pQ9XlKh5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pQ_z0ah5Ee-7dJB5mITKig"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_pQ_z0ah5Ee-7dJB5mITKig" entityName="If Branch" predecessor_AbstractAction="_pQ9XlKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRBB8Kh5Ee-7dJB5mITKig">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pQ-lsKh5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_pQ_MwKh5Ee-7dJB5mITKig">
            <steps_Behaviour xsi:type="seff:StartAction" id="_pQ9Xlah5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pQ9-oKh5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_pQ9-oKh5Ee-7dJB5mITKig" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_pQ9Xlah5Ee-7dJB5mITKig" successor_AbstractAction="_pQ9-oah5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_pQ9-oah5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pQ9-oKh5Ee-7dJB5mITKig"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pQ_MxKh5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_pQ_z0Kh5Ee-7dJB5mITKig">
            <steps_Behaviour xsi:type="seff:StartAction" id="_pQ_Mwah5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pQ_Mwqh5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_pQ_Mwqh5Ee-7dJB5mITKig" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_pQ_Mwah5Ee-7dJB5mITKig" successor_AbstractAction="_pQ_Mw6h5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_pQ_Mw6h5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pQ_Mwqh5Ee-7dJB5mITKig"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_pRBB8Kh5Ee-7dJB5mITKig" entityName="If Branch" predecessor_AbstractAction="_pQ_z0ah5Ee-7dJB5mITKig" successor_AbstractAction="_pRBB8ah5Ee-7dJB5mITKig">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRAa7Kh5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_pRAa7qh5Ee-7dJB5mITKig">
            <steps_Behaviour xsi:type="seff:StartAction" id="_pQ_z0qh5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRAa6qh5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_pRAa6qh5Ee-7dJB5mITKig" entityName="If Branch" predecessor_AbstractAction="_pQ_z0qh5Ee-7dJB5mITKig" successor_AbstractAction="_pRAa66h5Ee-7dJB5mITKig">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRAa4qh5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_pRAa5Kh5Ee-7dJB5mITKig">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_pQ_z06h5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pQ_z1Kh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pQ_z1Kh5Ee-7dJB5mITKig" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_pQ_z06h5Ee-7dJB5mITKig" successor_AbstractAction="_pRAa4Kh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_pRAa4Kh5Ee-7dJB5mITKig" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_pQ_z1Kh5Ee-7dJB5mITKig" successor_AbstractAction="_pRAa4ah5Ee-7dJB5mITKig">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_pRAa4ah5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRAa4Kh5Ee-7dJB5mITKig"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRAa56h5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_pRAa6ah5Ee-7dJB5mITKig">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_pRAa5ah5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRAa5qh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_pRAa5qh5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRAa5ah5Ee-7dJB5mITKig"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_pRAa66h5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRAa6qh5Ee-7dJB5mITKig"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_pRBB8ah5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRBB8Kh5Ee-7dJB5mITKig"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_pQ9Xkqh5Ee-7dJB5mITKig" describedService__SEFF="_pLoLoah5Ee-7dJB5mITKig">
      <steps_Behaviour xsi:type="seff:StartAction" id="_pMIh8ah5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pQ9XkKh5Ee-7dJB5mITKig"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_pQ9XkKh5Ee-7dJB5mITKig" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_pMIh8ah5Ee-7dJB5mITKig" successor_AbstractAction="_pQ9Xkah5Ee-7dJB5mITKig">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_pQ9Xkah5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pQ9XkKh5Ee-7dJB5mITKig"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_pR_SXah5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_pR_SX6h5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_pR_SXqh5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_pRyeBah5Ee-7dJB5mITKig"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_pRI9yKh5Ee-7dJB5mITKig" describedService__SEFF="_pLoysqh5Ee-7dJB5mITKig">
      <steps_Behaviour xsi:type="seff:StartAction" id="_pRHvqqh5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRI9xah5Ee-7dJB5mITKig"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_pRI9xah5Ee-7dJB5mITKig" entityName="If Branch" predecessor_AbstractAction="_pRHvqqh5Ee-7dJB5mITKig" successor_AbstractAction="_pRI9xqh5Ee-7dJB5mITKig">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRI9wqh5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_pRI9xKh5Ee-7dJB5mITKig">
            <steps_Behaviour xsi:type="seff:StartAction" id="_pRHvq6h5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRI9wKh5Ee-7dJB5mITKig"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_pRI9wKh5Ee-7dJB5mITKig" entityName="Switch Branch" predecessor_AbstractAction="_pRHvq6h5Ee-7dJB5mITKig" successor_AbstractAction="_pRI9wah5Ee-7dJB5mITKig">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRIWtqh5Ee-7dJB5mITKig">
                <branchBehaviour_BranchTransition id="_pRIWuKh5Ee-7dJB5mITKig">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_pRHvrKh5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRIWsKh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_pRIWsKh5Ee-7dJB5mITKig" entityName="If Branch" predecessor_AbstractAction="_pRHvrKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRIWsah5Ee-7dJB5mITKig">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRHvtah5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_pRHvt6h5Ee-7dJB5mITKig">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_pRHvrah5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRHvs6h5Ee-7dJB5mITKig"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_pRHvs6h5Ee-7dJB5mITKig" entityName="If Branch" predecessor_AbstractAction="_pRHvrah5Ee-7dJB5mITKig" successor_AbstractAction="_pRHvtKh5Ee-7dJB5mITKig">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRHvsKh5Ee-7dJB5mITKig" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_pRHvsqh5Ee-7dJB5mITKig">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_pRHvrqh5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRHvr6h5Ee-7dJB5mITKig"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_pRHvr6h5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRHvrqh5Ee-7dJB5mITKig"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_pRHvtKh5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRHvs6h5Ee-7dJB5mITKig"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRIWsah5Ee-7dJB5mITKig" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_pRIWsKh5Ee-7dJB5mITKig" successor_AbstractAction="_pRIWsqh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRIWsqh5Ee-7dJB5mITKig" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_pRIWsah5Ee-7dJB5mITKig" successor_AbstractAction="_pRIWs6h5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_pRIWs6h5Ee-7dJB5mITKig" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_pRIWsqh5Ee-7dJB5mITKig" successor_AbstractAction="_pRIWtKh5Ee-7dJB5mITKig">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRIWtKh5Ee-7dJB5mITKig" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_pRIWs6h5Ee-7dJB5mITKig" successor_AbstractAction="_pRIWtah5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_pRIWtah5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRIWtKh5Ee-7dJB5mITKig"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRIWvKh5Ee-7dJB5mITKig">
                <branchBehaviour_BranchTransition id="_pRIWvqh5Ee-7dJB5mITKig">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_pRIWuah5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRIWuqh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_pRIWuqh5Ee-7dJB5mITKig" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_pRIWuah5Ee-7dJB5mITKig" successor_AbstractAction="_pRIWu6h5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_pRIWu6h5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRIWuqh5Ee-7dJB5mITKig"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_pRIWwah5Ee-7dJB5mITKig">
                <branchBehaviour_BranchTransition id="_pRIWw6h5Ee-7dJB5mITKig">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_pRIWv6h5Ee-7dJB5mITKig" entityName="Start Action" successor_AbstractAction="_pRIWwKh5Ee-7dJB5mITKig"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_pRIWwKh5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRIWv6h5Ee-7dJB5mITKig"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_pRI9wah5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRI9wKh5Ee-7dJB5mITKig"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_pRI9xqh5Ee-7dJB5mITKig" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_pRI9xah5Ee-7dJB5mITKig" successor_AbstractAction="_pRI9x6h5Ee-7dJB5mITKig"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_pRI9x6h5Ee-7dJB5mITKig" entityName="Stop Action" predecessor_AbstractAction="_pRI9xqh5Ee-7dJB5mITKig"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_pSDjwqh5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_pSEx5Kh5Ee-7dJB5mITKig" encapsulatedComponent__AssemblyContext="_pR7A5Kh5Ee-7dJB5mITKig"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_pSFY86h5Ee-7dJB5mITKig" innerProvidedRole_ProvidedDelegationConnector="_pR7A4qh5Ee-7dJB5mITKig" outerProvidedRole_ProvidedDelegationConnector="_pSDjwKh5Ee-7dJB5mITKig" assemblyContext_ProvidedDelegationConnector="_pSEx5Kh5Ee-7dJB5mITKig"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_pSFY9Kh5Ee-7dJB5mITKig" innerProvidedRole_ProvidedDelegationConnector="_pR7A46h5Ee-7dJB5mITKig" outerProvidedRole_ProvidedDelegationConnector="_pSDjwah5Ee-7dJB5mITKig" assemblyContext_ProvidedDelegationConnector="_pSEx5Kh5Ee-7dJB5mITKig"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_pSDjwKh5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_pRyeA6h5Ee-7dJB5mITKig"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_pSDjwah5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_pRyeAah5Ee-7dJB5mITKig"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_pSEK0ah5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_pSEx4Kh5Ee-7dJB5mITKig" encapsulatedComponent__AssemblyContext="_pR_SX6h5Ee-7dJB5mITKig"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_pSFY8qh5Ee-7dJB5mITKig" innerProvidedRole_ProvidedDelegationConnector="_pR_SXqh5Ee-7dJB5mITKig" outerProvidedRole_ProvidedDelegationConnector="_pSEK0Kh5Ee-7dJB5mITKig" assemblyContext_ProvidedDelegationConnector="_pSEx4Kh5Ee-7dJB5mITKig"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_pSEK0Kh5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_pRyeBah5Ee-7dJB5mITKig"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_pSEK06h5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_pSEx6Kh5Ee-7dJB5mITKig" encapsulatedComponent__AssemblyContext="_pR2IZKh5Ee-7dJB5mITKig"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_pSFY8Kh5Ee-7dJB5mITKig" innerProvidedRole_ProvidedDelegationConnector="_pR2IY6h5Ee-7dJB5mITKig" outerProvidedRole_ProvidedDelegationConnector="_pSEK0qh5Ee-7dJB5mITKig" assemblyContext_ProvidedDelegationConnector="_pSEx6Kh5Ee-7dJB5mITKig"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_pSEK0qh5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_pRyeBKh5Ee-7dJB5mITKig"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_pSEK1ah5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_pSEx4qh5Ee-7dJB5mITKig" encapsulatedComponent__AssemblyContext="_pRyeB6h5Ee-7dJB5mITKig"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_pSFY8ah5Ee-7dJB5mITKig" innerProvidedRole_ProvidedDelegationConnector="_pRyeBqh5Ee-7dJB5mITKig" outerProvidedRole_ProvidedDelegationConnector="_pSEK1Kh5Ee-7dJB5mITKig" assemblyContext_ProvidedDelegationConnector="_pSEx4qh5Ee-7dJB5mITKig"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_pSEK1Kh5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_pRyeAKh5Ee-7dJB5mITKig"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_pSEK1qh5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_pSEK2ah5Ee-7dJB5mITKig" encapsulatedComponent__AssemblyContext="_pR_SXah5Ee-7dJB5mITKig"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_pSEK2Kh5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_pSEx5qh5Ee-7dJB5mITKig" encapsulatedComponent__AssemblyContext="_pR39nqh5Ee-7dJB5mITKig"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_pSFY9ah5Ee-7dJB5mITKig" innerProvidedRole_ProvidedDelegationConnector="_pR39nah5Ee-7dJB5mITKig" outerProvidedRole_ProvidedDelegationConnector="_pSEK16h5Ee-7dJB5mITKig" assemblyContext_ProvidedDelegationConnector="_pSEx5qh5Ee-7dJB5mITKig"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_pSEK16h5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_pRyeAqh5Ee-7dJB5mITKig"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_pRyeAKh5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_pLqA0Kh5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_pK_ScKh5Ee-7dJB5mITKig">
      <parameters__OperationSignature dataType__Parameter="_pLpZxah5Ee-7dJB5mITKig" parameterName="request" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_pRyeAah5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_pLoLoah5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_pLoLoKh5Ee-7dJB5mITKig">
      <parameters__OperationSignature dataType__Parameter="_pLnkkKh5Ee-7dJB5mITKig" parameterName="tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_pRyeAqh5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_pK_5gKh5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_pK_ScKh5Ee-7dJB5mITKig">
      <parameters__OperationSignature dataType__Parameter="_pK-EUKh5Ee-7dJB5mITKig" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_pRyeA6h5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_pLpZwqh5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_pLoLoKh5Ee-7dJB5mITKig">
      <parameters__OperationSignature dataType__Parameter="_pLpZwKh5Ee-7dJB5mITKig" parameterName="authorization" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_pLpZwah5Ee-7dJB5mITKig" parameterName="teleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_pRyeBKh5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_pLoLpKh5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_pK_ScKh5Ee-7dJB5mITKig">
      <parameters__OperationSignature dataType__Parameter="_pK-EUKh5Ee-7dJB5mITKig" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_pRyeBah5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_pLoysqh5Ee-7dJB5mITKig" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_pLoLoKh5Ee-7dJB5mITKig">
      <parameters__OperationSignature dataType__Parameter="_pK-EUKh5Ee-7dJB5mITKig" parameterName="registrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_pK-EUKh5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_pK_ScKh5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_pLnkkKh5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_pLoLoKh5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_pLpZwKh5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_pLpZwah5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_pLpZxah5Ee-7dJB5mITKig" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
</repository:Repository>
