<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_r9KIPItmEe-_pe7pQuL52Q">
  <components__Repository xsi:type="repository:BasicComponent" id="_r85ph4tmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_r85photmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_r85phYtmEe-_pe7pQuL52Q"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_r8OUFYtmEe-_pe7pQuL52Q" describedService__SEFF="_r1n80ItmEe-_pe7pQuL52Q">
      <steps_Behaviour xsi:type="seff:StartAction" id="_r8L324tmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8Me5YtmEe-_pe7pQuL52Q"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_r8Me5YtmEe-_pe7pQuL52Q" entityName="If Branch" predecessor_AbstractAction="_r8L324tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8Me5otmEe-_pe7pQuL52Q">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8Me4otmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_r8Me5ItmEe-_pe7pQuL52Q">
            <steps_Behaviour xsi:type="seff:StartAction" id="_r8L33ItmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8Me4ItmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_r8Me4ItmEe-_pe7pQuL52Q" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_r8L33ItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8Me4YtmEe-_pe7pQuL52Q">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_r8Me4YtmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8Me4ItmEe-_pe7pQuL52Q"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_r8Me5otmEe-_pe7pQuL52Q" entityName="stopWatch.start()" predecessor_AbstractAction="_r8Me5YtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8OUE4tmEe-_pe7pQuL52Q"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_r8OUE4tmEe-_pe7pQuL52Q" entityName="If Branch" predecessor_AbstractAction="_r8Me5otmEe-_pe7pQuL52Q" successor_AbstractAction="_r8OUFItmEe-_pe7pQuL52Q">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8OUEItmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_r8OUEotmEe-_pe7pQuL52Q">
            <steps_Behaviour xsi:type="seff:StartAction" id="_r8Me54tmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8NtDItmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_r8NtDItmEe-_pe7pQuL52Q" entityName="If Branch" predecessor_AbstractAction="_r8Me54tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8NtDYtmEe-_pe7pQuL52Q">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8NtCYtmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_r8NtC4tmEe-_pe7pQuL52Q">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_r8Me6ItmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8NGAYtmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_r8NGAYtmEe-_pe7pQuL52Q" entityName="Switch Branch" predecessor_AbstractAction="_r8Me6ItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8NtAItmEe-_pe7pQuL52Q">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8NF8otmEe-_pe7pQuL52Q">
                      <branchBehaviour_BranchTransition id="_r8NF9ItmEe-_pe7pQuL52Q">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_r8Me6YtmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8Me8ItmEe-_pe7pQuL52Q"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_r8Me8ItmEe-_pe7pQuL52Q" entityName="If Branch" predecessor_AbstractAction="_r8Me6YtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8NF8ItmEe-_pe7pQuL52Q">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8Me7YtmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_r8Me74tmEe-_pe7pQuL52Q">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_r8Me6otmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8Me64tmEe-_pe7pQuL52Q"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_r8Me64tmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8Me6otmEe-_pe7pQuL52Q" successor_AbstractAction="_r8Me7ItmEe-_pe7pQuL52Q"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_r8Me7ItmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8Me64tmEe-_pe7pQuL52Q"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_r8NF8ItmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8Me8ItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8NF8YtmEe-_pe7pQuL52Q"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_r8NF8YtmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8NF8ItmEe-_pe7pQuL52Q"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8NF-ItmEe-_pe7pQuL52Q">
                      <branchBehaviour_BranchTransition id="_r8NF-otmEe-_pe7pQuL52Q">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_r8NF9YtmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8NF9otmEe-_pe7pQuL52Q"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_r8NF9otmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8NF9YtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8NF94tmEe-_pe7pQuL52Q"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_r8NF94tmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8NF9otmEe-_pe7pQuL52Q"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8NF_otmEe-_pe7pQuL52Q">
                      <branchBehaviour_BranchTransition id="_r8NGAItmEe-_pe7pQuL52Q">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_r8NF-4tmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8NF_ItmEe-_pe7pQuL52Q"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_r8NF_ItmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8NF-4tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8NF_YtmEe-_pe7pQuL52Q"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_r8NF_YtmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8NF_ItmEe-_pe7pQuL52Q"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8NtAItmEe-_pe7pQuL52Q" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_r8NGAYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8NtAYtmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8NtAYtmEe-_pe7pQuL52Q" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_r8NtAItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8NtAotmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8NtAotmEe-_pe7pQuL52Q" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_r8NtAYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8NtA4tmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8NtA4tmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8NtAotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8NtBItmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8NtBItmEe-_pe7pQuL52Q" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_r8NtA4tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8NtBYtmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8NtBYtmEe-_pe7pQuL52Q" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_r8NtBItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8NtBotmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8NtBotmEe-_pe7pQuL52Q" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_r8NtBYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8NtB4tmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_r8NtB4tmEe-_pe7pQuL52Q" entityName="deferredResult" predecessor_AbstractAction="_r8NtBotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8NtCItmEe-_pe7pQuL52Q">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_r8NtCItmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8NtB4tmEe-_pe7pQuL52Q"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_r8NtDYtmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8NtDItmEe-_pe7pQuL52Q"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_r8OUFItmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8OUE4tmEe-_pe7pQuL52Q"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_r88s04tmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_r88s1YtmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_r88s1ItmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_r85pgItmEe-_pe7pQuL52Q"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_r8TMoItmEe-_pe7pQuL52Q" describedService__SEFF="_r2TSQotmEe-_pe7pQuL52Q">
      <steps_Behaviour xsi:type="seff:StartAction" id="_r8R-fotmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8TMnYtmEe-_pe7pQuL52Q"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_r8TMnYtmEe-_pe7pQuL52Q" entityName="If Branch" predecessor_AbstractAction="_r8R-fotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8TMnotmEe-_pe7pQuL52Q">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8TMmotmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_r8TMnItmEe-_pe7pQuL52Q">
            <steps_Behaviour xsi:type="seff:StartAction" id="_r8R-f4tmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8TMmItmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_r8TMmItmEe-_pe7pQuL52Q" entityName="Switch Branch" predecessor_AbstractAction="_r8R-f4tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8TMmYtmEe-_pe7pQuL52Q">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8SljItmEe-_pe7pQuL52Q">
                <branchBehaviour_BranchTransition id="_r8SljotmEe-_pe7pQuL52Q">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_r8R-gItmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8SlhotmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_r8SlhotmEe-_pe7pQuL52Q" entityName="If Branch" predecessor_AbstractAction="_r8R-gItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8Slh4tmEe-_pe7pQuL52Q">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8Slg4tmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_r8SlhYtmEe-_pe7pQuL52Q">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_r8R-gYtmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8SlgYtmEe-_pe7pQuL52Q"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_r8SlgYtmEe-_pe7pQuL52Q" entityName="If Branch" predecessor_AbstractAction="_r8R-gYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8SlgotmEe-_pe7pQuL52Q">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8R-hItmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_r8SlgItmEe-_pe7pQuL52Q">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_r8R-gotmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8R-g4tmEe-_pe7pQuL52Q"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_r8R-g4tmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8R-gotmEe-_pe7pQuL52Q"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_r8SlgotmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8SlgYtmEe-_pe7pQuL52Q"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8Slh4tmEe-_pe7pQuL52Q" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_r8SlhotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8SliItmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8SliItmEe-_pe7pQuL52Q" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_r8Slh4tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8SliYtmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_r8SliYtmEe-_pe7pQuL52Q" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_r8SliItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8SliotmEe-_pe7pQuL52Q">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8SliotmEe-_pe7pQuL52Q" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_r8SliYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8Sli4tmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_r8Sli4tmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8SliotmEe-_pe7pQuL52Q"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8TMkItmEe-_pe7pQuL52Q">
                <branchBehaviour_BranchTransition id="_r8TMkotmEe-_pe7pQuL52Q">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_r8Slj4tmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8SlkItmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8SlkItmEe-_pe7pQuL52Q" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_r8Slj4tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8SlkYtmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_r8SlkYtmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8SlkItmEe-_pe7pQuL52Q"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8TMlYtmEe-_pe7pQuL52Q">
                <branchBehaviour_BranchTransition id="_r8TMl4tmEe-_pe7pQuL52Q">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_r8TMk4tmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8TMlItmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_r8TMlItmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8TMk4tmEe-_pe7pQuL52Q"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_r8TMmYtmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8TMmItmEe-_pe7pQuL52Q"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_r8TMnotmEe-_pe7pQuL52Q" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_r8TMnYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8TMn4tmEe-_pe7pQuL52Q"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_r8TMn4tmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8TMnotmEe-_pe7pQuL52Q"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_r8_JEYtmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_r8_JEItmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_r85pgYtmEe-_pe7pQuL52Q"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_r8L32YtmEe-_pe7pQuL52Q" describedService__SEFF="_r2SEIItmEe-_pe7pQuL52Q">
      <steps_Behaviour xsi:type="seff:StartAction" id="_r2uJAotmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8INcYtmEe-_pe7pQuL52Q"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_r8INcYtmEe-_pe7pQuL52Q" entityName="If Branch" predecessor_AbstractAction="_r2uJAotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8I0gItmEe-_pe7pQuL52Q">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8HmYItmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_r8INcItmEe-_pe7pQuL52Q">
            <steps_Behaviour xsi:type="seff:StartAction" id="_r2v-MItmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8G_UItmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_r8G_UItmEe-_pe7pQuL52Q" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_r2v-MItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8G_UYtmEe-_pe7pQuL52Q">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_r8G_UYtmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8G_UItmEe-_pe7pQuL52Q"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_r8I0gItmEe-_pe7pQuL52Q" entityName="stopWatch.start()" predecessor_AbstractAction="_r8INcYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8L31otmEe-_pe7pQuL52Q"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_r8L31otmEe-_pe7pQuL52Q" entityName="If Branch" predecessor_AbstractAction="_r8I0gItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8L314tmEe-_pe7pQuL52Q">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8L304tmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_r8L31YtmEe-_pe7pQuL52Q">
            <steps_Behaviour xsi:type="seff:StartAction" id="_r8I0gYtmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8L30YtmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_r8L30YtmEe-_pe7pQuL52Q" entityName="Switch Branch" predecessor_AbstractAction="_r8I0gYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8L30otmEe-_pe7pQuL52Q">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8KptYtmEe-_pe7pQuL52Q">
                <branchBehaviour_BranchTransition id="_r8Kpt4tmEe-_pe7pQuL52Q">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_r8JbkItmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8JbkYtmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8JbkYtmEe-_pe7pQuL52Q" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_r8JbkItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8KCpItmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_r8KCpItmEe-_pe7pQuL52Q" entityName="If Branch" predecessor_AbstractAction="_r8JbkYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8KCpYtmEe-_pe7pQuL52Q">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8KCoYtmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_r8KCo4tmEe-_pe7pQuL52Q">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_r8JbkotmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8JbmItmEe-_pe7pQuL52Q"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_r8JbmItmEe-_pe7pQuL52Q" entityName="If Branch" predecessor_AbstractAction="_r8JbkotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8KCoItmEe-_pe7pQuL52Q">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8JblYtmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_r8Jbl4tmEe-_pe7pQuL52Q">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_r8Jbk4tmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8JblItmEe-_pe7pQuL52Q"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_r8JblItmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8Jbk4tmEe-_pe7pQuL52Q"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_r8KCoItmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8JbmItmEe-_pe7pQuL52Q"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8KCpYtmEe-_pe7pQuL52Q" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_r8KCpItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8KCpotmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8KCpotmEe-_pe7pQuL52Q" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_r8KCpYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8KCp4tmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8KCp4tmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8KCpotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8KCqItmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8KCqItmEe-_pe7pQuL52Q" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_r8KCp4tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8KCqYtmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8KCqYtmEe-_pe7pQuL52Q" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_r8KCqItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8KCqotmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_r8KCqotmEe-_pe7pQuL52Q" entityName="deferredResult" predecessor_AbstractAction="_r8KCqYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8KCq4tmEe-_pe7pQuL52Q">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8KCq4tmEe-_pe7pQuL52Q" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_r8KCqotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8KCrItmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8KCrItmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8KCq4tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8KpsItmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8KpsItmEe-_pe7pQuL52Q" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_r8KCrItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8KpsYtmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8KpsYtmEe-_pe7pQuL52Q" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_r8KpsItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8KpsotmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_r8KpsotmEe-_pe7pQuL52Q" entityName="deferredResult" predecessor_AbstractAction="_r8KpsYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8Kps4tmEe-_pe7pQuL52Q">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8Kps4tmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8KpsotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8KptItmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_r8KptItmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8Kps4tmEe-_pe7pQuL52Q"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8LQyItmEe-_pe7pQuL52Q">
                <branchBehaviour_BranchTransition id="_r8LQyotmEe-_pe7pQuL52Q">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_r8LQwItmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8LQwYtmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8LQwYtmEe-_pe7pQuL52Q" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_r8LQwItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8LQwotmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8LQwotmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8LQwYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8LQw4tmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8LQw4tmEe-_pe7pQuL52Q" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_r8LQwotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8LQxItmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8LQxItmEe-_pe7pQuL52Q" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_r8LQw4tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8LQxYtmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_r8LQxYtmEe-_pe7pQuL52Q" entityName="deferredResult" predecessor_AbstractAction="_r8LQxItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8LQxotmEe-_pe7pQuL52Q">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8LQxotmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8LQxYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8LQx4tmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_r8LQx4tmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8LQxotmEe-_pe7pQuL52Q"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8LQzotmEe-_pe7pQuL52Q">
                <branchBehaviour_BranchTransition id="_r8L30ItmEe-_pe7pQuL52Q">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_r8LQy4tmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8LQzItmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8LQzItmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8LQy4tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8LQzYtmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_r8LQzYtmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8LQzItmEe-_pe7pQuL52Q"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_r8L30otmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8L30YtmEe-_pe7pQuL52Q"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_r8L314tmEe-_pe7pQuL52Q" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_r8L31otmEe-_pe7pQuL52Q" successor_AbstractAction="_r8L32ItmEe-_pe7pQuL52Q"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_r8L32ItmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8L314tmEe-_pe7pQuL52Q"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_r9A-TotmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_r9A-TYtmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_r85pgotmEe-_pe7pQuL52Q"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_r8R-fItmEe-_pe7pQuL52Q" describedService__SEFF="_r2UgYItmEe-_pe7pQuL52Q">
      <steps_Behaviour xsi:type="seff:StartAction" id="_r8PiOYtmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8QJRYtmEe-_pe7pQuL52Q"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_r8QJRYtmEe-_pe7pQuL52Q" entityName="If Branch" predecessor_AbstractAction="_r8PiOYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8QJRotmEe-_pe7pQuL52Q">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8QJQotmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_r8QJRItmEe-_pe7pQuL52Q">
            <steps_Behaviour xsi:type="seff:StartAction" id="_r8PiOotmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8QJQItmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_r8QJQItmEe-_pe7pQuL52Q" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_r8PiOotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8QJQYtmEe-_pe7pQuL52Q">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController_generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController_generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_r8QJQYtmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8QJQItmEe-_pe7pQuL52Q"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_r8QJRotmEe-_pe7pQuL52Q" entityName="stopWatch.start()" predecessor_AbstractAction="_r8QJRYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8R-eotmEe-_pe7pQuL52Q"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_r8R-eotmEe-_pe7pQuL52Q" entityName="Switch Branch" predecessor_AbstractAction="_r8QJRotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8R-e4tmEe-_pe7pQuL52Q">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8QwXotmEe-_pe7pQuL52Q">
          <branchBehaviour_BranchTransition id="_r8QwYItmEe-_pe7pQuL52Q">
            <steps_Behaviour xsi:type="seff:StartAction" id="_r8QJR4tmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8QJSItmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_r8QJSItmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8QJR4tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8QJSYtmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_r8QJSYtmEe-_pe7pQuL52Q" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_r8QJSItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8QJSotmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_r8QJSotmEe-_pe7pQuL52Q" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_r8QJSYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8QJS4tmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_r8QJS4tmEe-_pe7pQuL52Q" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_r8QJSotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8QJTItmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_r8QJTItmEe-_pe7pQuL52Q" entityName="deferredResult" predecessor_AbstractAction="_r8QJS4tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8QwWotmEe-_pe7pQuL52Q">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_r8QwWotmEe-_pe7pQuL52Q" entityName="If Branch" predecessor_AbstractAction="_r8QJTItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8QwW4tmEe-_pe7pQuL52Q">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8QwV4tmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_r8QwWYtmEe-_pe7pQuL52Q">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_r8QJTYtmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8QJTotmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8QJTotmEe-_pe7pQuL52Q" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_r8QJTYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8QwUItmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8QwUItmEe-_pe7pQuL52Q" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_r8QJTotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8QwUYtmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8QwUYtmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8QwUItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8QwUotmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8QwUotmEe-_pe7pQuL52Q" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_r8QwUYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8QwU4tmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8QwU4tmEe-_pe7pQuL52Q" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_r8QwUotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8QwVItmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8QwVItmEe-_pe7pQuL52Q" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_r8QwU4tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8QwVYtmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_r8QwVYtmEe-_pe7pQuL52Q" entityName="deferredResult" predecessor_AbstractAction="_r8QwVItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8QwVotmEe-_pe7pQuL52Q">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_r8QwVotmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8QwVYtmEe-_pe7pQuL52Q"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_r8QwW4tmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8QwWotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8QwXItmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_r8QwXItmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8QwW4tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8QwXYtmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_r8QwXYtmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8QwXItmEe-_pe7pQuL52Q"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8R-cYtmEe-_pe7pQuL52Q">
          <branchBehaviour_BranchTransition id="_r8R-c4tmEe-_pe7pQuL52Q">
            <steps_Behaviour xsi:type="seff:StartAction" id="_r8RXYItmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8RXbYtmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_r8RXbYtmEe-_pe7pQuL52Q" entityName="If Branch" predecessor_AbstractAction="_r8RXYItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8RXbotmEe-_pe7pQuL52Q">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8RXaotmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_r8RXbItmEe-_pe7pQuL52Q">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_r8RXYYtmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8RXYotmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8RXYotmEe-_pe7pQuL52Q" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_r8RXYYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8RXY4tmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8RXY4tmEe-_pe7pQuL52Q" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_r8RXYotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8RXZItmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8RXZItmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8RXY4tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8RXZYtmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8RXZYtmEe-_pe7pQuL52Q" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_r8RXZItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8RXZotmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8RXZotmEe-_pe7pQuL52Q" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_r8RXZYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8RXZ4tmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8RXZ4tmEe-_pe7pQuL52Q" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_r8RXZotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8RXaItmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_r8RXaItmEe-_pe7pQuL52Q" entityName="deferredResult" predecessor_AbstractAction="_r8RXZ4tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8RXaYtmEe-_pe7pQuL52Q">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_r8RXaYtmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8RXaItmEe-_pe7pQuL52Q"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_r8RXbotmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8RXbYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8RXb4tmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_r8RXb4tmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8RXbotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8R-cItmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_r8R-cItmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8RXb4tmEe-_pe7pQuL52Q"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8R-d4tmEe-_pe7pQuL52Q">
          <branchBehaviour_BranchTransition id="_r8R-eYtmEe-_pe7pQuL52Q">
            <steps_Behaviour xsi:type="seff:StartAction" id="_r8R-dItmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8R-dYtmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_r8R-dYtmEe-_pe7pQuL52Q" entityName="stopWatch.stop()" predecessor_AbstractAction="_r8R-dItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8R-dotmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_r8R-dotmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8R-dYtmEe-_pe7pQuL52Q"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_r8R-e4tmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8R-eotmEe-_pe7pQuL52Q"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_r9DajYtmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_r9Dai4tmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_r85phItmEe-_pe7pQuL52Q"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_r9DajItmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_r85pg4tmEe-_pe7pQuL52Q"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_r8PiMotmEe-_pe7pQuL52Q" describedService__SEFF="_r2SrNYtmEe-_pe7pQuL52Q">
      <steps_Behaviour xsi:type="seff:StartAction" id="_r8OUF4tmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8O7IYtmEe-_pe7pQuL52Q"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_r8O7IYtmEe-_pe7pQuL52Q" entityName="If Branch" predecessor_AbstractAction="_r8OUF4tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8PiMItmEe-_pe7pQuL52Q">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8OUG4tmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_r8OUHYtmEe-_pe7pQuL52Q">
            <steps_Behaviour xsi:type="seff:StartAction" id="_r8OUGItmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8OUGYtmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_r8OUGYtmEe-_pe7pQuL52Q" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_r8OUGItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8OUGotmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_r8OUGotmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8OUGYtmEe-_pe7pQuL52Q"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8OUIYtmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_r8O7IItmEe-_pe7pQuL52Q">
            <steps_Behaviour xsi:type="seff:StartAction" id="_r8OUHotmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8OUH4tmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_r8OUH4tmEe-_pe7pQuL52Q" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_r8OUHotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8OUIItmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_r8OUIItmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8OUH4tmEe-_pe7pQuL52Q"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_r8PiMItmEe-_pe7pQuL52Q" entityName="If Branch" predecessor_AbstractAction="_r8O7IYtmEe-_pe7pQuL52Q" successor_AbstractAction="_r8PiMYtmEe-_pe7pQuL52Q">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8O7MYtmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_r8O7M4tmEe-_pe7pQuL52Q">
            <steps_Behaviour xsi:type="seff:StartAction" id="_r8O7IotmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8O7L4tmEe-_pe7pQuL52Q"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_r8O7L4tmEe-_pe7pQuL52Q" entityName="If Branch" predecessor_AbstractAction="_r8O7IotmEe-_pe7pQuL52Q" successor_AbstractAction="_r8O7MItmEe-_pe7pQuL52Q">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8O7J4tmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_r8O7KYtmEe-_pe7pQuL52Q">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_r8O7I4tmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8O7JItmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_r8O7JItmEe-_pe7pQuL52Q" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_r8O7I4tmEe-_pe7pQuL52Q" successor_AbstractAction="_r8O7JYtmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_r8O7JYtmEe-_pe7pQuL52Q" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_r8O7JItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8O7JotmEe-_pe7pQuL52Q">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_r8O7JotmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8O7JYtmEe-_pe7pQuL52Q"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_r8O7LItmEe-_pe7pQuL52Q" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_r8O7LotmEe-_pe7pQuL52Q">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_r8O7KotmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8O7K4tmEe-_pe7pQuL52Q"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_r8O7K4tmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8O7KotmEe-_pe7pQuL52Q"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_r8O7MItmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8O7L4tmEe-_pe7pQuL52Q"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_r8PiMYtmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8PiMItmEe-_pe7pQuL52Q"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_r8PiN4tmEe-_pe7pQuL52Q" describedService__SEFF="_r2T5UYtmEe-_pe7pQuL52Q">
      <steps_Behaviour xsi:type="seff:StartAction" id="_r8PiNItmEe-_pe7pQuL52Q" entityName="Start Action" successor_AbstractAction="_r8PiNYtmEe-_pe7pQuL52Q"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_r8PiNYtmEe-_pe7pQuL52Q" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_r8PiNItmEe-_pe7pQuL52Q" successor_AbstractAction="_r8PiNotmEe-_pe7pQuL52Q">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_r8PiNotmEe-_pe7pQuL52Q" entityName="Stop Action" predecessor_AbstractAction="_r8PiNYtmEe-_pe7pQuL52Q"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_r9JhIYtmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_r9KINotmEe-_pe7pQuL52Q" encapsulatedComponent__AssemblyContext="_r88s1YtmEe-_pe7pQuL52Q"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_r9LWUYtmEe-_pe7pQuL52Q" innerProvidedRole_ProvidedDelegationConnector="_r88s1ItmEe-_pe7pQuL52Q" outerProvidedRole_ProvidedDelegationConnector="_r9JhIItmEe-_pe7pQuL52Q" assemblyContext_ProvidedDelegationConnector="_r9KINotmEe-_pe7pQuL52Q"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_r9JhIItmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_r85pgItmEe-_pe7pQuL52Q"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_r9JhIotmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_r9KIMotmEe-_pe7pQuL52Q" encapsulatedComponent__AssemblyContext="_r88s04tmEe-_pe7pQuL52Q"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_r9JhJItmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_r9KIOotmEe-_pe7pQuL52Q" encapsulatedComponent__AssemblyContext="_r9A-TotmEe-_pe7pQuL52Q"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_r9LWUotmEe-_pe7pQuL52Q" innerProvidedRole_ProvidedDelegationConnector="_r9A-TYtmEe-_pe7pQuL52Q" outerProvidedRole_ProvidedDelegationConnector="_r9JhI4tmEe-_pe7pQuL52Q" assemblyContext_ProvidedDelegationConnector="_r9KIOotmEe-_pe7pQuL52Q"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_r9JhI4tmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_r85pgotmEe-_pe7pQuL52Q"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_r9JhJotmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_r9KINItmEe-_pe7pQuL52Q" encapsulatedComponent__AssemblyContext="_r8_JEYtmEe-_pe7pQuL52Q"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_r9LWVItmEe-_pe7pQuL52Q" innerProvidedRole_ProvidedDelegationConnector="_r8_JEItmEe-_pe7pQuL52Q" outerProvidedRole_ProvidedDelegationConnector="_r9JhJYtmEe-_pe7pQuL52Q" assemblyContext_ProvidedDelegationConnector="_r9KINItmEe-_pe7pQuL52Q"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_r9JhJYtmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_r85pgYtmEe-_pe7pQuL52Q"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_r9JhKItmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_r9KIMItmEe-_pe7pQuL52Q" encapsulatedComponent__AssemblyContext="_r85ph4tmEe-_pe7pQuL52Q"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_r9LWU4tmEe-_pe7pQuL52Q" innerProvidedRole_ProvidedDelegationConnector="_r85photmEe-_pe7pQuL52Q" outerProvidedRole_ProvidedDelegationConnector="_r9JhJ4tmEe-_pe7pQuL52Q" assemblyContext_ProvidedDelegationConnector="_r9KIMItmEe-_pe7pQuL52Q"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_r9JhJ4tmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_r85phYtmEe-_pe7pQuL52Q"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_r9JhK4tmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_r9KIOItmEe-_pe7pQuL52Q" encapsulatedComponent__AssemblyContext="_r9DajYtmEe-_pe7pQuL52Q"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_r9LWUItmEe-_pe7pQuL52Q" innerProvidedRole_ProvidedDelegationConnector="_r9Dai4tmEe-_pe7pQuL52Q" outerProvidedRole_ProvidedDelegationConnector="_r9JhKYtmEe-_pe7pQuL52Q" assemblyContext_ProvidedDelegationConnector="_r9KIOItmEe-_pe7pQuL52Q"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_r9LWVYtmEe-_pe7pQuL52Q" innerProvidedRole_ProvidedDelegationConnector="_r9DajItmEe-_pe7pQuL52Q" outerProvidedRole_ProvidedDelegationConnector="_r9JhKotmEe-_pe7pQuL52Q" assemblyContext_ProvidedDelegationConnector="_r9KIOItmEe-_pe7pQuL52Q"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_r9JhKYtmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_r85phItmEe-_pe7pQuL52Q"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_r9JhKotmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_r85pg4tmEe-_pe7pQuL52Q"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_r85pgItmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_r2TSQotmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_r2SrNItmEe-_pe7pQuL52Q">
      <parameters__OperationSignature dataType__Parameter="_r1mHoItmEe-_pe7pQuL52Q" parameterName="registrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_r85pgYtmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_r2SEIItmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_r1nVwItmEe-_pe7pQuL52Q">
      <parameters__OperationSignature dataType__Parameter="_r1mHoItmEe-_pe7pQuL52Q" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_r85pgotmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_r2UgYItmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_r1nVwItmEe-_pe7pQuL52Q">
      <parameters__OperationSignature dataType__Parameter="_r2T5VItmEe-_pe7pQuL52Q" parameterName="request" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_r85pg4tmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_r2T5UYtmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_r2SrNItmEe-_pe7pQuL52Q">
      <parameters__OperationSignature dataType__Parameter="_r2T5UItmEe-_pe7pQuL52Q" parameterName="tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_r85phItmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_r2SrNYtmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_r2SrNItmEe-_pe7pQuL52Q">
      <parameters__OperationSignature dataType__Parameter="_r2SrMotmEe-_pe7pQuL52Q" parameterName="authorization" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_r2SrM4tmEe-_pe7pQuL52Q" parameterName="teleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_r85phYtmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_r1n80ItmEe-_pe7pQuL52Q" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_r1nVwItmEe-_pe7pQuL52Q">
      <parameters__OperationSignature dataType__Parameter="_r1mHoItmEe-_pe7pQuL52Q" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_r1mHoItmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_r1nVwItmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_r2SrMotmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_r2SrM4tmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_r2SrNItmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_r2T5UItmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_r2T5VItmEe-_pe7pQuL52Q" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
</repository:Repository>
