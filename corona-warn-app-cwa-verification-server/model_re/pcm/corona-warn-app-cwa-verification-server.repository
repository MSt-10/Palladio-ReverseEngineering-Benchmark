<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_MwThXOcoEe6SWepm4YOFHA">
  <components__Repository xsi:type="repository:BasicComponent" id="_MwCbmOcoEe6SWepm4YOFHA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MwCbl-coEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_MwCbk-coEe6SWepm4YOFHA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_MvTbz-coEe6SWepm4YOFHA" describedService__SEFF="_MpFfA-coEe6SWepm4YOFHA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_MvRmlecoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvRmnOcoEe6SWepm4YOFHA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_MvRmnOcoEe6SWepm4YOFHA" entityName="If Branch" predecessor_AbstractAction="_MvRmlecoEe6SWepm4YOFHA" successor_AbstractAction="_MvRmnecoEe6SWepm4YOFHA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvRmmecoEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_MvRmm-coEe6SWepm4YOFHA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MvRmlucoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvRml-coEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MvRml-coEe6SWepm4YOFHA" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_MvRmlucoEe6SWepm4YOFHA" successor_AbstractAction="_MvRmmOcoEe6SWepm4YOFHA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController.generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController.generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_MvRmmOcoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvRml-coEe6SWepm4YOFHA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_MvRmnecoEe6SWepm4YOFHA" entityName="stopWatch.start()" predecessor_AbstractAction="_MvRmnOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvTbzecoEe6SWepm4YOFHA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_MvTbzecoEe6SWepm4YOFHA" entityName="Switch Branch" predecessor_AbstractAction="_MvRmnecoEe6SWepm4YOFHA" successor_AbstractAction="_MvTbzucoEe6SWepm4YOFHA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvS0sucoEe6SWepm4YOFHA">
          <branchBehaviour_BranchTransition id="_MvS0tOcoEe6SWepm4YOFHA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MvRmnucoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvRmn-coEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_MvRmn-coEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvRmnucoEe6SWepm4YOFHA" successor_AbstractAction="_MvRmoOcoEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_MvRmoOcoEe6SWepm4YOFHA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_MvRmn-coEe6SWepm4YOFHA" successor_AbstractAction="_MvRmoecoEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_MvRmoecoEe6SWepm4YOFHA" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_MvRmoOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvSNoOcoEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_MvSNoOcoEe6SWepm4YOFHA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_MvRmoecoEe6SWepm4YOFHA" successor_AbstractAction="_MvSNoecoEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MvSNoecoEe6SWepm4YOFHA" entityName="deferredResult" predecessor_AbstractAction="_MvSNoOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvSNrucoEe6SWepm4YOFHA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_MvSNrucoEe6SWepm4YOFHA" entityName="If Branch" predecessor_AbstractAction="_MvSNoecoEe6SWepm4YOFHA" successor_AbstractAction="_MvSNr-coEe6SWepm4YOFHA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvSNq-coEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_MvSNrecoEe6SWepm4YOFHA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_MvSNoucoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvSNo-coEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvSNo-coEe6SWepm4YOFHA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_MvSNoucoEe6SWepm4YOFHA" successor_AbstractAction="_MvSNpOcoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvSNpOcoEe6SWepm4YOFHA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_MvSNo-coEe6SWepm4YOFHA" successor_AbstractAction="_MvSNpecoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvSNpecoEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvSNpOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvSNpucoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvSNpucoEe6SWepm4YOFHA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_MvSNpecoEe6SWepm4YOFHA" successor_AbstractAction="_MvSNp-coEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvSNp-coEe6SWepm4YOFHA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_MvSNpucoEe6SWepm4YOFHA" successor_AbstractAction="_MvSNqOcoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvSNqOcoEe6SWepm4YOFHA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_MvSNp-coEe6SWepm4YOFHA" successor_AbstractAction="_MvSNqecoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MvSNqecoEe6SWepm4YOFHA" entityName="deferredResult" predecessor_AbstractAction="_MvSNqOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvSNqucoEe6SWepm4YOFHA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_MvSNqucoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvSNqecoEe6SWepm4YOFHA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_MvSNr-coEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvSNrucoEe6SWepm4YOFHA" successor_AbstractAction="_MvS0sOcoEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_MvS0sOcoEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvSNr-coEe6SWepm4YOFHA" successor_AbstractAction="_MvS0secoEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_MvS0secoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvS0sOcoEe6SWepm4YOFHA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvTbxOcoEe6SWepm4YOFHA">
          <branchBehaviour_BranchTransition id="_MvTbxucoEe6SWepm4YOFHA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MvS0tecoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvTbwOcoEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_MvTbwOcoEe6SWepm4YOFHA" entityName="If Branch" predecessor_AbstractAction="_MvS0tecoEe6SWepm4YOFHA" successor_AbstractAction="_MvTbwecoEe6SWepm4YOFHA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvS0v-coEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_MvS0wecoEe6SWepm4YOFHA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_MvS0tucoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvS0t-coEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvS0t-coEe6SWepm4YOFHA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_MvS0tucoEe6SWepm4YOFHA" successor_AbstractAction="_MvS0uOcoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvS0uOcoEe6SWepm4YOFHA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_MvS0t-coEe6SWepm4YOFHA" successor_AbstractAction="_MvS0uecoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvS0uecoEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvS0uOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvS0uucoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvS0uucoEe6SWepm4YOFHA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_MvS0uecoEe6SWepm4YOFHA" successor_AbstractAction="_MvS0u-coEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvS0u-coEe6SWepm4YOFHA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_MvS0uucoEe6SWepm4YOFHA" successor_AbstractAction="_MvS0vOcoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvS0vOcoEe6SWepm4YOFHA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_MvS0u-coEe6SWepm4YOFHA" successor_AbstractAction="_MvS0vecoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MvS0vecoEe6SWepm4YOFHA" entityName="deferredResult" predecessor_AbstractAction="_MvS0vOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvS0vucoEe6SWepm4YOFHA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_MvS0vucoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvS0vecoEe6SWepm4YOFHA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_MvTbwecoEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvTbwOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvTbwucoEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_MvTbwucoEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvTbwecoEe6SWepm4YOFHA" successor_AbstractAction="_MvTbw-coEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_MvTbw-coEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvTbwucoEe6SWepm4YOFHA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvTbyucoEe6SWepm4YOFHA">
          <branchBehaviour_BranchTransition id="_MvTbzOcoEe6SWepm4YOFHA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MvTbx-coEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvTbyOcoEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_MvTbyOcoEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvTbx-coEe6SWepm4YOFHA" successor_AbstractAction="_MvTbyecoEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_MvTbyecoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvTbyOcoEe6SWepm4YOFHA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_MvTbzucoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvTbzecoEe6SWepm4YOFHA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_MwGF8-coEe6SWepm4YOFHA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MwGF8ecoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_MwCblucoEe6SWepm4YOFHA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MwGF8ucoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_MwCblecoEe6SWepm4YOFHA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_MvK44ecoEe6SWepm4YOFHA" describedService__SEFF="_MpE38ecoEe6SWepm4YOFHA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_MpeglOcoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvHOgOcoEe6SWepm4YOFHA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_MvHOgOcoEe6SWepm4YOFHA" entityName="If Branch" predecessor_AbstractAction="_MpeglOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvKR3-coEe6SWepm4YOFHA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Mphj4ecoEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_MpiK8OcoEe6SWepm4YOFHA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MpgVwOcoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_Mpg80OcoEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Mpg80OcoEe6SWepm4YOFHA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_MpgVwOcoEe6SWepm4YOFHA" successor_AbstractAction="_Mphj4OcoEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Mphj4OcoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_Mpg80OcoEe6SWepm4YOFHA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvGnc-coEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_MvGndecoEe6SWepm4YOFHA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MvGncOcoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvGncecoEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_MvGncecoEe6SWepm4YOFHA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_MvGncOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvGncucoEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_MvGncucoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvGncecoEe6SWepm4YOFHA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_MvKR3-coEe6SWepm4YOFHA" entityName="If Branch" predecessor_AbstractAction="_MvHOgOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvK44OcoEe6SWepm4YOFHA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvKR3OcoEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_MvKR3ucoEe6SWepm4YOFHA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MvHOgecoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvKR2ucoEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_MvKR2ucoEe6SWepm4YOFHA" entityName="If Branch" predecessor_AbstractAction="_MvHOgecoEe6SWepm4YOFHA" successor_AbstractAction="_MvKR2-coEe6SWepm4YOFHA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvKR0ucoEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_MvKR1OcoEe6SWepm4YOFHA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_MvHOgucoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvHOg-coEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvHOg-coEe6SWepm4YOFHA" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_MvHOgucoEe6SWepm4YOFHA" successor_AbstractAction="_MvKR0OcoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MvKR0OcoEe6SWepm4YOFHA" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_MvHOg-coEe6SWepm4YOFHA" successor_AbstractAction="_MvKR0ecoEe6SWepm4YOFHA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_MvKR0ecoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvKR0OcoEe6SWepm4YOFHA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvKR1-coEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_MvKR2ecoEe6SWepm4YOFHA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_MvKR1ecoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvKR1ucoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_MvKR1ucoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvKR1ecoEe6SWepm4YOFHA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_MvKR2-coEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvKR2ucoEe6SWepm4YOFHA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_MvK44OcoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvKR3-coEe6SWepm4YOFHA"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_MvK45ucoEe6SWepm4YOFHA" describedService__SEFF="_MoQ_oOcoEe6SWepm4YOFHA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_MvK44-coEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvK45OcoEe6SWepm4YOFHA"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MvK45OcoEe6SWepm4YOFHA" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_MvK44-coEe6SWepm4YOFHA" successor_AbstractAction="_MvK45ecoEe6SWepm4YOFHA">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_MvK45ecoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvK45OcoEe6SWepm4YOFHA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_MwKXbecoEe6SWepm4YOFHA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MwKXbOcoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_MwCbkucoEe6SWepm4YOFHA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_MvRmk-coEe6SWepm4YOFHA" describedService__SEFF="_MpEQ4ucoEe6SWepm4YOFHA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_MvPKWecoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvPKYOcoEe6SWepm4YOFHA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_MvPKYOcoEe6SWepm4YOFHA" entityName="If Branch" predecessor_AbstractAction="_MvPKWecoEe6SWepm4YOFHA" successor_AbstractAction="_MvPKYecoEe6SWepm4YOFHA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvPKXecoEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_MvPKX-coEe6SWepm4YOFHA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MvPKWucoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvPKW-coEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MvPKW-coEe6SWepm4YOFHA" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_MvPKWucoEe6SWepm4YOFHA" successor_AbstractAction="_MvPKXOcoEe6SWepm4YOFHA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_MvPKXOcoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvPKW-coEe6SWepm4YOFHA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_MvPKYecoEe6SWepm4YOFHA" entityName="stopWatch.start()" predecessor_AbstractAction="_MvPKYOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvRmkOcoEe6SWepm4YOFHA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_MvRmkOcoEe6SWepm4YOFHA" entityName="If Branch" predecessor_AbstractAction="_MvPKYecoEe6SWepm4YOFHA" successor_AbstractAction="_MvRmkecoEe6SWepm4YOFHA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvQ_jucoEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_MvQ_kOcoEe6SWepm4YOFHA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MvPxYOcoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvQ_jOcoEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_MvQ_jOcoEe6SWepm4YOFHA" entityName="Switch Branch" predecessor_AbstractAction="_MvPxYOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvQ_jecoEe6SWepm4YOFHA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvQYd-coEe6SWepm4YOFHA">
                <branchBehaviour_BranchTransition id="_MvQYeecoEe6SWepm4YOFHA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_MvPxYecoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvPxYucoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvPxYucoEe6SWepm4YOFHA" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_MvPxYecoEe6SWepm4YOFHA" successor_AbstractAction="_MvPxbucoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_MvPxbucoEe6SWepm4YOFHA" entityName="If Branch" predecessor_AbstractAction="_MvPxYucoEe6SWepm4YOFHA" successor_AbstractAction="_MvPxb-coEe6SWepm4YOFHA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvPxa-coEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_MvPxbecoEe6SWepm4YOFHA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_MvPxY-coEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvPxaecoEe6SWepm4YOFHA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_MvPxaecoEe6SWepm4YOFHA" entityName="If Branch" predecessor_AbstractAction="_MvPxY-coEe6SWepm4YOFHA" successor_AbstractAction="_MvPxaucoEe6SWepm4YOFHA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvPxZucoEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_MvPxaOcoEe6SWepm4YOFHA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_MvPxZOcoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvPxZecoEe6SWepm4YOFHA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_MvPxZecoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvPxZOcoEe6SWepm4YOFHA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_MvPxaucoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvPxaecoEe6SWepm4YOFHA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvPxb-coEe6SWepm4YOFHA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_MvPxbucoEe6SWepm4YOFHA" successor_AbstractAction="_MvPxcOcoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvPxcOcoEe6SWepm4YOFHA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_MvPxb-coEe6SWepm4YOFHA" successor_AbstractAction="_MvPxcecoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvPxcecoEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvPxcOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvPxcucoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvPxcucoEe6SWepm4YOFHA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_MvPxcecoEe6SWepm4YOFHA" successor_AbstractAction="_MvPxc-coEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvPxc-coEe6SWepm4YOFHA" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_MvPxcucoEe6SWepm4YOFHA" successor_AbstractAction="_MvPxdOcoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MvPxdOcoEe6SWepm4YOFHA" entityName="deferredResult" predecessor_AbstractAction="_MvPxc-coEe6SWepm4YOFHA" successor_AbstractAction="_MvQYcOcoEe6SWepm4YOFHA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvQYcOcoEe6SWepm4YOFHA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_MvPxdOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvQYcecoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvQYcecoEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvQYcOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvQYcucoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvQYcucoEe6SWepm4YOFHA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_MvQYcecoEe6SWepm4YOFHA" successor_AbstractAction="_MvQYc-coEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvQYc-coEe6SWepm4YOFHA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_MvQYcucoEe6SWepm4YOFHA" successor_AbstractAction="_MvQYdOcoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MvQYdOcoEe6SWepm4YOFHA" entityName="deferredResult" predecessor_AbstractAction="_MvQYc-coEe6SWepm4YOFHA" successor_AbstractAction="_MvQYdecoEe6SWepm4YOFHA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvQYdecoEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvQYdOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvQYducoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_MvQYducoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvQYdecoEe6SWepm4YOFHA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvQ_g-coEe6SWepm4YOFHA">
                <branchBehaviour_BranchTransition id="_MvQ_hecoEe6SWepm4YOFHA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_MvQYeucoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvQYe-coEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvQYe-coEe6SWepm4YOFHA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_MvQYeucoEe6SWepm4YOFHA" successor_AbstractAction="_MvQYfOcoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvQYfOcoEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvQYe-coEe6SWepm4YOFHA" successor_AbstractAction="_MvQYfecoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvQYfecoEe6SWepm4YOFHA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_MvQYfOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvQYfucoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvQYfucoEe6SWepm4YOFHA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_MvQYfecoEe6SWepm4YOFHA" successor_AbstractAction="_MvQ_gOcoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MvQ_gOcoEe6SWepm4YOFHA" entityName="deferredResult" predecessor_AbstractAction="_MvQYfucoEe6SWepm4YOFHA" successor_AbstractAction="_MvQ_gecoEe6SWepm4YOFHA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvQ_gecoEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvQ_gOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvQ_gucoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_MvQ_gucoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvQ_gecoEe6SWepm4YOFHA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvQ_iecoEe6SWepm4YOFHA">
                <branchBehaviour_BranchTransition id="_MvQ_i-coEe6SWepm4YOFHA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_MvQ_hucoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvQ_h-coEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvQ_h-coEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvQ_hucoEe6SWepm4YOFHA" successor_AbstractAction="_MvQ_iOcoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_MvQ_iOcoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvQ_h-coEe6SWepm4YOFHA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_MvQ_jecoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvQ_jOcoEe6SWepm4YOFHA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_MvRmkecoEe6SWepm4YOFHA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_MvRmkOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvRmkucoEe6SWepm4YOFHA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_MvRmkucoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvRmkecoEe6SWepm4YOFHA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_MwMzoecoEe6SWepm4YOFHA" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_MwMzo-coEe6SWepm4YOFHA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MwMzoucoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_MwCblOcoEe6SWepm4YOFHA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_MvPKV-coEe6SWepm4YOFHA" describedService__SEFF="_MpFfBucoEe6SWepm4YOFHA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_MvNVIecoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvNVKOcoEe6SWepm4YOFHA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_MvNVKOcoEe6SWepm4YOFHA" entityName="If Branch" predecessor_AbstractAction="_MvNVIecoEe6SWepm4YOFHA" successor_AbstractAction="_MvNVKecoEe6SWepm4YOFHA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvNVJecoEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_MvNVJ-coEe6SWepm4YOFHA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MvNVIucoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvNVI-coEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MvNVI-coEe6SWepm4YOFHA" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_MvNVIucoEe6SWepm4YOFHA" successor_AbstractAction="_MvNVJOcoEe6SWepm4YOFHA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_MvNVJOcoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvNVI-coEe6SWepm4YOFHA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_MvNVKecoEe6SWepm4YOFHA" entityName="stopWatch.start()" predecessor_AbstractAction="_MvNVKOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvPKVecoEe6SWepm4YOFHA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_MvPKVecoEe6SWepm4YOFHA" entityName="If Branch" predecessor_AbstractAction="_MvNVKecoEe6SWepm4YOFHA" successor_AbstractAction="_MvPKVucoEe6SWepm4YOFHA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvPKUucoEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_MvPKVOcoEe6SWepm4YOFHA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MvNVKucoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvPKUOcoEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_MvPKUOcoEe6SWepm4YOFHA" entityName="If Branch" predecessor_AbstractAction="_MvNVKucoEe6SWepm4YOFHA" successor_AbstractAction="_MvPKUecoEe6SWepm4YOFHA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvOjSucoEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_MvOjTOcoEe6SWepm4YOFHA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_MvNVK-coEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvOjQOcoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_MvOjQOcoEe6SWepm4YOFHA" entityName="Switch Branch" predecessor_AbstractAction="_MvNVK-coEe6SWepm4YOFHA" successor_AbstractAction="_MvOjQecoEe6SWepm4YOFHA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvN8NOcoEe6SWepm4YOFHA">
                      <branchBehaviour_BranchTransition id="_MvN8NucoEe6SWepm4YOFHA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_MvNVLOcoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvN8MecoEe6SWepm4YOFHA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_MvN8MecoEe6SWepm4YOFHA" entityName="If Branch" predecessor_AbstractAction="_MvNVLOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvN8MucoEe6SWepm4YOFHA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvNVMOcoEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_MvN8MOcoEe6SWepm4YOFHA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_MvNVLecoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvNVLucoEe6SWepm4YOFHA"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_MvNVLucoEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvNVLecoEe6SWepm4YOFHA" successor_AbstractAction="_MvNVL-coEe6SWepm4YOFHA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_MvNVL-coEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvNVLucoEe6SWepm4YOFHA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_MvN8MucoEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvN8MecoEe6SWepm4YOFHA" successor_AbstractAction="_MvN8M-coEe6SWepm4YOFHA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_MvN8M-coEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvN8MucoEe6SWepm4YOFHA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvN8OucoEe6SWepm4YOFHA">
                      <branchBehaviour_BranchTransition id="_MvN8POcoEe6SWepm4YOFHA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_MvN8N-coEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvN8OOcoEe6SWepm4YOFHA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_MvN8OOcoEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvN8N-coEe6SWepm4YOFHA" successor_AbstractAction="_MvN8OecoEe6SWepm4YOFHA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_MvN8OecoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvN8OOcoEe6SWepm4YOFHA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvN8QOcoEe6SWepm4YOFHA">
                      <branchBehaviour_BranchTransition id="_MvN8QucoEe6SWepm4YOFHA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_MvN8PecoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvN8PucoEe6SWepm4YOFHA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_MvN8PucoEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvN8PecoEe6SWepm4YOFHA" successor_AbstractAction="_MvN8P-coEe6SWepm4YOFHA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_MvN8P-coEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvN8PucoEe6SWepm4YOFHA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvOjQecoEe6SWepm4YOFHA" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_MvOjQOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvOjQucoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvOjQucoEe6SWepm4YOFHA" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_MvOjQecoEe6SWepm4YOFHA" successor_AbstractAction="_MvOjQ-coEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvOjQ-coEe6SWepm4YOFHA" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_MvOjQucoEe6SWepm4YOFHA" successor_AbstractAction="_MvOjROcoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvOjROcoEe6SWepm4YOFHA" entityName="stopWatch.stop()" predecessor_AbstractAction="_MvOjQ-coEe6SWepm4YOFHA" successor_AbstractAction="_MvOjRecoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvOjRecoEe6SWepm4YOFHA" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_MvOjROcoEe6SWepm4YOFHA" successor_AbstractAction="_MvOjRucoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvOjRucoEe6SWepm4YOFHA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_MvOjRecoEe6SWepm4YOFHA" successor_AbstractAction="_MvOjR-coEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvOjR-coEe6SWepm4YOFHA" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_MvOjRucoEe6SWepm4YOFHA" successor_AbstractAction="_MvOjSOcoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MvOjSOcoEe6SWepm4YOFHA" entityName="deferredResult" predecessor_AbstractAction="_MvOjR-coEe6SWepm4YOFHA" successor_AbstractAction="_MvOjSecoEe6SWepm4YOFHA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_MvOjSecoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvOjSOcoEe6SWepm4YOFHA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_MvPKUecoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvPKUOcoEe6SWepm4YOFHA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_MvPKVucoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvPKVecoEe6SWepm4YOFHA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_MwOo3ucoEe6SWepm4YOFHA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MwOo3ecoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_MwCbkecoEe6SWepm4YOFHA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_MvMuJOcoEe6SWepm4YOFHA" describedService__SEFF="_MpE39OcoEe6SWepm4YOFHA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_MvK46OcoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvMuIecoEe6SWepm4YOFHA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_MvMuIecoEe6SWepm4YOFHA" entityName="If Branch" predecessor_AbstractAction="_MvK46OcoEe6SWepm4YOFHA" successor_AbstractAction="_MvMuIucoEe6SWepm4YOFHA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvMuHucoEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_MvMuIOcoEe6SWepm4YOFHA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_MvK46ecoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvMuHOcoEe6SWepm4YOFHA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_MvMuHOcoEe6SWepm4YOFHA" entityName="Switch Branch" predecessor_AbstractAction="_MvK46ecoEe6SWepm4YOFHA" successor_AbstractAction="_MvMuHecoEe6SWepm4YOFHA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvMHEOcoEe6SWepm4YOFHA">
                <branchBehaviour_BranchTransition id="_MvMuEOcoEe6SWepm4YOFHA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_MvLf8OcoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvMHCucoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_MvMHCucoEe6SWepm4YOFHA" entityName="If Branch" predecessor_AbstractAction="_MvLf8OcoEe6SWepm4YOFHA" successor_AbstractAction="_MvMHC-coEe6SWepm4YOFHA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvMHB-coEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_MvMHCecoEe6SWepm4YOFHA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_MvLf8ecoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvMHBecoEe6SWepm4YOFHA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_MvMHBecoEe6SWepm4YOFHA" entityName="If Branch" predecessor_AbstractAction="_MvLf8ecoEe6SWepm4YOFHA" successor_AbstractAction="_MvMHBucoEe6SWepm4YOFHA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvMHAucoEe6SWepm4YOFHA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_MvMHBOcoEe6SWepm4YOFHA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_MvMHAOcoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvMHAecoEe6SWepm4YOFHA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_MvMHAecoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvMHAOcoEe6SWepm4YOFHA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_MvMHBucoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvMHBecoEe6SWepm4YOFHA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvMHC-coEe6SWepm4YOFHA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_MvMHCucoEe6SWepm4YOFHA" successor_AbstractAction="_MvMHDOcoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvMHDOcoEe6SWepm4YOFHA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_MvMHC-coEe6SWepm4YOFHA" successor_AbstractAction="_MvMHDecoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_MvMHDecoEe6SWepm4YOFHA" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_MvMHDOcoEe6SWepm4YOFHA" successor_AbstractAction="_MvMHDucoEe6SWepm4YOFHA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvMHDucoEe6SWepm4YOFHA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_MvMHDecoEe6SWepm4YOFHA" successor_AbstractAction="_MvMHD-coEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_MvMHD-coEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvMHDucoEe6SWepm4YOFHA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvMuFOcoEe6SWepm4YOFHA">
                <branchBehaviour_BranchTransition id="_MvMuFucoEe6SWepm4YOFHA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_MvMuEecoEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvMuEucoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_MvMuEucoEe6SWepm4YOFHA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_MvMuEecoEe6SWepm4YOFHA" successor_AbstractAction="_MvMuE-coEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_MvMuE-coEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvMuEucoEe6SWepm4YOFHA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_MvMuGecoEe6SWepm4YOFHA">
                <branchBehaviour_BranchTransition id="_MvMuG-coEe6SWepm4YOFHA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_MvMuF-coEe6SWepm4YOFHA" entityName="Start Action" successor_AbstractAction="_MvMuGOcoEe6SWepm4YOFHA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_MvMuGOcoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvMuF-coEe6SWepm4YOFHA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_MvMuHecoEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvMuHOcoEe6SWepm4YOFHA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_MvMuIucoEe6SWepm4YOFHA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_MvMuIecoEe6SWepm4YOFHA" successor_AbstractAction="_MvMuI-coEe6SWepm4YOFHA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_MvMuI-coEe6SWepm4YOFHA" entityName="Stop Action" predecessor_AbstractAction="_MvMuIucoEe6SWepm4YOFHA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_MwS6QucoEe6SWepm4YOFHA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_MwThVOcoEe6SWepm4YOFHA" encapsulatedComponent__AssemblyContext="_MwGF8-coEe6SWepm4YOFHA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_MwUvcecoEe6SWepm4YOFHA" innerProvidedRole_ProvidedDelegationConnector="_MwGF8ucoEe6SWepm4YOFHA" outerProvidedRole_ProvidedDelegationConnector="_MwS6QecoEe6SWepm4YOFHA" assemblyContext_ProvidedDelegationConnector="_MwThVOcoEe6SWepm4YOFHA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_MwUvcucoEe6SWepm4YOFHA" innerProvidedRole_ProvidedDelegationConnector="_MwGF8ecoEe6SWepm4YOFHA" outerProvidedRole_ProvidedDelegationConnector="_MwS6QOcoEe6SWepm4YOFHA" assemblyContext_ProvidedDelegationConnector="_MwThVOcoEe6SWepm4YOFHA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MwS6QOcoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_MwCblucoEe6SWepm4YOFHA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MwS6QecoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_MwCblecoEe6SWepm4YOFHA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_MwS6Q-coEe6SWepm4YOFHA" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_MwThUucoEe6SWepm4YOFHA" encapsulatedComponent__AssemblyContext="_MwMzoecoEe6SWepm4YOFHA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_MwS6RecoEe6SWepm4YOFHA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_MwThWOcoEe6SWepm4YOFHA" encapsulatedComponent__AssemblyContext="_MwMzo-coEe6SWepm4YOFHA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_MwUvdOcoEe6SWepm4YOFHA" innerProvidedRole_ProvidedDelegationConnector="_MwMzoucoEe6SWepm4YOFHA" outerProvidedRole_ProvidedDelegationConnector="_MwS6ROcoEe6SWepm4YOFHA" assemblyContext_ProvidedDelegationConnector="_MwThWOcoEe6SWepm4YOFHA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MwS6ROcoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_MwCblOcoEe6SWepm4YOFHA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_MwS6R-coEe6SWepm4YOFHA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_MwThVucoEe6SWepm4YOFHA" encapsulatedComponent__AssemblyContext="_MwOo3ucoEe6SWepm4YOFHA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_MwUvcOcoEe6SWepm4YOFHA" innerProvidedRole_ProvidedDelegationConnector="_MwOo3ecoEe6SWepm4YOFHA" outerProvidedRole_ProvidedDelegationConnector="_MwS6RucoEe6SWepm4YOFHA" assemblyContext_ProvidedDelegationConnector="_MwThVucoEe6SWepm4YOFHA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MwS6RucoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_MwCbkecoEe6SWepm4YOFHA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_MwS6SecoEe6SWepm4YOFHA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_MwThUOcoEe6SWepm4YOFHA" encapsulatedComponent__AssemblyContext="_MwKXbecoEe6SWepm4YOFHA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_MwUvc-coEe6SWepm4YOFHA" innerProvidedRole_ProvidedDelegationConnector="_MwKXbOcoEe6SWepm4YOFHA" outerProvidedRole_ProvidedDelegationConnector="_MwS6SOcoEe6SWepm4YOFHA" assemblyContext_ProvidedDelegationConnector="_MwThUOcoEe6SWepm4YOFHA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MwS6SOcoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_MwCbkucoEe6SWepm4YOFHA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_MwS6S-coEe6SWepm4YOFHA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_MwThWucoEe6SWepm4YOFHA" encapsulatedComponent__AssemblyContext="_MwCbmOcoEe6SWepm4YOFHA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_MwUIYOcoEe6SWepm4YOFHA" innerProvidedRole_ProvidedDelegationConnector="_MwCbl-coEe6SWepm4YOFHA" outerProvidedRole_ProvidedDelegationConnector="_MwS6SucoEe6SWepm4YOFHA" assemblyContext_ProvidedDelegationConnector="_MwThWucoEe6SWepm4YOFHA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_MwS6SucoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_MwCbk-coEe6SWepm4YOFHA"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_MwCbkecoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_MpE39OcoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_MoQYkOcoEe6SWepm4YOFHA">
      <parameters__OperationSignature dataType__Parameter="_MpEQ4OcoEe6SWepm4YOFHA" parameterName="RegistrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_MwCbkucoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_MpEQ4ucoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_MpEQ4ecoEe6SWepm4YOFHA">
      <parameters__OperationSignature dataType__Parameter="_MpEQ4OcoEe6SWepm4YOFHA" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_MwCbk-coEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_MpFfA-coEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_MpEQ4ecoEe6SWepm4YOFHA">
      <parameters__OperationSignature dataType__Parameter="_MpFfAucoEe6SWepm4YOFHA" parameterName="RegistrationTokenRequest" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_MwCblOcoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_MpFfBucoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_MpEQ4ecoEe6SWepm4YOFHA">
      <parameters__OperationSignature dataType__Parameter="_MpEQ4OcoEe6SWepm4YOFHA" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_MwCblecoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_MoQ_oOcoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_MoQYkOcoEe6SWepm4YOFHA">
      <parameters__OperationSignature dataType__Parameter="_MoPKcOcoEe6SWepm4YOFHA" parameterName="Tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_MwCblucoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_MpE38ecoEe6SWepm4YOFHA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_MoQYkOcoEe6SWepm4YOFHA">
      <parameters__OperationSignature dataType__Parameter="_MpEQ5ecoEe6SWepm4YOFHA" parameterName="AuthorizationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_MpE38OcoEe6SWepm4YOFHA" parameterName="TeleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_MoPKcOcoEe6SWepm4YOFHA" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_MoQYkOcoEe6SWepm4YOFHA" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_MpEQ4OcoEe6SWepm4YOFHA" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_MpEQ4ecoEe6SWepm4YOFHA" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_MpEQ5ecoEe6SWepm4YOFHA" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_MpE38OcoEe6SWepm4YOFHA" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_MpFfAucoEe6SWepm4YOFHA" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
</repository:Repository>
