<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_D9TG7FLREe-av-F7w759ZA">
  <components__Repository xsi:type="repository:BasicComponent" id="_D9AzBlLREe-av-F7w759ZA" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_D9AzCVLREe-av-F7w759ZA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_D9AzB1LREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_D9AzAlLREe-av-F7w759ZA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_D9AzCFLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_D9AzBVLREe-av-F7w759ZA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_D8WEplLREe-av-F7w759ZA" describedService__SEFF="_D2NAYFLREe-av-F7w759ZA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_D8U2hlLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8Vdl1LREe-av-F7w759ZA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_D8Vdl1LREe-av-F7w759ZA" entityName="If Branch" predecessor_AbstractAction="_D8U2hlLREe-av-F7w759ZA" successor_AbstractAction="_D8WEpFLREe-av-F7w759ZA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8U2ilLREe-av-F7w759ZA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_D8VdkFLREe-av-F7w759ZA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_D8U2h1LREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8U2iFLREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_D8U2iFLREe-av-F7w759ZA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_D8U2h1LREe-av-F7w759ZA" successor_AbstractAction="_D8U2iVLREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_D8U2iVLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8U2iFLREe-av-F7w759ZA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8VdlFLREe-av-F7w759ZA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_D8VdllLREe-av-F7w759ZA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_D8VdkVLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8VdklLREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_D8VdklLREe-av-F7w759ZA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_D8VdkVLREe-av-F7w759ZA" successor_AbstractAction="_D8Vdk1LREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_D8Vdk1LREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8VdklLREe-av-F7w759ZA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_D8WEpFLREe-av-F7w759ZA" entityName="If Branch" predecessor_AbstractAction="_D8Vdl1LREe-av-F7w759ZA" successor_AbstractAction="_D8WEpVLREe-av-F7w759ZA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8WEoVLREe-av-F7w759ZA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_D8WEo1LREe-av-F7w759ZA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_D8VdmFLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8VdpVLREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_D8VdpVLREe-av-F7w759ZA" entityName="If Branch" predecessor_AbstractAction="_D8VdmFLREe-av-F7w759ZA" successor_AbstractAction="_D8WEoFLREe-av-F7w759ZA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8VdnVLREe-av-F7w759ZA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_D8Vdn1LREe-av-F7w759ZA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_D8VdmVLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8VdmlLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8VdmlLREe-av-F7w759ZA" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_D8VdmVLREe-av-F7w759ZA" successor_AbstractAction="_D8Vdm1LREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_D8Vdm1LREe-av-F7w759ZA" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_D8VdmlLREe-av-F7w759ZA" successor_AbstractAction="_D8VdnFLREe-av-F7w759ZA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_D8VdnFLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8Vdm1LREe-av-F7w759ZA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8VdolLREe-av-F7w759ZA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_D8VdpFLREe-av-F7w759ZA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_D8VdoFLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8VdoVLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_D8VdoVLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8VdoFLREe-av-F7w759ZA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_D8WEoFLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8VdpVLREe-av-F7w759ZA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_D8WEpVLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8WEpFLREe-av-F7w759ZA"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_D8U2hFLREe-av-F7w759ZA" describedService__SEFF="_D2LyQ1LREe-av-F7w759ZA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_D8U2gVLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8U2glLREe-av-F7w759ZA"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_D8U2glLREe-av-F7w759ZA" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_D8U2gVLREe-av-F7w759ZA" successor_AbstractAction="_D8U2g1LREe-av-F7w759ZA">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_D8U2g1LREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8U2glLREe-av-F7w759ZA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_D9G5pFLREe-av-F7w759ZA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_D9G5o1LREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_D9AzAVLREe-av-F7w759ZA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_D8aWH1LREe-av-F7w759ZA" describedService__SEFF="_D1M60FLREe-av-F7w759ZA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_D8X54FLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8Yg4VLREe-av-F7w759ZA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_D8Yg4VLREe-av-F7w759ZA" entityName="If Branch" predecessor_AbstractAction="_D8X54FLREe-av-F7w759ZA" successor_AbstractAction="_D8Yg4lLREe-av-F7w759ZA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8X55FLREe-av-F7w759ZA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_D8Yg4FLREe-av-F7w759ZA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_D8X54VLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8X54lLREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_D8X54lLREe-av-F7w759ZA" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_D8X54VLREe-av-F7w759ZA" successor_AbstractAction="_D8X541LREe-av-F7w759ZA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_D8X541LREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8X54lLREe-av-F7w759ZA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_D8Yg4lLREe-av-F7w759ZA" entityName="stopWatch.start()" predecessor_AbstractAction="_D8Yg4VLREe-av-F7w759ZA" successor_AbstractAction="_D8aWHFLREe-av-F7w759ZA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_D8aWHFLREe-av-F7w759ZA" entityName="If Branch" predecessor_AbstractAction="_D8Yg4lLREe-av-F7w759ZA" successor_AbstractAction="_D8aWHVLREe-av-F7w759ZA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8aWGVLREe-av-F7w759ZA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_D8aWG1LREe-av-F7w759ZA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_D8Yg41LREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8aWF1LREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_D8aWF1LREe-av-F7w759ZA" entityName="Switch Branch" predecessor_AbstractAction="_D8Yg41LREe-av-F7w759ZA" successor_AbstractAction="_D8aWGFLREe-av-F7w759ZA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8ZvAlLREe-av-F7w759ZA">
                <branchBehaviour_BranchTransition id="_D8ZvBFLREe-av-F7w759ZA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_D8Yg5FLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8Yg5VLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8Yg5VLREe-av-F7w759ZA" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_D8Yg5FLREe-av-F7w759ZA" successor_AbstractAction="_D8Yg8VLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_D8Yg8VLREe-av-F7w759ZA" entityName="If Branch" predecessor_AbstractAction="_D8Yg5VLREe-av-F7w759ZA" successor_AbstractAction="_D8Yg8lLREe-av-F7w759ZA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8Yg7lLREe-av-F7w759ZA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_D8Yg8FLREe-av-F7w759ZA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_D8Yg5lLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8Yg7FLREe-av-F7w759ZA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_D8Yg7FLREe-av-F7w759ZA" entityName="If Branch" predecessor_AbstractAction="_D8Yg5lLREe-av-F7w759ZA" successor_AbstractAction="_D8Yg7VLREe-av-F7w759ZA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8Yg6VLREe-av-F7w759ZA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_D8Yg61LREe-av-F7w759ZA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_D8Yg51LREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8Yg6FLREe-av-F7w759ZA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_D8Yg6FLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8Yg51LREe-av-F7w759ZA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_D8Yg7VLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8Yg7FLREe-av-F7w759ZA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8Yg8lLREe-av-F7w759ZA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_D8Yg8VLREe-av-F7w759ZA" successor_AbstractAction="_D8Yg81LREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8Yg81LREe-av-F7w759ZA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_D8Yg8lLREe-av-F7w759ZA" successor_AbstractAction="_D8Yg9FLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8Yg9FLREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8Yg81LREe-av-F7w759ZA" successor_AbstractAction="_D8Yg9VLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8Yg9VLREe-av-F7w759ZA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_D8Yg9FLREe-av-F7w759ZA" successor_AbstractAction="_D8Yg9lLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8Yg9lLREe-av-F7w759ZA" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_D8Yg9VLREe-av-F7w759ZA" successor_AbstractAction="_D8ZH8FLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_D8ZH8FLREe-av-F7w759ZA" entityName="deferredResult" predecessor_AbstractAction="_D8Yg9lLREe-av-F7w759ZA" successor_AbstractAction="_D8ZH8VLREe-av-F7w759ZA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8ZH8VLREe-av-F7w759ZA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_D8ZH8FLREe-av-F7w759ZA" successor_AbstractAction="_D8ZH8lLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8ZH8lLREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8ZH8VLREe-av-F7w759ZA" successor_AbstractAction="_D8ZH81LREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8ZH81LREe-av-F7w759ZA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_D8ZH8lLREe-av-F7w759ZA" successor_AbstractAction="_D8ZH9FLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8ZH9FLREe-av-F7w759ZA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_D8ZH81LREe-av-F7w759ZA" successor_AbstractAction="_D8ZH9VLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_D8ZH9VLREe-av-F7w759ZA" entityName="deferredResult" predecessor_AbstractAction="_D8ZH9FLREe-av-F7w759ZA" successor_AbstractAction="_D8ZvAFLREe-av-F7w759ZA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8ZvAFLREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8ZH9VLREe-av-F7w759ZA" successor_AbstractAction="_D8ZvAVLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_D8ZvAVLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8ZvAFLREe-av-F7w759ZA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8ZvDVLREe-av-F7w759ZA">
                <branchBehaviour_BranchTransition id="_D8aWEFLREe-av-F7w759ZA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_D8ZvBVLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8ZvBlLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8ZvBlLREe-av-F7w759ZA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_D8ZvBVLREe-av-F7w759ZA" successor_AbstractAction="_D8ZvB1LREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8ZvB1LREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8ZvBlLREe-av-F7w759ZA" successor_AbstractAction="_D8ZvCFLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8ZvCFLREe-av-F7w759ZA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_D8ZvB1LREe-av-F7w759ZA" successor_AbstractAction="_D8ZvCVLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8ZvCVLREe-av-F7w759ZA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_D8ZvCFLREe-av-F7w759ZA" successor_AbstractAction="_D8ZvClLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_D8ZvClLREe-av-F7w759ZA" entityName="deferredResult" predecessor_AbstractAction="_D8ZvCVLREe-av-F7w759ZA" successor_AbstractAction="_D8ZvC1LREe-av-F7w759ZA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8ZvC1LREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8ZvClLREe-av-F7w759ZA" successor_AbstractAction="_D8ZvDFLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_D8ZvDFLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8ZvC1LREe-av-F7w759ZA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8aWFFLREe-av-F7w759ZA">
                <branchBehaviour_BranchTransition id="_D8aWFlLREe-av-F7w759ZA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_D8aWEVLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8aWElLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8aWElLREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8aWEVLREe-av-F7w759ZA" successor_AbstractAction="_D8aWE1LREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_D8aWE1LREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8aWElLREe-av-F7w759ZA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_D8aWGFLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8aWF1LREe-av-F7w759ZA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_D8aWHVLREe-av-F7w759ZA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_D8aWHFLREe-av-F7w759ZA" successor_AbstractAction="_D8aWHlLREe-av-F7w759ZA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_D8aWHlLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8aWHVLREe-av-F7w759ZA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_D9JV51LREe-av-F7w759ZA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_D9JV5lLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_D9AzAFLREe-av-F7w759ZA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_D8TBWlLREe-av-F7w759ZA" describedService__SEFF="_D2LLMFLREe-av-F7w759ZA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_D2la4VLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8QlEFLREe-av-F7w759ZA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_D8QlEFLREe-av-F7w759ZA" entityName="If Branch" predecessor_AbstractAction="_D2la4VLREe-av-F7w759ZA" successor_AbstractAction="_D8QlEVLREe-av-F7w759ZA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8PW8FLREe-av-F7w759ZA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_D8P-AFLREe-av-F7w759ZA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_D2mpAFLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8Ov4FLREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_D8Ov4FLREe-av-F7w759ZA" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_D2mpAFLREe-av-F7w759ZA" successor_AbstractAction="_D8Ov4VLREe-av-F7w759ZA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_D8Ov4VLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8Ov4FLREe-av-F7w759ZA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_D8QlEVLREe-av-F7w759ZA" entityName="stopWatch.start()" predecessor_AbstractAction="_D8QlEFLREe-av-F7w759ZA" successor_AbstractAction="_D8TBWFLREe-av-F7w759ZA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_D8TBWFLREe-av-F7w759ZA" entityName="If Branch" predecessor_AbstractAction="_D8QlEVLREe-av-F7w759ZA" successor_AbstractAction="_D8TBWVLREe-av-F7w759ZA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8TBVVLREe-av-F7w759ZA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_D8TBV1LREe-av-F7w759ZA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_D8QlElLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8TBU1LREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_D8TBU1LREe-av-F7w759ZA" entityName="If Branch" predecessor_AbstractAction="_D8QlElLREe-av-F7w759ZA" successor_AbstractAction="_D8TBVFLREe-av-F7w759ZA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8TBUFLREe-av-F7w759ZA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_D8TBUlLREe-av-F7w759ZA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_D8RMIFLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8SaQVLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_D8SaQVLREe-av-F7w759ZA" entityName="Switch Branch" predecessor_AbstractAction="_D8RMIFLREe-av-F7w759ZA" successor_AbstractAction="_D8SaQlLREe-av-F7w759ZA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8RzM1LREe-av-F7w759ZA">
                      <branchBehaviour_BranchTransition id="_D8RzNVLREe-av-F7w759ZA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_D8RMIVLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8RzMFLREe-av-F7w759ZA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_D8RzMFLREe-av-F7w759ZA" entityName="If Branch" predecessor_AbstractAction="_D8RMIVLREe-av-F7w759ZA" successor_AbstractAction="_D8RzMVLREe-av-F7w759ZA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8RMJVLREe-av-F7w759ZA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_D8RMJ1LREe-av-F7w759ZA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_D8RMIlLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8RMI1LREe-av-F7w759ZA"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_D8RMI1LREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8RMIlLREe-av-F7w759ZA" successor_AbstractAction="_D8RMJFLREe-av-F7w759ZA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_D8RMJFLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8RMI1LREe-av-F7w759ZA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_D8RzMVLREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8RzMFLREe-av-F7w759ZA" successor_AbstractAction="_D8RzMlLREe-av-F7w759ZA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_D8RzMlLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8RzMVLREe-av-F7w759ZA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8RzOVLREe-av-F7w759ZA">
                      <branchBehaviour_BranchTransition id="_D8RzO1LREe-av-F7w759ZA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_D8RzNlLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8RzN1LREe-av-F7w759ZA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_D8RzN1LREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8RzNlLREe-av-F7w759ZA" successor_AbstractAction="_D8RzOFLREe-av-F7w759ZA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_D8RzOFLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8RzN1LREe-av-F7w759ZA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8RzP1LREe-av-F7w759ZA">
                      <branchBehaviour_BranchTransition id="_D8SaQFLREe-av-F7w759ZA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_D8RzPFLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8RzPVLREe-av-F7w759ZA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_D8RzPVLREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8RzPFLREe-av-F7w759ZA" successor_AbstractAction="_D8RzPlLREe-av-F7w759ZA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_D8RzPlLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8RzPVLREe-av-F7w759ZA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8SaQlLREe-av-F7w759ZA" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_D8SaQVLREe-av-F7w759ZA" successor_AbstractAction="_D8SaQ1LREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8SaQ1LREe-av-F7w759ZA" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_D8SaQlLREe-av-F7w759ZA" successor_AbstractAction="_D8SaRFLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8SaRFLREe-av-F7w759ZA" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_D8SaQ1LREe-av-F7w759ZA" successor_AbstractAction="_D8SaRVLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8SaRVLREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8SaRFLREe-av-F7w759ZA" successor_AbstractAction="_D8SaRlLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8SaRlLREe-av-F7w759ZA" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_D8SaRVLREe-av-F7w759ZA" successor_AbstractAction="_D8SaR1LREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8SaR1LREe-av-F7w759ZA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_D8SaRlLREe-av-F7w759ZA" successor_AbstractAction="_D8SaSFLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8SaSFLREe-av-F7w759ZA" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_D8SaR1LREe-av-F7w759ZA" successor_AbstractAction="_D8SaSVLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_D8SaSVLREe-av-F7w759ZA" entityName="deferredResult" predecessor_AbstractAction="_D8SaSFLREe-av-F7w759ZA" successor_AbstractAction="_D8SaSlLREe-av-F7w759ZA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_D8SaSlLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8SaSVLREe-av-F7w759ZA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_D8TBVFLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8TBU1LREe-av-F7w759ZA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_D8TBWVLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8TBWFLREe-av-F7w759ZA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_D9LyKlLREe-av-F7w759ZA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_D9LyKVLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_D9AzA1LREe-av-F7w759ZA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_D8UPhFLREe-av-F7w759ZA" describedService__SEFF="_D2LLNFLREe-av-F7w759ZA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_D8TBXFLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8UPgVLREe-av-F7w759ZA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_D8UPgVLREe-av-F7w759ZA" entityName="If Branch" predecessor_AbstractAction="_D8TBXFLREe-av-F7w759ZA" successor_AbstractAction="_D8UPglLREe-av-F7w759ZA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8UPflLREe-av-F7w759ZA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_D8UPgFLREe-av-F7w759ZA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_D8TBXVLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8UPfFLREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_D8UPfFLREe-av-F7w759ZA" entityName="Switch Branch" predecessor_AbstractAction="_D8TBXVLREe-av-F7w759ZA" successor_AbstractAction="_D8UPfVLREe-av-F7w759ZA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8TocVLREe-av-F7w759ZA">
                <branchBehaviour_BranchTransition id="_D8UPcFLREe-av-F7w759ZA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_D8TBXlLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8Toa1LREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_D8Toa1LREe-av-F7w759ZA" entityName="If Branch" predecessor_AbstractAction="_D8TBXlLREe-av-F7w759ZA" successor_AbstractAction="_D8TobFLREe-av-F7w759ZA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8ToaFLREe-av-F7w759ZA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_D8ToalLREe-av-F7w759ZA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_D8ToYFLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8ToZlLREe-av-F7w759ZA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_D8ToZlLREe-av-F7w759ZA" entityName="If Branch" predecessor_AbstractAction="_D8ToYFLREe-av-F7w759ZA" successor_AbstractAction="_D8ToZ1LREe-av-F7w759ZA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8ToY1LREe-av-F7w759ZA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_D8ToZVLREe-av-F7w759ZA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_D8ToYVLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8ToYlLREe-av-F7w759ZA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_D8ToYlLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8ToYVLREe-av-F7w759ZA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_D8ToZ1LREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8ToZlLREe-av-F7w759ZA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8TobFLREe-av-F7w759ZA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_D8Toa1LREe-av-F7w759ZA" successor_AbstractAction="_D8TobVLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8TobVLREe-av-F7w759ZA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_D8TobFLREe-av-F7w759ZA" successor_AbstractAction="_D8ToblLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_D8ToblLREe-av-F7w759ZA" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_D8TobVLREe-av-F7w759ZA" successor_AbstractAction="_D8Tob1LREe-av-F7w759ZA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8Tob1LREe-av-F7w759ZA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_D8ToblLREe-av-F7w759ZA" successor_AbstractAction="_D8TocFLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_D8TocFLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8Tob1LREe-av-F7w759ZA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8UPdFLREe-av-F7w759ZA">
                <branchBehaviour_BranchTransition id="_D8UPdlLREe-av-F7w759ZA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_D8UPcVLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8UPclLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8UPclLREe-av-F7w759ZA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_D8UPcVLREe-av-F7w759ZA" successor_AbstractAction="_D8UPc1LREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_D8UPc1LREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8UPclLREe-av-F7w759ZA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8UPeVLREe-av-F7w759ZA">
                <branchBehaviour_BranchTransition id="_D8UPe1LREe-av-F7w759ZA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_D8UPd1LREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8UPeFLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_D8UPeFLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8UPd1LREe-av-F7w759ZA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_D8UPfVLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8UPfFLREe-av-F7w759ZA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_D8UPglLREe-av-F7w759ZA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_D8UPgVLREe-av-F7w759ZA" successor_AbstractAction="_D8UPg1LREe-av-F7w759ZA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_D8UPg1LREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8UPglLREe-av-F7w759ZA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_D9OOZ1LREe-av-F7w759ZA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_D9OOZlLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_D9AzBFLREe-av-F7w759ZA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_D8X53lLREe-av-F7w759ZA" describedService__SEFF="_D2MZUVLREe-av-F7w759ZA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_D8WEqFLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8WEr1LREe-av-F7w759ZA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_D8WEr1LREe-av-F7w759ZA" entityName="If Branch" predecessor_AbstractAction="_D8WEqFLREe-av-F7w759ZA" successor_AbstractAction="_D8WEsFLREe-av-F7w759ZA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8WErFLREe-av-F7w759ZA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_D8WErlLREe-av-F7w759ZA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_D8WEqVLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8WEqlLREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_D8WEqlLREe-av-F7w759ZA" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_D8WEqVLREe-av-F7w759ZA" successor_AbstractAction="_D8WEq1LREe-av-F7w759ZA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController_generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController_generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_D8WEq1LREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8WEqlLREe-av-F7w759ZA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_D8WEsFLREe-av-F7w759ZA" entityName="stopWatch.start()" predecessor_AbstractAction="_D8WEr1LREe-av-F7w759ZA" successor_AbstractAction="_D8X53FLREe-av-F7w759ZA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_D8X53FLREe-av-F7w759ZA" entityName="Switch Branch" predecessor_AbstractAction="_D8WEsFLREe-av-F7w759ZA" successor_AbstractAction="_D8X53VLREe-av-F7w759ZA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8WrwlLREe-av-F7w759ZA">
          <branchBehaviour_BranchTransition id="_D8XSwFLREe-av-F7w759ZA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_D8WEsVLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8WEslLREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_D8WEslLREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8WEsVLREe-av-F7w759ZA" successor_AbstractAction="_D8WEs1LREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_D8WEs1LREe-av-F7w759ZA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_D8WEslLREe-av-F7w759ZA" successor_AbstractAction="_D8WEtFLREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_D8WEtFLREe-av-F7w759ZA" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_D8WEs1LREe-av-F7w759ZA" successor_AbstractAction="_D8WrsFLREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_D8WrsFLREe-av-F7w759ZA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_D8WEtFLREe-av-F7w759ZA" successor_AbstractAction="_D8WrsVLREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_D8WrsVLREe-av-F7w759ZA" entityName="deferredResult" predecessor_AbstractAction="_D8WrsFLREe-av-F7w759ZA" successor_AbstractAction="_D8WrvlLREe-av-F7w759ZA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_D8WrvlLREe-av-F7w759ZA" entityName="If Branch" predecessor_AbstractAction="_D8WrsVLREe-av-F7w759ZA" successor_AbstractAction="_D8Wrv1LREe-av-F7w759ZA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8Wru1LREe-av-F7w759ZA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_D8WrvVLREe-av-F7w759ZA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_D8WrslLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8Wrs1LREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8Wrs1LREe-av-F7w759ZA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_D8WrslLREe-av-F7w759ZA" successor_AbstractAction="_D8WrtFLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8WrtFLREe-av-F7w759ZA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_D8Wrs1LREe-av-F7w759ZA" successor_AbstractAction="_D8WrtVLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8WrtVLREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8WrtFLREe-av-F7w759ZA" successor_AbstractAction="_D8WrtlLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8WrtlLREe-av-F7w759ZA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_D8WrtVLREe-av-F7w759ZA" successor_AbstractAction="_D8Wrt1LREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8Wrt1LREe-av-F7w759ZA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_D8WrtlLREe-av-F7w759ZA" successor_AbstractAction="_D8WruFLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8WruFLREe-av-F7w759ZA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_D8Wrt1LREe-av-F7w759ZA" successor_AbstractAction="_D8WruVLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_D8WruVLREe-av-F7w759ZA" entityName="deferredResult" predecessor_AbstractAction="_D8WruFLREe-av-F7w759ZA" successor_AbstractAction="_D8WrulLREe-av-F7w759ZA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_D8WrulLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8WruVLREe-av-F7w759ZA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_D8Wrv1LREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8WrvlLREe-av-F7w759ZA" successor_AbstractAction="_D8WrwFLREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_D8WrwFLREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8Wrv1LREe-av-F7w759ZA" successor_AbstractAction="_D8WrwVLREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_D8WrwVLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8WrwFLREe-av-F7w759ZA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8X501LREe-av-F7w759ZA">
          <branchBehaviour_BranchTransition id="_D8X51VLREe-av-F7w759ZA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_D8XSwVLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8XSzlLREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_D8XSzlLREe-av-F7w759ZA" entityName="If Branch" predecessor_AbstractAction="_D8XSwVLREe-av-F7w759ZA" successor_AbstractAction="_D8X50FLREe-av-F7w759ZA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8XSy1LREe-av-F7w759ZA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_D8XSzVLREe-av-F7w759ZA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_D8XSwlLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8XSw1LREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8XSw1LREe-av-F7w759ZA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_D8XSwlLREe-av-F7w759ZA" successor_AbstractAction="_D8XSxFLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8XSxFLREe-av-F7w759ZA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_D8XSw1LREe-av-F7w759ZA" successor_AbstractAction="_D8XSxVLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8XSxVLREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8XSxFLREe-av-F7w759ZA" successor_AbstractAction="_D8XSxlLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8XSxlLREe-av-F7w759ZA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_D8XSxVLREe-av-F7w759ZA" successor_AbstractAction="_D8XSx1LREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8XSx1LREe-av-F7w759ZA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_D8XSxlLREe-av-F7w759ZA" successor_AbstractAction="_D8XSyFLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_D8XSyFLREe-av-F7w759ZA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_D8XSx1LREe-av-F7w759ZA" successor_AbstractAction="_D8XSyVLREe-av-F7w759ZA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_D8XSyVLREe-av-F7w759ZA" entityName="deferredResult" predecessor_AbstractAction="_D8XSyFLREe-av-F7w759ZA" successor_AbstractAction="_D8XSylLREe-av-F7w759ZA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_D8XSylLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8XSyVLREe-av-F7w759ZA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_D8X50FLREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8XSzlLREe-av-F7w759ZA" successor_AbstractAction="_D8X50VLREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_D8X50VLREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8X50FLREe-av-F7w759ZA" successor_AbstractAction="_D8X50lLREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_D8X50lLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8X50VLREe-av-F7w759ZA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_D8X52VLREe-av-F7w759ZA">
          <branchBehaviour_BranchTransition id="_D8X521LREe-av-F7w759ZA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_D8X51lLREe-av-F7w759ZA" entityName="Start Action" successor_AbstractAction="_D8X511LREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_D8X511LREe-av-F7w759ZA" entityName="stopWatch.stop()" predecessor_AbstractAction="_D8X51lLREe-av-F7w759ZA" successor_AbstractAction="_D8X52FLREe-av-F7w759ZA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_D8X52FLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8X511LREe-av-F7w759ZA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_D8X53VLREe-av-F7w759ZA" entityName="Stop Action" predecessor_AbstractAction="_D8X53FLREe-av-F7w759ZA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_D9Sf0VLREe-av-F7w759ZA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_D9TG5FLREe-av-F7w759ZA" encapsulatedComponent__AssemblyContext="_D9JV51LREe-av-F7w759ZA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_D9Tt8FLREe-av-F7w759ZA" innerProvidedRole_ProvidedDelegationConnector="_D9JV5lLREe-av-F7w759ZA" outerProvidedRole_ProvidedDelegationConnector="_D9Sf0FLREe-av-F7w759ZA" assemblyContext_ProvidedDelegationConnector="_D9TG5FLREe-av-F7w759ZA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_D9Sf0FLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_D9AzAFLREe-av-F7w759ZA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_D9Sf01LREe-av-F7w759ZA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_D9TG6FLREe-av-F7w759ZA" encapsulatedComponent__AssemblyContext="_D9LyKlLREe-av-F7w759ZA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_D9UVAFLREe-av-F7w759ZA" innerProvidedRole_ProvidedDelegationConnector="_D9LyKVLREe-av-F7w759ZA" outerProvidedRole_ProvidedDelegationConnector="_D9Sf0lLREe-av-F7w759ZA" assemblyContext_ProvidedDelegationConnector="_D9TG6FLREe-av-F7w759ZA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_D9Sf0lLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_D9AzA1LREe-av-F7w759ZA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_D9Sf1FLREe-av-F7w759ZA" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_D9TG6lLREe-av-F7w759ZA" encapsulatedComponent__AssemblyContext="_D9AzBlLREe-av-F7w759ZA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_D9Sf11LREe-av-F7w759ZA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_D9TG4lLREe-av-F7w759ZA" encapsulatedComponent__AssemblyContext="_D9AzCVLREe-av-F7w759ZA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_D9UVAVLREe-av-F7w759ZA" innerProvidedRole_ProvidedDelegationConnector="_D9AzB1LREe-av-F7w759ZA" outerProvidedRole_ProvidedDelegationConnector="_D9Sf1lLREe-av-F7w759ZA" assemblyContext_ProvidedDelegationConnector="_D9TG4lLREe-av-F7w759ZA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_D9UVA1LREe-av-F7w759ZA" innerProvidedRole_ProvidedDelegationConnector="_D9AzCFLREe-av-F7w759ZA" outerProvidedRole_ProvidedDelegationConnector="_D9Sf1VLREe-av-F7w759ZA" assemblyContext_ProvidedDelegationConnector="_D9TG4lLREe-av-F7w759ZA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_D9Sf1VLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_D9AzBVLREe-av-F7w759ZA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_D9Sf1lLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_D9AzAlLREe-av-F7w759ZA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_D9Sf2VLREe-av-F7w759ZA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_D9TG4FLREe-av-F7w759ZA" encapsulatedComponent__AssemblyContext="_D9G5pFLREe-av-F7w759ZA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_D9UVAlLREe-av-F7w759ZA" innerProvidedRole_ProvidedDelegationConnector="_D9G5o1LREe-av-F7w759ZA" outerProvidedRole_ProvidedDelegationConnector="_D9Sf2FLREe-av-F7w759ZA" assemblyContext_ProvidedDelegationConnector="_D9TG4FLREe-av-F7w759ZA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_D9Sf2FLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_D9AzAVLREe-av-F7w759ZA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_D9Sf21LREe-av-F7w759ZA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_D9TG5lLREe-av-F7w759ZA" encapsulatedComponent__AssemblyContext="_D9OOZ1LREe-av-F7w759ZA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_D9Tt8VLREe-av-F7w759ZA" innerProvidedRole_ProvidedDelegationConnector="_D9OOZlLREe-av-F7w759ZA" outerProvidedRole_ProvidedDelegationConnector="_D9Sf2lLREe-av-F7w759ZA" assemblyContext_ProvidedDelegationConnector="_D9TG5lLREe-av-F7w759ZA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_D9Sf2lLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_D9AzBFLREe-av-F7w759ZA"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_D9AzAFLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_D2LLMFLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_D1LssFLREe-av-F7w759ZA">
      <parameters__OperationSignature dataType__Parameter="_D1KekFLREe-av-F7w759ZA" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_D9AzAVLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_D1M60FLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_D1LssFLREe-av-F7w759ZA">
      <parameters__OperationSignature dataType__Parameter="_D1KekFLREe-av-F7w759ZA" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_D9AzAlLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_D2NAYFLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_D2LLM1LREe-av-F7w759ZA">
      <parameters__OperationSignature dataType__Parameter="_D2MZVFLREe-av-F7w759ZA" parameterName="authorization" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_D2MZVVLREe-av-F7w759ZA" parameterName="teleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_D9AzA1LREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_D2LLNFLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_D2LLM1LREe-av-F7w759ZA">
      <parameters__OperationSignature dataType__Parameter="_D1KekFLREe-av-F7w759ZA" parameterName="registrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_D9AzBFLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_D2MZUVLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_D1LssFLREe-av-F7w759ZA">
      <parameters__OperationSignature dataType__Parameter="_D2MZUFLREe-av-F7w759ZA" parameterName="request" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_D9AzBVLREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_D2LyQ1LREe-av-F7w759ZA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_D2LLM1LREe-av-F7w759ZA">
      <parameters__OperationSignature dataType__Parameter="_D2LyQlLREe-av-F7w759ZA" parameterName="tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_D1KekFLREe-av-F7w759ZA" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_D1LssFLREe-av-F7w759ZA" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_D2LLM1LREe-av-F7w759ZA" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_D2LyQlLREe-av-F7w759ZA" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_D2MZUFLREe-av-F7w759ZA" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_D2MZVFLREe-av-F7w759ZA" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_D2MZVVLREe-av-F7w759ZA" entityName="app_coronawarn_verification_model_TeleTanType"/>
</repository:Repository>
