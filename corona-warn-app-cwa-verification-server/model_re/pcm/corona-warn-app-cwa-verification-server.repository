<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_lSztXCbPEe-q67EANMywwQ">
  <components__Repository xsi:type="repository:BasicComponent" id="_lSiAiCbPEe-q67EANMywwQ" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_lSiAhybPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_lSiAgybPEe-q67EANMywwQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_lR2rECbPEe-q67EANMywwQ" describedService__SEFF="_lMSOkSbPEe-q67EANMywwQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_lR0O2ybPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR015SbPEe-q67EANMywwQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_lR015SbPEe-q67EANMywwQ" entityName="If Branch" predecessor_AbstractAction="_lR0O2ybPEe-q67EANMywwQ" successor_AbstractAction="_lR015ibPEe-q67EANMywwQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR014ibPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_lR015CbPEe-q67EANMywwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lR0O3CbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR014CbPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lR014CbPEe-q67EANMywwQ" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_lR0O3CbPEe-q67EANMywwQ" successor_AbstractAction="_lR014SbPEe-q67EANMywwQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lR014SbPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR014CbPEe-q67EANMywwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_lR015ibPEe-q67EANMywwQ" entityName="stopWatch.start()" predecessor_AbstractAction="_lR015SbPEe-q67EANMywwQ" successor_AbstractAction="_lR2EDybPEe-q67EANMywwQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_lR2EDybPEe-q67EANMywwQ" entityName="If Branch" predecessor_AbstractAction="_lR015ibPEe-q67EANMywwQ" successor_AbstractAction="_lR2EECbPEe-q67EANMywwQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR2EDCbPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_lR2EDibPEe-q67EANMywwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lR015ybPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR2ECibPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_lR2ECibPEe-q67EANMywwQ" entityName="If Branch" predecessor_AbstractAction="_lR015ybPEe-q67EANMywwQ" successor_AbstractAction="_lR2ECybPEe-q67EANMywwQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR2EBybPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_lR2ECSbPEe-q67EANMywwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lR016CbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR1dACbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_lR1dACbPEe-q67EANMywwQ" entityName="Switch Branch" predecessor_AbstractAction="_lR016CbPEe-q67EANMywwQ" successor_AbstractAction="_lR1dASbPEe-q67EANMywwQ">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR1c8SbPEe-q67EANMywwQ">
                      <branchBehaviour_BranchTransition id="_lR1c8ybPEe-q67EANMywwQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_lR016SbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR018CbPEe-q67EANMywwQ"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_lR018CbPEe-q67EANMywwQ" entityName="If Branch" predecessor_AbstractAction="_lR016SbPEe-q67EANMywwQ" successor_AbstractAction="_lR018SbPEe-q67EANMywwQ">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR017SbPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_lR017ybPEe-q67EANMywwQ">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_lR016ibPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR016ybPEe-q67EANMywwQ"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_lR016ybPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR016ibPEe-q67EANMywwQ" successor_AbstractAction="_lR017CbPEe-q67EANMywwQ"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_lR017CbPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR016ybPEe-q67EANMywwQ"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_lR018SbPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR018CbPEe-q67EANMywwQ" successor_AbstractAction="_lR1c8CbPEe-q67EANMywwQ"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_lR1c8CbPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR018SbPEe-q67EANMywwQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR1c9ybPEe-q67EANMywwQ">
                      <branchBehaviour_BranchTransition id="_lR1c-SbPEe-q67EANMywwQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_lR1c9CbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR1c9SbPEe-q67EANMywwQ"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_lR1c9SbPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR1c9CbPEe-q67EANMywwQ" successor_AbstractAction="_lR1c9ibPEe-q67EANMywwQ"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_lR1c9ibPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR1c9SbPEe-q67EANMywwQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR1c_SbPEe-q67EANMywwQ">
                      <branchBehaviour_BranchTransition id="_lR1c_ybPEe-q67EANMywwQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_lR1c-ibPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR1c-ybPEe-q67EANMywwQ"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_lR1c-ybPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR1c-ibPEe-q67EANMywwQ" successor_AbstractAction="_lR1c_CbPEe-q67EANMywwQ"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_lR1c_CbPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR1c-ybPEe-q67EANMywwQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR1dASbPEe-q67EANMywwQ" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_lR1dACbPEe-q67EANMywwQ" successor_AbstractAction="_lR1dAibPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR1dAibPEe-q67EANMywwQ" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_lR1dASbPEe-q67EANMywwQ" successor_AbstractAction="_lR2EACbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR2EACbPEe-q67EANMywwQ" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_lR1dAibPEe-q67EANMywwQ" successor_AbstractAction="_lR2EASbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR2EASbPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR2EACbPEe-q67EANMywwQ" successor_AbstractAction="_lR2EAibPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR2EAibPEe-q67EANMywwQ" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_lR2EASbPEe-q67EANMywwQ" successor_AbstractAction="_lR2EAybPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR2EAybPEe-q67EANMywwQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_lR2EAibPEe-q67EANMywwQ" successor_AbstractAction="_lR2EBCbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR2EBCbPEe-q67EANMywwQ" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_lR2EAybPEe-q67EANMywwQ" successor_AbstractAction="_lR2EBSbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lR2EBSbPEe-q67EANMywwQ" entityName="deferredResult" predecessor_AbstractAction="_lR2EBCbPEe-q67EANMywwQ" successor_AbstractAction="_lR2EBibPEe-q67EANMywwQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lR2EBibPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR2EBSbPEe-q67EANMywwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lR2ECybPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR2ECibPEe-q67EANMywwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_lR2EECbPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR2EDybPEe-q67EANMywwQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_lSlq5SbPEe-q67EANMywwQ" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_lSlq4ybPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_lSiAgSbPEe-q67EANMywwQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_lSlq5CbPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_lSiAhSbPEe-q67EANMywwQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_lR6VcibPEe-q67EANMywwQ" describedService__SEFF="_lMRAcibPEe-q67EANMywwQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_lR5HWSbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR5uYSbPEe-q67EANMywwQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_lR5uYSbPEe-q67EANMywwQ" entityName="If Branch" predecessor_AbstractAction="_lR5HWSbPEe-q67EANMywwQ" successor_AbstractAction="_lR6VcCbPEe-q67EANMywwQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR5HXSbPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_lR5HXybPEe-q67EANMywwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lR5HWibPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR5HWybPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lR5HWybPEe-q67EANMywwQ" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_lR5HWibPEe-q67EANMywwQ" successor_AbstractAction="_lR5HXCbPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lR5HXCbPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR5HWybPEe-q67EANMywwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR5HYybPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_lR5uYCbPEe-q67EANMywwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lR5HYCbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR5HYSbPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lR5HYSbPEe-q67EANMywwQ" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_lR5HYCbPEe-q67EANMywwQ" successor_AbstractAction="_lR5HYibPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lR5HYibPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR5HYSbPEe-q67EANMywwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_lR6VcCbPEe-q67EANMywwQ" entityName="If Branch" predecessor_AbstractAction="_lR5uYSbPEe-q67EANMywwQ" successor_AbstractAction="_lR6VcSbPEe-q67EANMywwQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR5ucSbPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_lR5ucybPEe-q67EANMywwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lR5uYibPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR5ubybPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_lR5ubybPEe-q67EANMywwQ" entityName="If Branch" predecessor_AbstractAction="_lR5uYibPEe-q67EANMywwQ" successor_AbstractAction="_lR5ucCbPEe-q67EANMywwQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR5uZybPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_lR5uaSbPEe-q67EANMywwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lR5uYybPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR5uZCbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR5uZCbPEe-q67EANMywwQ" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_lR5uYybPEe-q67EANMywwQ" successor_AbstractAction="_lR5uZSbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lR5uZSbPEe-q67EANMywwQ" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_lR5uZCbPEe-q67EANMywwQ" successor_AbstractAction="_lR5uZibPEe-q67EANMywwQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lR5uZibPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR5uZSbPEe-q67EANMywwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR5ubCbPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_lR5ubibPEe-q67EANMywwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lR5uaibPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR5uaybPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lR5uaybPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR5uaibPEe-q67EANMywwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lR5ucCbPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR5ubybPEe-q67EANMywwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_lR6VcSbPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR6VcCbPEe-q67EANMywwQ"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_lR6VdybPEe-q67EANMywwQ" describedService__SEFF="_lLlrACbPEe-q67EANMywwQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_lR6VdCbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR6VdSbPEe-q67EANMywwQ"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lR6VdSbPEe-q67EANMywwQ" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_lR6VdCbPEe-q67EANMywwQ" successor_AbstractAction="_lR6VdibPEe-q67EANMywwQ">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_lR6VdibPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR6VdSbPEe-q67EANMywwQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_lSp8XSbPEe-q67EANMywwQ" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_lSp8XCbPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_lSiAhCbPEe-q67EANMywwQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_lR5HVybPEe-q67EANMywwQ" describedService__SEFF="_lMS1oCbPEe-q67EANMywwQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_lR2rEibPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR2rGSbPEe-q67EANMywwQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_lR2rGSbPEe-q67EANMywwQ" entityName="If Branch" predecessor_AbstractAction="_lR2rEibPEe-q67EANMywwQ" successor_AbstractAction="_lR2rGibPEe-q67EANMywwQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR2rFibPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_lR2rGCbPEe-q67EANMywwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lR2rEybPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR2rFCbPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lR2rFCbPEe-q67EANMywwQ" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_lR2rEybPEe-q67EANMywwQ" successor_AbstractAction="_lR2rFSbPEe-q67EANMywwQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lR2rFSbPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR2rFCbPEe-q67EANMywwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_lR2rGibPEe-q67EANMywwQ" entityName="stopWatch.start()" predecessor_AbstractAction="_lR2rGSbPEe-q67EANMywwQ" successor_AbstractAction="_lR5HVCbPEe-q67EANMywwQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_lR5HVCbPEe-q67EANMywwQ" entityName="If Branch" predecessor_AbstractAction="_lR2rGibPEe-q67EANMywwQ" successor_AbstractAction="_lR5HVSbPEe-q67EANMywwQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR5HUSbPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_lR5HUybPEe-q67EANMywwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lR2rGybPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR4gUCbPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_lR4gUCbPEe-q67EANMywwQ" entityName="Switch Branch" predecessor_AbstractAction="_lR2rGybPEe-q67EANMywwQ" successor_AbstractAction="_lR5HUCbPEe-q67EANMywwQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR35OCbPEe-q67EANMywwQ">
                <branchBehaviour_BranchTransition id="_lR35OibPEe-q67EANMywwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lR2rHCbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR2rHSbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR2rHSbPEe-q67EANMywwQ" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_lR2rHCbPEe-q67EANMywwQ" successor_AbstractAction="_lR3SKybPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_lR3SKybPEe-q67EANMywwQ" entityName="If Branch" predecessor_AbstractAction="_lR2rHSbPEe-q67EANMywwQ" successor_AbstractAction="_lR3SLCbPEe-q67EANMywwQ">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR3SKCbPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_lR3SKibPEe-q67EANMywwQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_lR3SICbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR3SJibPEe-q67EANMywwQ"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_lR3SJibPEe-q67EANMywwQ" entityName="If Branch" predecessor_AbstractAction="_lR3SICbPEe-q67EANMywwQ" successor_AbstractAction="_lR3SJybPEe-q67EANMywwQ">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR3SIybPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_lR3SJSbPEe-q67EANMywwQ">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_lR3SISbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR3SIibPEe-q67EANMywwQ"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_lR3SIibPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR3SISbPEe-q67EANMywwQ"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_lR3SJybPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR3SJibPEe-q67EANMywwQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR3SLCbPEe-q67EANMywwQ" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_lR3SKybPEe-q67EANMywwQ" successor_AbstractAction="_lR3SLSbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR3SLSbPEe-q67EANMywwQ" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_lR3SLCbPEe-q67EANMywwQ" successor_AbstractAction="_lR3SLibPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR3SLibPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR3SLSbPEe-q67EANMywwQ" successor_AbstractAction="_lR3SLybPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR3SLybPEe-q67EANMywwQ" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_lR3SLibPEe-q67EANMywwQ" successor_AbstractAction="_lR3SMCbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR3SMCbPEe-q67EANMywwQ" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_lR3SLybPEe-q67EANMywwQ" successor_AbstractAction="_lR35MCbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lR35MCbPEe-q67EANMywwQ" entityName="deferredResult" predecessor_AbstractAction="_lR3SMCbPEe-q67EANMywwQ" successor_AbstractAction="_lR35MSbPEe-q67EANMywwQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR35MSbPEe-q67EANMywwQ" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_lR35MCbPEe-q67EANMywwQ" successor_AbstractAction="_lR35MibPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR35MibPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR35MSbPEe-q67EANMywwQ" successor_AbstractAction="_lR35MybPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR35MybPEe-q67EANMywwQ" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_lR35MibPEe-q67EANMywwQ" successor_AbstractAction="_lR35NCbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR35NCbPEe-q67EANMywwQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_lR35MybPEe-q67EANMywwQ" successor_AbstractAction="_lR35NSbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lR35NSbPEe-q67EANMywwQ" entityName="deferredResult" predecessor_AbstractAction="_lR35NCbPEe-q67EANMywwQ" successor_AbstractAction="_lR35NibPEe-q67EANMywwQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR35NibPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR35NSbPEe-q67EANMywwQ" successor_AbstractAction="_lR35NybPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lR35NybPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR35NibPEe-q67EANMywwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR4gRybPEe-q67EANMywwQ">
                <branchBehaviour_BranchTransition id="_lR4gSSbPEe-q67EANMywwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lR35OybPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR4gQCbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR4gQCbPEe-q67EANMywwQ" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_lR35OybPEe-q67EANMywwQ" successor_AbstractAction="_lR4gQSbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR4gQSbPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR4gQCbPEe-q67EANMywwQ" successor_AbstractAction="_lR4gQibPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR4gQibPEe-q67EANMywwQ" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_lR4gQSbPEe-q67EANMywwQ" successor_AbstractAction="_lR4gQybPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR4gQybPEe-q67EANMywwQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_lR4gQibPEe-q67EANMywwQ" successor_AbstractAction="_lR4gRCbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lR4gRCbPEe-q67EANMywwQ" entityName="deferredResult" predecessor_AbstractAction="_lR4gQybPEe-q67EANMywwQ" successor_AbstractAction="_lR4gRSbPEe-q67EANMywwQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR4gRSbPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR4gRCbPEe-q67EANMywwQ" successor_AbstractAction="_lR4gRibPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lR4gRibPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR4gRSbPEe-q67EANMywwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR4gTSbPEe-q67EANMywwQ">
                <branchBehaviour_BranchTransition id="_lR4gTybPEe-q67EANMywwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lR4gSibPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR4gSybPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR4gSybPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR4gSibPEe-q67EANMywwQ" successor_AbstractAction="_lR4gTCbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lR4gTCbPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR4gSybPEe-q67EANMywwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lR5HUCbPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR4gUCbPEe-q67EANMywwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_lR5HVSbPEe-q67EANMywwQ" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_lR5HVCbPEe-q67EANMywwQ" successor_AbstractAction="_lR5HVibPEe-q67EANMywwQ"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_lR5HVibPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR5HVSbPEe-q67EANMywwQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_lSsYlSbPEe-q67EANMywwQ" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_lSsYlCbPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_lSiAhibPEe-q67EANMywwQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_lR8xuSbPEe-q67EANMywwQ" describedService__SEFF="_lMRngibPEe-q67EANMywwQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_lR6VeSbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR68hibPEe-q67EANMywwQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_lR68hibPEe-q67EANMywwQ" entityName="If Branch" predecessor_AbstractAction="_lR6VeSbPEe-q67EANMywwQ" successor_AbstractAction="_lR68hybPEe-q67EANMywwQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR68gybPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_lR68hSbPEe-q67EANMywwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lR68gCbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR68gSbPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lR68gSbPEe-q67EANMywwQ" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_lR68gCbPEe-q67EANMywwQ" successor_AbstractAction="_lR68gibPEe-q67EANMywwQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController.generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController.generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lR68gibPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR68gSbPEe-q67EANMywwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_lR68hybPEe-q67EANMywwQ" entityName="stopWatch.start()" predecessor_AbstractAction="_lR68hibPEe-q67EANMywwQ" successor_AbstractAction="_lR8xtybPEe-q67EANMywwQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_lR8xtybPEe-q67EANMywwQ" entityName="Switch Branch" predecessor_AbstractAction="_lR68hybPEe-q67EANMywwQ" successor_AbstractAction="_lR8xuCbPEe-q67EANMywwQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR7jmybPEe-q67EANMywwQ">
          <branchBehaviour_BranchTransition id="_lR7jnSbPEe-q67EANMywwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lR68iCbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR68iSbPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lR68iSbPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR68iCbPEe-q67EANMywwQ" successor_AbstractAction="_lR68iibPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lR68iibPEe-q67EANMywwQ" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_lR68iSbPEe-q67EANMywwQ" successor_AbstractAction="_lR68iybPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lR68iybPEe-q67EANMywwQ" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_lR68iibPEe-q67EANMywwQ" successor_AbstractAction="_lR68jCbPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lR68jCbPEe-q67EANMywwQ" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_lR68iybPEe-q67EANMywwQ" successor_AbstractAction="_lR68jSbPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lR68jSbPEe-q67EANMywwQ" entityName="deferredResult" predecessor_AbstractAction="_lR68jCbPEe-q67EANMywwQ" successor_AbstractAction="_lR7jlybPEe-q67EANMywwQ">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_lR7jlybPEe-q67EANMywwQ" entityName="If Branch" predecessor_AbstractAction="_lR68jSbPEe-q67EANMywwQ" successor_AbstractAction="_lR7jmCbPEe-q67EANMywwQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR7jlCbPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_lR7jlibPEe-q67EANMywwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lR68jibPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR68jybPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR68jybPEe-q67EANMywwQ" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_lR68jibPEe-q67EANMywwQ" successor_AbstractAction="_lR68kCbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR68kCbPEe-q67EANMywwQ" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_lR68jybPEe-q67EANMywwQ" successor_AbstractAction="_lR68kSbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR68kSbPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR68kCbPEe-q67EANMywwQ" successor_AbstractAction="_lR68kibPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR68kibPEe-q67EANMywwQ" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_lR68kSbPEe-q67EANMywwQ" successor_AbstractAction="_lR7jkCbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR7jkCbPEe-q67EANMywwQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_lR68kibPEe-q67EANMywwQ" successor_AbstractAction="_lR7jkSbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR7jkSbPEe-q67EANMywwQ" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_lR7jkCbPEe-q67EANMywwQ" successor_AbstractAction="_lR7jkibPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lR7jkibPEe-q67EANMywwQ" entityName="deferredResult" predecessor_AbstractAction="_lR7jkSbPEe-q67EANMywwQ" successor_AbstractAction="_lR7jkybPEe-q67EANMywwQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lR7jkybPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR7jkibPEe-q67EANMywwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lR7jmCbPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR7jlybPEe-q67EANMywwQ" successor_AbstractAction="_lR7jmSbPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lR7jmSbPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR7jmCbPEe-q67EANMywwQ" successor_AbstractAction="_lR7jmibPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lR7jmibPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR7jmSbPEe-q67EANMywwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR8KsSbPEe-q67EANMywwQ">
          <branchBehaviour_BranchTransition id="_lR8xsCbPEe-q67EANMywwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lR8KoCbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR8KrSbPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_lR8KrSbPEe-q67EANMywwQ" entityName="If Branch" predecessor_AbstractAction="_lR8KoCbPEe-q67EANMywwQ" successor_AbstractAction="_lR8KribPEe-q67EANMywwQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR8KqibPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_lR8KrCbPEe-q67EANMywwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lR8KoSbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR8KoibPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR8KoibPEe-q67EANMywwQ" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_lR8KoSbPEe-q67EANMywwQ" successor_AbstractAction="_lR8KoybPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR8KoybPEe-q67EANMywwQ" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_lR8KoibPEe-q67EANMywwQ" successor_AbstractAction="_lR8KpCbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR8KpCbPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR8KoybPEe-q67EANMywwQ" successor_AbstractAction="_lR8KpSbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR8KpSbPEe-q67EANMywwQ" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_lR8KpCbPEe-q67EANMywwQ" successor_AbstractAction="_lR8KpibPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR8KpibPEe-q67EANMywwQ" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_lR8KpSbPEe-q67EANMywwQ" successor_AbstractAction="_lR8KpybPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lR8KpybPEe-q67EANMywwQ" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_lR8KpibPEe-q67EANMywwQ" successor_AbstractAction="_lR8KqCbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lR8KqCbPEe-q67EANMywwQ" entityName="deferredResult" predecessor_AbstractAction="_lR8KpybPEe-q67EANMywwQ" successor_AbstractAction="_lR8KqSbPEe-q67EANMywwQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lR8KqSbPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR8KqCbPEe-q67EANMywwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lR8KribPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR8KrSbPEe-q67EANMywwQ" successor_AbstractAction="_lR8KrybPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lR8KrybPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR8KribPEe-q67EANMywwQ" successor_AbstractAction="_lR8KsCbPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lR8KsCbPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR8KrybPEe-q67EANMywwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR8xtCbPEe-q67EANMywwQ">
          <branchBehaviour_BranchTransition id="_lR8xtibPEe-q67EANMywwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lR8xsSbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR8xsibPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_lR8xsibPEe-q67EANMywwQ" entityName="stopWatch.stop()" predecessor_AbstractAction="_lR8xsSbPEe-q67EANMywwQ" successor_AbstractAction="_lR8xsybPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lR8xsybPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR8xsibPEe-q67EANMywwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_lR8xuCbPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR8xtybPEe-q67EANMywwQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_lSu01CbPEe-q67EANMywwQ" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_lSu01ibPEe-q67EANMywwQ" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_lSu01SbPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_lSiAgibPEe-q67EANMywwQ"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_lR0O2SbPEe-q67EANMywwQ" describedService__SEFF="_lMS1oybPEe-q67EANMywwQ">
      <steps_Behaviour xsi:type="seff:StartAction" id="_lMseQSbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR0O1ibPEe-q67EANMywwQ"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_lR0O1ibPEe-q67EANMywwQ" entityName="If Branch" predecessor_AbstractAction="_lMseQSbPEe-q67EANMywwQ" successor_AbstractAction="_lR0O1ybPEe-q67EANMywwQ">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lR0O0ybPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_lR0O1SbPEe-q67EANMywwQ">
            <steps_Behaviour xsi:type="seff:StartAction" id="_lMuTcCbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lR0O0SbPEe-q67EANMywwQ"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_lR0O0SbPEe-q67EANMywwQ" entityName="Switch Branch" predecessor_AbstractAction="_lMuTcCbPEe-q67EANMywwQ" successor_AbstractAction="_lR0O0ibPEe-q67EANMywwQ">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lRznwybPEe-q67EANMywwQ">
                <branchBehaviour_BranchTransition id="_lRznxSbPEe-q67EANMywwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lMu6gCbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lRv9ZSbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_lRv9ZSbPEe-q67EANMywwQ" entityName="If Branch" predecessor_AbstractAction="_lMu6gCbPEe-q67EANMywwQ" successor_AbstractAction="_lRwkcCbPEe-q67EANMywwQ">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lRv9YibPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_lRv9ZCbPEe-q67EANMywwQ">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_lMu6gSbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lRv9YCbPEe-q67EANMywwQ"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_lRv9YCbPEe-q67EANMywwQ" entityName="If Branch" predecessor_AbstractAction="_lMu6gSbPEe-q67EANMywwQ" successor_AbstractAction="_lRv9YSbPEe-q67EANMywwQ">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lMvhkCbPEe-q67EANMywwQ" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_lMwIoCbPEe-q67EANMywwQ">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_lMu6gibPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lMu6gybPEe-q67EANMywwQ"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_lMu6gybPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lMu6gibPEe-q67EANMywwQ"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_lRv9YSbPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lRv9YCbPEe-q67EANMywwQ"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lRwkcCbPEe-q67EANMywwQ" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_lRv9ZSbPEe-q67EANMywwQ" successor_AbstractAction="_lRwkcSbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lRwkcSbPEe-q67EANMywwQ" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_lRwkcCbPEe-q67EANMywwQ" successor_AbstractAction="_lRznwCbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_lRznwCbPEe-q67EANMywwQ" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_lRwkcSbPEe-q67EANMywwQ" successor_AbstractAction="_lRznwSbPEe-q67EANMywwQ">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lRznwSbPEe-q67EANMywwQ" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_lRznwCbPEe-q67EANMywwQ" successor_AbstractAction="_lRznwibPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lRznwibPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lRznwSbPEe-q67EANMywwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lRznySbPEe-q67EANMywwQ">
                <branchBehaviour_BranchTransition id="_lRznyybPEe-q67EANMywwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lRznxibPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lRznxybPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_lRznxybPEe-q67EANMywwQ" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_lRznxibPEe-q67EANMywwQ" successor_AbstractAction="_lRznyCbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lRznyCbPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lRznxybPEe-q67EANMywwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_lRznzibPEe-q67EANMywwQ">
                <branchBehaviour_BranchTransition id="_lR0O0CbPEe-q67EANMywwQ">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_lRznzCbPEe-q67EANMywwQ" entityName="Start Action" successor_AbstractAction="_lRznzSbPEe-q67EANMywwQ"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_lRznzSbPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lRznzCbPEe-q67EANMywwQ"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_lR0O0ibPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR0O0SbPEe-q67EANMywwQ"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_lR0O1ybPEe-q67EANMywwQ" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_lR0O1ibPEe-q67EANMywwQ" successor_AbstractAction="_lR0O2CbPEe-q67EANMywwQ"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_lR0O2CbPEe-q67EANMywwQ" entityName="Stop Action" predecessor_AbstractAction="_lR0O1ybPEe-q67EANMywwQ"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_lSzGQSbPEe-q67EANMywwQ" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_lSztWCbPEe-q67EANMywwQ" encapsulatedComponent__AssemblyContext="_lSiAiCbPEe-q67EANMywwQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_lS07cCbPEe-q67EANMywwQ" innerProvidedRole_ProvidedDelegationConnector="_lSiAhybPEe-q67EANMywwQ" outerProvidedRole_ProvidedDelegationConnector="_lSzGQCbPEe-q67EANMywwQ" assemblyContext_ProvidedDelegationConnector="_lSztWCbPEe-q67EANMywwQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_lSzGQCbPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_lSiAgybPEe-q67EANMywwQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_lSzGQybPEe-q67EANMywwQ" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_lSztUibPEe-q67EANMywwQ" encapsulatedComponent__AssemblyContext="_lSu01ibPEe-q67EANMywwQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_lS0UYSbPEe-q67EANMywwQ" innerProvidedRole_ProvidedDelegationConnector="_lSu01SbPEe-q67EANMywwQ" outerProvidedRole_ProvidedDelegationConnector="_lSzGQibPEe-q67EANMywwQ" assemblyContext_ProvidedDelegationConnector="_lSztUibPEe-q67EANMywwQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_lSzGQibPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_lSiAgibPEe-q67EANMywwQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_lSzGRibPEe-q67EANMywwQ" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_lSztVCbPEe-q67EANMywwQ" encapsulatedComponent__AssemblyContext="_lSlq5SbPEe-q67EANMywwQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_lS0UYCbPEe-q67EANMywwQ" innerProvidedRole_ProvidedDelegationConnector="_lSlq5CbPEe-q67EANMywwQ" outerProvidedRole_ProvidedDelegationConnector="_lSzGRCbPEe-q67EANMywwQ" assemblyContext_ProvidedDelegationConnector="_lSztVCbPEe-q67EANMywwQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_lS07cibPEe-q67EANMywwQ" innerProvidedRole_ProvidedDelegationConnector="_lSlq4ybPEe-q67EANMywwQ" outerProvidedRole_ProvidedDelegationConnector="_lSzGRSbPEe-q67EANMywwQ" assemblyContext_ProvidedDelegationConnector="_lSztVCbPEe-q67EANMywwQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_lSzGRCbPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_lSiAhSbPEe-q67EANMywwQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_lSzGRSbPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_lSiAgSbPEe-q67EANMywwQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_lSzGSCbPEe-q67EANMywwQ" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_lSztWibPEe-q67EANMywwQ" encapsulatedComponent__AssemblyContext="_lSsYlSbPEe-q67EANMywwQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_lS07cybPEe-q67EANMywwQ" innerProvidedRole_ProvidedDelegationConnector="_lSsYlCbPEe-q67EANMywwQ" outerProvidedRole_ProvidedDelegationConnector="_lSzGRybPEe-q67EANMywwQ" assemblyContext_ProvidedDelegationConnector="_lSztWibPEe-q67EANMywwQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_lSzGRybPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_lSiAhibPEe-q67EANMywwQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_lSzGSibPEe-q67EANMywwQ" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_lSztVibPEe-q67EANMywwQ" encapsulatedComponent__AssemblyContext="_lSp8XSbPEe-q67EANMywwQ"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_lS07cSbPEe-q67EANMywwQ" innerProvidedRole_ProvidedDelegationConnector="_lSp8XCbPEe-q67EANMywwQ" outerProvidedRole_ProvidedDelegationConnector="_lSzGSSbPEe-q67EANMywwQ" assemblyContext_ProvidedDelegationConnector="_lSztVibPEe-q67EANMywwQ"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_lSzGSSbPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_lSiAhCbPEe-q67EANMywwQ"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_lSzGSybPEe-q67EANMywwQ" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_lSztUCbPEe-q67EANMywwQ" encapsulatedComponent__AssemblyContext="_lSu01CbPEe-q67EANMywwQ"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_lSiAgSbPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_lMRAcibPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_lLlD8CbPEe-q67EANMywwQ">
      <parameters__OperationSignature dataType__Parameter="_lMRAcCbPEe-q67EANMywwQ" parameterName="AuthorizationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_lMRAcSbPEe-q67EANMywwQ" parameterName="TeleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_lSiAgibPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_lMS1oybPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_lLlD8CbPEe-q67EANMywwQ">
      <parameters__OperationSignature dataType__Parameter="_lMSOkCbPEe-q67EANMywwQ" parameterName="RegistrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_lSiAgybPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_lMSOkSbPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_lMRngSbPEe-q67EANMywwQ">
      <parameters__OperationSignature dataType__Parameter="_lMSOkCbPEe-q67EANMywwQ" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_lSiAhCbPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_lMS1oCbPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_lMRngSbPEe-q67EANMywwQ">
      <parameters__OperationSignature dataType__Parameter="_lMSOkCbPEe-q67EANMywwQ" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_lSiAhSbPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_lLlrACbPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_lLlD8CbPEe-q67EANMywwQ">
      <parameters__OperationSignature dataType__Parameter="_lLj10CbPEe-q67EANMywwQ" parameterName="Tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_lSiAhibPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_lMRngibPEe-q67EANMywwQ" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_lMRngSbPEe-q67EANMywwQ">
      <parameters__OperationSignature dataType__Parameter="_lMRngCbPEe-q67EANMywwQ" parameterName="RegistrationTokenRequest" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_lLj10CbPEe-q67EANMywwQ" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_lLlD8CbPEe-q67EANMywwQ" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_lMRAcCbPEe-q67EANMywwQ" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_lMRAcSbPEe-q67EANMywwQ" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_lMRngCbPEe-q67EANMywwQ" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_lMRngSbPEe-q67EANMywwQ" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_lMSOkCbPEe-q67EANMywwQ" entityName="app_coronawarn_verification_model_RegistrationToken"/>
</repository:Repository>
