<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_Lcj-DI6LEe-eR7n8YYNNVg">
  <components__Repository xsi:type="repository:BasicComponent" id="_LcSRNo6LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_LcSRNY6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_LcRqKo6LEe-eR7n8YYNNVg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_LbjRbI6LEe-eR7n8YYNNVg" describedService__SEFF="_LVfsso6LEe-eR7n8YYNNVg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_LWAqEY6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LbgOEI6LEe-eR7n8YYNNVg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_LbgOEI6LEe-eR7n8YYNNVg" entityName="If Branch" predecessor_AbstractAction="_LWAqEY6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbg1II6LEe-eR7n8YYNNVg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Lbe_8I6LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_LbfnAI6LEe-eR7n8YYNNVg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_LWDGUI6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LbeY4I6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_LbeY4I6LEe-eR7n8YYNNVg" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_LWDGUI6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbeY4Y6LEe-eR7n8YYNNVg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_LbeY4Y6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbeY4I6LEe-eR7n8YYNNVg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbg1II6LEe-eR7n8YYNNVg" entityName="stopWatch.start()" predecessor_AbstractAction="_LbgOEI6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbjRao6LEe-eR7n8YYNNVg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_LbjRao6LEe-eR7n8YYNNVg" entityName="If Branch" predecessor_AbstractAction="_Lbg1II6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbjRa46LEe-eR7n8YYNNVg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LbjRZ46LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_LbjRaY6LEe-eR7n8YYNNVg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Lbg1IY6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LbjRZY6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_LbjRZY6LEe-eR7n8YYNNVg" entityName="If Branch" predecessor_AbstractAction="_Lbg1IY6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbjRZo6LEe-eR7n8YYNNVg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LbjRYo6LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_LbjRZI6LEe-eR7n8YYNNVg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Lbg1Io6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LbiqVI6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_LbiqVI6LEe-eR7n8YYNNVg" entityName="Switch Branch" predecessor_AbstractAction="_Lbg1Io6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbiqVY6LEe-eR7n8YYNNVg">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LbiDRI6LEe-eR7n8YYNNVg">
                      <branchBehaviour_BranchTransition id="_LbiDRo6LEe-eR7n8YYNNVg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_LbhcMI6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LbiDQY6LEe-eR7n8YYNNVg"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_LbiDQY6LEe-eR7n8YYNNVg" entityName="If Branch" predecessor_AbstractAction="_LbhcMI6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbiDQo6LEe-eR7n8YYNNVg">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LbhcNI6LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_LbiDQI6LEe-eR7n8YYNNVg">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_LbhcMY6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LbhcMo6LEe-eR7n8YYNNVg"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_LbhcMo6LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_LbhcMY6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbhcM46LEe-eR7n8YYNNVg"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_LbhcM46LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbhcMo6LEe-eR7n8YYNNVg"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_LbiDQo6LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_LbiDQY6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbiDQ46LEe-eR7n8YYNNVg"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_LbiDQ46LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbiDQo6LEe-eR7n8YYNNVg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LbiDSo6LEe-eR7n8YYNNVg">
                      <branchBehaviour_BranchTransition id="_LbiDTI6LEe-eR7n8YYNNVg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_LbiDR46LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LbiDSI6LEe-eR7n8YYNNVg"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_LbiDSI6LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_LbiDR46LEe-eR7n8YYNNVg" successor_AbstractAction="_LbiDSY6LEe-eR7n8YYNNVg"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_LbiDSY6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbiDSI6LEe-eR7n8YYNNVg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LbiqUY6LEe-eR7n8YYNNVg">
                      <branchBehaviour_BranchTransition id="_LbiqU46LEe-eR7n8YYNNVg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_LbiDTY6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LbiDTo6LEe-eR7n8YYNNVg"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_LbiDTo6LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_LbiDTY6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbiqUI6LEe-eR7n8YYNNVg"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_LbiqUI6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbiDTo6LEe-eR7n8YYNNVg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbiqVY6LEe-eR7n8YYNNVg" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_LbiqVI6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbiqVo6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbiqVo6LEe-eR7n8YYNNVg" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_LbiqVY6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbiqV46LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbiqV46LEe-eR7n8YYNNVg" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_LbiqVo6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbiqWI6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbiqWI6LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_LbiqV46LEe-eR7n8YYNNVg" successor_AbstractAction="_LbiqWY6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbiqWY6LEe-eR7n8YYNNVg" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_LbiqWI6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbiqWo6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbiqWo6LEe-eR7n8YYNNVg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_LbiqWY6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbiqW46LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbiqW46LEe-eR7n8YYNNVg" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_LbiqWo6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbjRYI6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_LbjRYI6LEe-eR7n8YYNNVg" entityName="deferredResult" predecessor_AbstractAction="_LbiqW46LEe-eR7n8YYNNVg" successor_AbstractAction="_LbjRYY6LEe-eR7n8YYNNVg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_LbjRYY6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbjRYI6LEe-eR7n8YYNNVg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_LbjRZo6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbjRZY6LEe-eR7n8YYNNVg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_LbjRa46LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbjRao6LEe-eR7n8YYNNVg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_LcVUho6LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_LcVUhY6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_LcSRMY6LEe-eR7n8YYNNVg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_LbqmNI6LEe-eR7n8YYNNVg" describedService__SEFF="_LVfFoo6LEe-eR7n8YYNNVg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_Lbow9o6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_Lbow_Y6LEe-eR7n8YYNNVg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_Lbow_Y6LEe-eR7n8YYNNVg" entityName="If Branch" predecessor_AbstractAction="_Lbow9o6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbow_o6LEe-eR7n8YYNNVg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Lbow-o6LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_Lbow_I6LEe-eR7n8YYNNVg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Lbow946LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_Lbow-I6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Lbow-I6LEe-eR7n8YYNNVg" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_Lbow946LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbow-Y6LEe-eR7n8YYNNVg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Lbow-Y6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_Lbow-I6LEe-eR7n8YYNNVg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbow_o6LEe-eR7n8YYNNVg" entityName="stopWatch.start()" predecessor_AbstractAction="_Lbow_Y6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbqmMY6LEe-eR7n8YYNNVg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_LbqmMY6LEe-eR7n8YYNNVg" entityName="If Branch" predecessor_AbstractAction="_Lbow_o6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbqmMo6LEe-eR7n8YYNNVg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LbqmLo6LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_LbqmMI6LEe-eR7n8YYNNVg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Lbow_46LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LbqmLI6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_LbqmLI6LEe-eR7n8YYNNVg" entityName="Switch Branch" predecessor_AbstractAction="_Lbow_46LEe-eR7n8YYNNVg" successor_AbstractAction="_LbqmLY6LEe-eR7n8YYNNVg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Lbp_FI6LEe-eR7n8YYNNVg">
                <branchBehaviour_BranchTransition id="_Lbp_Fo6LEe-eR7n8YYNNVg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_LboxAI6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LboxAY6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LboxAY6LEe-eR7n8YYNNVg" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_LboxAI6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbpYCI6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_LbpYCI6LEe-eR7n8YYNNVg" entityName="If Branch" predecessor_AbstractAction="_LboxAY6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbpYCY6LEe-eR7n8YYNNVg">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LbpYBY6LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_LbpYB46LEe-eR7n8YYNNVg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_LboxAo6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LbpYA46LEe-eR7n8YYNNVg"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_LbpYA46LEe-eR7n8YYNNVg" entityName="If Branch" predecessor_AbstractAction="_LboxAo6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbpYBI6LEe-eR7n8YYNNVg">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LbpYAI6LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_LbpYAo6LEe-eR7n8YYNNVg">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_LboxA46LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LboxBI6LEe-eR7n8YYNNVg"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_LboxBI6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LboxA46LEe-eR7n8YYNNVg"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_LbpYBI6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbpYA46LEe-eR7n8YYNNVg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbpYCY6LEe-eR7n8YYNNVg" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_LbpYCI6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbpYCo6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbpYCo6LEe-eR7n8YYNNVg" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_LbpYCY6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbpYC46LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbpYC46LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_LbpYCo6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbpYDI6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbpYDI6LEe-eR7n8YYNNVg" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_LbpYC46LEe-eR7n8YYNNVg" successor_AbstractAction="_LbpYDY6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbpYDY6LEe-eR7n8YYNNVg" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_LbpYDI6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbpYDo6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_LbpYDo6LEe-eR7n8YYNNVg" entityName="deferredResult" predecessor_AbstractAction="_LbpYDY6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbpYD46LEe-eR7n8YYNNVg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbpYD46LEe-eR7n8YYNNVg" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_LbpYDo6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbpYEI6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbpYEI6LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_LbpYD46LEe-eR7n8YYNNVg" successor_AbstractAction="_LbpYEY6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbpYEY6LEe-eR7n8YYNNVg" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_LbpYEI6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbp_EI6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbp_EI6LEe-eR7n8YYNNVg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_LbpYEY6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbp_EY6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Lbp_EY6LEe-eR7n8YYNNVg" entityName="deferredResult" predecessor_AbstractAction="_Lbp_EI6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbp_Eo6LEe-eR7n8YYNNVg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbp_Eo6LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Lbp_EY6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbp_E46LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Lbp_E46LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_Lbp_Eo6LEe-eR7n8YYNNVg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LbqmI46LEe-eR7n8YYNNVg">
                <branchBehaviour_BranchTransition id="_LbqmJY6LEe-eR7n8YYNNVg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Lbp_F46LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_Lbp_GI6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbp_GI6LEe-eR7n8YYNNVg" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_Lbp_F46LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbp_GY6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbp_GY6LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Lbp_GI6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbp_Go6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbp_Go6LEe-eR7n8YYNNVg" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_Lbp_GY6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbp_G46LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbp_G46LEe-eR7n8YYNNVg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_Lbp_Go6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbqmII6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_LbqmII6LEe-eR7n8YYNNVg" entityName="deferredResult" predecessor_AbstractAction="_Lbp_G46LEe-eR7n8YYNNVg" successor_AbstractAction="_LbqmIY6LEe-eR7n8YYNNVg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbqmIY6LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_LbqmII6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbqmIo6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_LbqmIo6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbqmIY6LEe-eR7n8YYNNVg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LbqmKY6LEe-eR7n8YYNNVg">
                <branchBehaviour_BranchTransition id="_LbqmK46LEe-eR7n8YYNNVg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_LbqmJo6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LbqmJ46LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbqmJ46LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_LbqmJo6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbqmKI6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_LbqmKI6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbqmJ46LEe-eR7n8YYNNVg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_LbqmLY6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbqmLI6LEe-eR7n8YYNNVg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_LbqmMo6LEe-eR7n8YYNNVg" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_LbqmMY6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbqmM46LEe-eR7n8YYNNVg"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_LbqmM46LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbqmMo6LEe-eR7n8YYNNVg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_LcXwy46LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_LcXwyo6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_LcSRMI6LEe-eR7n8YYNNVg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_Lbow9I6LEe-eR7n8YYNNVg" describedService__SEFF="_LVgTw46LEe-eR7n8YYNNVg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_Lbni1I6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_Lbow8Y6LEe-eR7n8YYNNVg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_Lbow8Y6LEe-eR7n8YYNNVg" entityName="If Branch" predecessor_AbstractAction="_Lbni1I6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbow8o6LEe-eR7n8YYNNVg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LboJ846LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_Lbow8I6LEe-eR7n8YYNNVg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Lbni1Y6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LboJ8Y6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_LboJ8Y6LEe-eR7n8YYNNVg" entityName="Switch Branch" predecessor_AbstractAction="_Lbni1Y6LEe-eR7n8YYNNVg" successor_AbstractAction="_LboJ8o6LEe-eR7n8YYNNVg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LboJ446LEe-eR7n8YYNNVg">
                <branchBehaviour_BranchTransition id="_LboJ5Y6LEe-eR7n8YYNNVg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Lbni1o6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_Lbni4o6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_Lbni4o6LEe-eR7n8YYNNVg" entityName="If Branch" predecessor_AbstractAction="_Lbni1o6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbni446LEe-eR7n8YYNNVg">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Lbni346LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_Lbni4Y6LEe-eR7n8YYNNVg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_Lbni146LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_Lbni3Y6LEe-eR7n8YYNNVg"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_Lbni3Y6LEe-eR7n8YYNNVg" entityName="If Branch" predecessor_AbstractAction="_Lbni146LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbni3o6LEe-eR7n8YYNNVg">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Lbni2o6LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_Lbni3I6LEe-eR7n8YYNNVg">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_Lbni2I6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_Lbni2Y6LEe-eR7n8YYNNVg"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_Lbni2Y6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_Lbni2I6LEe-eR7n8YYNNVg"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_Lbni3o6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_Lbni3Y6LEe-eR7n8YYNNVg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbni446LEe-eR7n8YYNNVg" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_Lbni4o6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbni5I6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbni5I6LEe-eR7n8YYNNVg" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_Lbni446LEe-eR7n8YYNNVg" successor_AbstractAction="_LboJ4I6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_LboJ4I6LEe-eR7n8YYNNVg" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_Lbni5I6LEe-eR7n8YYNNVg" successor_AbstractAction="_LboJ4Y6LEe-eR7n8YYNNVg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LboJ4Y6LEe-eR7n8YYNNVg" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_LboJ4I6LEe-eR7n8YYNNVg" successor_AbstractAction="_LboJ4o6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_LboJ4o6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LboJ4Y6LEe-eR7n8YYNNVg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LboJ6Y6LEe-eR7n8YYNNVg">
                <branchBehaviour_BranchTransition id="_LboJ646LEe-eR7n8YYNNVg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_LboJ5o6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LboJ546LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LboJ546LEe-eR7n8YYNNVg" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_LboJ5o6LEe-eR7n8YYNNVg" successor_AbstractAction="_LboJ6I6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_LboJ6I6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LboJ546LEe-eR7n8YYNNVg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LboJ7o6LEe-eR7n8YYNNVg">
                <branchBehaviour_BranchTransition id="_LboJ8I6LEe-eR7n8YYNNVg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_LboJ7I6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LboJ7Y6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_LboJ7Y6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LboJ7I6LEe-eR7n8YYNNVg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_LboJ8o6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LboJ8Y6LEe-eR7n8YYNNVg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbow8o6LEe-eR7n8YYNNVg" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_Lbow8Y6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbow846LEe-eR7n8YYNNVg"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_Lbow846LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_Lbow8o6LEe-eR7n8YYNNVg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_LcaNCY6LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_LcaNCI6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_LcSRM46LEe-eR7n8YYNNVg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_Lbltr46LEe-eR7n8YYNNVg" describedService__SEFF="_LVgTwI6LEe-eR7n8YYNNVg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_LbjRbo6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_Lbj4do6LEe-eR7n8YYNNVg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_Lbj4do6LEe-eR7n8YYNNVg" entityName="If Branch" predecessor_AbstractAction="_LbjRbo6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbj4d46LEe-eR7n8YYNNVg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Lbj4c46LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_Lbj4dY6LEe-eR7n8YYNNVg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Lbj4cI6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_Lbj4cY6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Lbj4cY6LEe-eR7n8YYNNVg" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_Lbj4cI6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbj4co6LEe-eR7n8YYNNVg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController_generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController_generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Lbj4co6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_Lbj4cY6LEe-eR7n8YYNNVg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbj4d46LEe-eR7n8YYNNVg" entityName="stopWatch.start()" predecessor_AbstractAction="_Lbj4do6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbltrY6LEe-eR7n8YYNNVg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_LbltrY6LEe-eR7n8YYNNVg" entityName="Switch Branch" predecessor_AbstractAction="_Lbj4d46LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbltro6LEe-eR7n8YYNNVg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LblGkY6LEe-eR7n8YYNNVg">
          <branchBehaviour_BranchTransition id="_LblGk46LEe-eR7n8YYNNVg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Lbj4eI6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_Lbj4eY6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbj4eY6LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Lbj4eI6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbj4eo6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbj4eo6LEe-eR7n8YYNNVg" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_Lbj4eY6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbj4e46LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbj4e46LEe-eR7n8YYNNVg" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_Lbj4eo6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbj4fI6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbj4fI6LEe-eR7n8YYNNVg" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_Lbj4e46LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbj4fY6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Lbj4fY6LEe-eR7n8YYNNVg" entityName="deferredResult" predecessor_AbstractAction="_Lbj4fI6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbkfi46LEe-eR7n8YYNNVg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_Lbkfi46LEe-eR7n8YYNNVg" entityName="If Branch" predecessor_AbstractAction="_Lbj4fY6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbkfjI6LEe-eR7n8YYNNVg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LbkfiI6LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_Lbkfio6LEe-eR7n8YYNNVg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Lbj4fo6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LbkfgI6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbkfgI6LEe-eR7n8YYNNVg" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_Lbj4fo6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbkfgY6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbkfgY6LEe-eR7n8YYNNVg" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_LbkfgI6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbkfgo6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbkfgo6LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_LbkfgY6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbkfg46LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbkfg46LEe-eR7n8YYNNVg" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_Lbkfgo6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbkfhI6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbkfhI6LEe-eR7n8YYNNVg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_Lbkfg46LEe-eR7n8YYNNVg" successor_AbstractAction="_LbkfhY6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbkfhY6LEe-eR7n8YYNNVg" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_LbkfhI6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbkfho6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Lbkfho6LEe-eR7n8YYNNVg" entityName="deferredResult" predecessor_AbstractAction="_LbkfhY6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbkfh46LEe-eR7n8YYNNVg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Lbkfh46LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_Lbkfho6LEe-eR7n8YYNNVg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_LbkfjI6LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Lbkfi46LEe-eR7n8YYNNVg" successor_AbstractAction="_LbkfjY6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_LbkfjY6LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_LbkfjI6LEe-eR7n8YYNNVg" successor_AbstractAction="_LblGkI6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_LblGkI6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbkfjY6LEe-eR7n8YYNNVg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LbltpI6LEe-eR7n8YYNNVg">
          <branchBehaviour_BranchTransition id="_Lbltpo6LEe-eR7n8YYNNVg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_LblGlI6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LbltoI6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_LbltoI6LEe-eR7n8YYNNVg" entityName="If Branch" predecessor_AbstractAction="_LblGlI6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbltoY6LEe-eR7n8YYNNVg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LblGno6LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_LblGoI6LEe-eR7n8YYNNVg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_LblGlY6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LblGlo6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LblGlo6LEe-eR7n8YYNNVg" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_LblGlY6LEe-eR7n8YYNNVg" successor_AbstractAction="_LblGl46LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LblGl46LEe-eR7n8YYNNVg" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_LblGlo6LEe-eR7n8YYNNVg" successor_AbstractAction="_LblGmI6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LblGmI6LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_LblGl46LEe-eR7n8YYNNVg" successor_AbstractAction="_LblGmY6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LblGmY6LEe-eR7n8YYNNVg" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_LblGmI6LEe-eR7n8YYNNVg" successor_AbstractAction="_LblGmo6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LblGmo6LEe-eR7n8YYNNVg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_LblGmY6LEe-eR7n8YYNNVg" successor_AbstractAction="_LblGm46LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LblGm46LEe-eR7n8YYNNVg" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_LblGmo6LEe-eR7n8YYNNVg" successor_AbstractAction="_LblGnI6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_LblGnI6LEe-eR7n8YYNNVg" entityName="deferredResult" predecessor_AbstractAction="_LblGm46LEe-eR7n8YYNNVg" successor_AbstractAction="_LblGnY6LEe-eR7n8YYNNVg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_LblGnY6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LblGnI6LEe-eR7n8YYNNVg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_LbltoY6LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_LbltoI6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbltoo6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Lbltoo6LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_LbltoY6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lblto46LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Lblto46LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_Lbltoo6LEe-eR7n8YYNNVg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Lbltqo6LEe-eR7n8YYNNVg">
          <branchBehaviour_BranchTransition id="_LbltrI6LEe-eR7n8YYNNVg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Lbltp46LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LbltqI6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_LbltqI6LEe-eR7n8YYNNVg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Lbltp46LEe-eR7n8YYNNVg" successor_AbstractAction="_LbltqY6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_LbltqY6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbltqI6LEe-eR7n8YYNNVg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_Lbltro6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbltrY6LEe-eR7n8YYNNVg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_LccpSI6LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_LccpRo6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_LcSRMo6LEe-eR7n8YYNNVg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_LccpR46LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_LcSRNI6LEe-eR7n8YYNNVg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_Lbm7zI6LEe-eR7n8YYNNVg" describedService__SEFF="_LUx7AI6LEe-eR7n8YYNNVg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_LbltsY6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LbmUvI6LEe-eR7n8YYNNVg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_LbmUvI6LEe-eR7n8YYNNVg" entityName="If Branch" predecessor_AbstractAction="_LbltsY6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbm7yo6LEe-eR7n8YYNNVg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LbmUs46LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_LbmUtY6LEe-eR7n8YYNNVg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_LbmUsI6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LbmUsY6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_LbmUsY6LEe-eR7n8YYNNVg" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_LbmUsI6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbmUso6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_LbmUso6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbmUsY6LEe-eR7n8YYNNVg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LbmUuY6LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_LbmUu46LEe-eR7n8YYNNVg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_LbmUto6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LbmUt46LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_LbmUt46LEe-eR7n8YYNNVg" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_LbmUto6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbmUuI6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_LbmUuI6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbmUt46LEe-eR7n8YYNNVg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_Lbm7yo6LEe-eR7n8YYNNVg" entityName="If Branch" predecessor_AbstractAction="_LbmUvI6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbm7y46LEe-eR7n8YYNNVg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Lbm7x46LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_Lbm7yY6LEe-eR7n8YYNNVg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_LbmUvY6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_Lbm7xY6LEe-eR7n8YYNNVg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_Lbm7xY6LEe-eR7n8YYNNVg" entityName="If Branch" predecessor_AbstractAction="_LbmUvY6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbm7xo6LEe-eR7n8YYNNVg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_LbmUwo6LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_LbmUxI6LEe-eR7n8YYNNVg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_LbmUvo6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_LbmUv46LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_LbmUv46LEe-eR7n8YYNNVg" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_LbmUvo6LEe-eR7n8YYNNVg" successor_AbstractAction="_LbmUwI6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_LbmUwI6LEe-eR7n8YYNNVg" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_LbmUv46LEe-eR7n8YYNNVg" successor_AbstractAction="_LbmUwY6LEe-eR7n8YYNNVg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_LbmUwY6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_LbmUwI6LEe-eR7n8YYNNVg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Lbm7wo6LEe-eR7n8YYNNVg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_Lbm7xI6LEe-eR7n8YYNNVg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Lbm7wI6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_Lbm7wY6LEe-eR7n8YYNNVg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Lbm7wY6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_Lbm7wI6LEe-eR7n8YYNNVg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Lbm7xo6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_Lbm7xY6LEe-eR7n8YYNNVg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_Lbm7y46LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_Lbm7yo6LEe-eR7n8YYNNVg"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_Lbni0o6LEe-eR7n8YYNNVg" describedService__SEFF="_LVg60o6LEe-eR7n8YYNNVg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_Lbm7zo6LEe-eR7n8YYNNVg" entityName="Start Action" successor_AbstractAction="_Lbni0I6LEe-eR7n8YYNNVg"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Lbni0I6LEe-eR7n8YYNNVg" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_Lbm7zo6LEe-eR7n8YYNNVg" successor_AbstractAction="_Lbni0Y6LEe-eR7n8YYNNVg">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_Lbni0Y6LEe-eR7n8YYNNVg" entityName="Stop Action" predecessor_AbstractAction="_Lbni0I6LEe-eR7n8YYNNVg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_LchhwI6LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:CompositeComponent" id="_LcjW8o6LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_Lcj-AI6LEe-eR7n8YYNNVg" encapsulatedComponent__AssemblyContext="_LccpSI6LEe-eR7n8YYNNVg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_LcklEI6LEe-eR7n8YYNNVg" innerProvidedRole_ProvidedDelegationConnector="_LccpRo6LEe-eR7n8YYNNVg" outerProvidedRole_ProvidedDelegationConnector="_LcjW8I6LEe-eR7n8YYNNVg" assemblyContext_ProvidedDelegationConnector="_Lcj-AI6LEe-eR7n8YYNNVg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_LclMIo6LEe-eR7n8YYNNVg" innerProvidedRole_ProvidedDelegationConnector="_LccpR46LEe-eR7n8YYNNVg" outerProvidedRole_ProvidedDelegationConnector="_LcjW8Y6LEe-eR7n8YYNNVg" assemblyContext_ProvidedDelegationConnector="_Lcj-AI6LEe-eR7n8YYNNVg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_LcjW8I6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_LcSRMo6LEe-eR7n8YYNNVg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_LcjW8Y6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_LcSRNI6LEe-eR7n8YYNNVg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_LcjW846LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_Lcj-Bo6LEe-eR7n8YYNNVg" encapsulatedComponent__AssemblyContext="_LchhwI6LEe-eR7n8YYNNVg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_LcjW9Y6LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_Lcj-BI6LEe-eR7n8YYNNVg" encapsulatedComponent__AssemblyContext="_LcSRNo6LEe-eR7n8YYNNVg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_LclMI46LEe-eR7n8YYNNVg" innerProvidedRole_ProvidedDelegationConnector="_LcSRNY6LEe-eR7n8YYNNVg" outerProvidedRole_ProvidedDelegationConnector="_LcjW9I6LEe-eR7n8YYNNVg" assemblyContext_ProvidedDelegationConnector="_Lcj-BI6LEe-eR7n8YYNNVg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_LcjW9I6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_LcRqKo6LEe-eR7n8YYNNVg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_LcjW946LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_Lcj-CI6LEe-eR7n8YYNNVg" encapsulatedComponent__AssemblyContext="_LcaNCY6LEe-eR7n8YYNNVg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_LclMII6LEe-eR7n8YYNNVg" innerProvidedRole_ProvidedDelegationConnector="_LcaNCI6LEe-eR7n8YYNNVg" outerProvidedRole_ProvidedDelegationConnector="_LcjW9o6LEe-eR7n8YYNNVg" assemblyContext_ProvidedDelegationConnector="_Lcj-CI6LEe-eR7n8YYNNVg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_LcjW9o6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_LcSRM46LEe-eR7n8YYNNVg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_LcjW-Y6LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_Lcj-Ao6LEe-eR7n8YYNNVg" encapsulatedComponent__AssemblyContext="_LcXwy46LEe-eR7n8YYNNVg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_LclMJI6LEe-eR7n8YYNNVg" innerProvidedRole_ProvidedDelegationConnector="_LcXwyo6LEe-eR7n8YYNNVg" outerProvidedRole_ProvidedDelegationConnector="_LcjW-I6LEe-eR7n8YYNNVg" assemblyContext_ProvidedDelegationConnector="_Lcj-Ao6LEe-eR7n8YYNNVg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_LcjW-I6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_LcSRMI6LEe-eR7n8YYNNVg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_LcjW-46LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_Lcj-Co6LEe-eR7n8YYNNVg" encapsulatedComponent__AssemblyContext="_LcVUho6LEe-eR7n8YYNNVg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_LclMIY6LEe-eR7n8YYNNVg" innerProvidedRole_ProvidedDelegationConnector="_LcVUhY6LEe-eR7n8YYNNVg" outerProvidedRole_ProvidedDelegationConnector="_LcjW-o6LEe-eR7n8YYNNVg" assemblyContext_ProvidedDelegationConnector="_Lcj-Co6LEe-eR7n8YYNNVg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_LcjW-o6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_LcSRMY6LEe-eR7n8YYNNVg"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_LcRqKo6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_LVfsso6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_LVfFoY6LEe-eR7n8YYNNVg">
      <parameters__OperationSignature dataType__Parameter="_LVfFoI6LEe-eR7n8YYNNVg" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_LcSRMI6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_LVgTw46LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_LUxT8Y6LEe-eR7n8YYNNVg">
      <parameters__OperationSignature dataType__Parameter="_LVfFoI6LEe-eR7n8YYNNVg" parameterName="registrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_LcSRMY6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_LVfFoo6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_LVfFoY6LEe-eR7n8YYNNVg">
      <parameters__OperationSignature dataType__Parameter="_LVfFoI6LEe-eR7n8YYNNVg" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_LcSRMo6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_LUx7AI6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_LUxT8Y6LEe-eR7n8YYNNVg">
      <parameters__OperationSignature dataType__Parameter="_LUwF0I6LEe-eR7n8YYNNVg" parameterName="authorization" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_LUxT8I6LEe-eR7n8YYNNVg" parameterName="teleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_LcSRM46LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_LVgTwI6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_LVfFoY6LEe-eR7n8YYNNVg">
      <parameters__OperationSignature dataType__Parameter="_LVfstY6LEe-eR7n8YYNNVg" parameterName="request" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_LcSRNI6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_LVg60o6LEe-eR7n8YYNNVg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_LUxT8Y6LEe-eR7n8YYNNVg">
      <parameters__OperationSignature dataType__Parameter="_LVg60Y6LEe-eR7n8YYNNVg" parameterName="tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_LUwF0I6LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_LUxT8I6LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_LUxT8Y6LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_LVfFoI6LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_LVfFoY6LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_LVfstY6LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_LVg60Y6LEe-eR7n8YYNNVg" entityName="app_coronawarn_verification_model_Tan"/>
</repository:Repository>
