<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_NjXpNoH4Ee-eEfHVCpbgfw">
  <components__Repository xsi:type="repository:BasicComponent" id="_NjFVV4H4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_NjFVVoH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_NjFVUIH4Ee-eEfHVCpbgfw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_NiccLIH4Ee-eEfHVCpbgfw" describedService__SEFF="_NcK1AYH4Ee-eEfHVCpbgfw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_NianBIH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NibOA4H4Ee-eEfHVCpbgfw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_NibOA4H4Ee-eEfHVCpbgfw" entityName="If Branch" predecessor_AbstractAction="_NianBIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NibOBIH4Ee-eEfHVCpbgfw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NibOAIH4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_NibOAoH4Ee-eEfHVCpbgfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_NianBYH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NianBoH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_NianBoH4Ee-eEfHVCpbgfw" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_NianBYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NianB4H4Ee-eEfHVCpbgfw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_NianB4H4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NianBoH4Ee-eEfHVCpbgfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_NibOBIH4Ee-eEfHVCpbgfw" entityName="stopWatch.start()" predecessor_AbstractAction="_NibOA4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiccKoH4Ee-eEfHVCpbgfw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_NiccKoH4Ee-eEfHVCpbgfw" entityName="If Branch" predecessor_AbstractAction="_NibOBIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiccK4H4Ee-eEfHVCpbgfw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiccJ4H4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_NiccKYH4Ee-eEfHVCpbgfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_NibOBYH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiccJYH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_NiccJYH4Ee-eEfHVCpbgfw" entityName="If Branch" predecessor_AbstractAction="_NibOBYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiccJoH4Ee-eEfHVCpbgfw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiccIoH4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_NiccJIH4Ee-eEfHVCpbgfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_NibOBoH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_Nib1HYH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_Nib1HYH4Ee-eEfHVCpbgfw" entityName="Switch Branch" predecessor_AbstractAction="_NibOBoH4Ee-eEfHVCpbgfw" successor_AbstractAction="_Nib1HoH4Ee-eEfHVCpbgfw">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NibOEYH4Ee-eEfHVCpbgfw">
                      <branchBehaviour_BranchTransition id="_Nib1EIH4Ee-eEfHVCpbgfw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_NibOB4H4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NibODoH4Ee-eEfHVCpbgfw"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_NibODoH4Ee-eEfHVCpbgfw" entityName="If Branch" predecessor_AbstractAction="_NibOB4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NibOD4H4Ee-eEfHVCpbgfw">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NibOC4H4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_NibODYH4Ee-eEfHVCpbgfw">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_NibOCIH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NibOCYH4Ee-eEfHVCpbgfw"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_NibOCYH4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_NibOCIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NibOCoH4Ee-eEfHVCpbgfw"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_NibOCoH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NibOCYH4Ee-eEfHVCpbgfw"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_NibOD4H4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_NibODoH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NibOEIH4Ee-eEfHVCpbgfw"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_NibOEIH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NibOD4H4Ee-eEfHVCpbgfw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Nib1FIH4Ee-eEfHVCpbgfw">
                      <branchBehaviour_BranchTransition id="_Nib1FoH4Ee-eEfHVCpbgfw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_Nib1EYH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_Nib1EoH4Ee-eEfHVCpbgfw"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_Nib1EoH4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_Nib1EYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_Nib1E4H4Ee-eEfHVCpbgfw"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_Nib1E4H4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_Nib1EoH4Ee-eEfHVCpbgfw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Nib1GoH4Ee-eEfHVCpbgfw">
                      <branchBehaviour_BranchTransition id="_Nib1HIH4Ee-eEfHVCpbgfw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_Nib1F4H4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_Nib1GIH4Ee-eEfHVCpbgfw"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_Nib1GIH4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_Nib1F4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_Nib1GYH4Ee-eEfHVCpbgfw"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_Nib1GYH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_Nib1GIH4Ee-eEfHVCpbgfw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Nib1HoH4Ee-eEfHVCpbgfw" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_Nib1HYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_Nib1H4H4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Nib1H4H4Ee-eEfHVCpbgfw" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_Nib1HoH4Ee-eEfHVCpbgfw" successor_AbstractAction="_Nib1IIH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Nib1IIH4Ee-eEfHVCpbgfw" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_Nib1H4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_Nib1IYH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Nib1IYH4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_Nib1IIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_Nib1IoH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Nib1IoH4Ee-eEfHVCpbgfw" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_Nib1IYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_Nib1I4H4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Nib1I4H4Ee-eEfHVCpbgfw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_Nib1IoH4Ee-eEfHVCpbgfw" successor_AbstractAction="_Nib1JIH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Nib1JIH4Ee-eEfHVCpbgfw" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_Nib1I4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiccIIH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_NiccIIH4Ee-eEfHVCpbgfw" entityName="deferredResult" predecessor_AbstractAction="_Nib1JIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiccIYH4Ee-eEfHVCpbgfw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_NiccIYH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiccIIH4Ee-eEfHVCpbgfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_NiccJoH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiccJYH4Ee-eEfHVCpbgfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_NiccK4H4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiccKoH4Ee-eEfHVCpbgfw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_NjIYqIH4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_NjIYqoH4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_NjIYqYH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_NjFVUYH4Ee-eEfHVCpbgfw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_NianAoH4Ee-eEfHVCpbgfw" describedService__SEFF="_NbZY8IH4Ee-eEfHVCpbgfw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_NiZY4YH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_Niam_4H4Ee-eEfHVCpbgfw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_Niam_4H4Ee-eEfHVCpbgfw" entityName="If Branch" predecessor_AbstractAction="_NiZY4YH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NianAIH4Ee-eEfHVCpbgfw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Niam_IH4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_Niam_oH4Ee-eEfHVCpbgfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_NiZY4oH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_Niam-oH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_Niam-oH4Ee-eEfHVCpbgfw" entityName="Switch Branch" predecessor_AbstractAction="_NiZY4oH4Ee-eEfHVCpbgfw" successor_AbstractAction="_Niam-4H4Ee-eEfHVCpbgfw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiZ_8IH4Ee-eEfHVCpbgfw">
                <branchBehaviour_BranchTransition id="_NiZ_8oH4Ee-eEfHVCpbgfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_NiZY44H4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiZ_6oH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_NiZ_6oH4Ee-eEfHVCpbgfw" entityName="If Branch" predecessor_AbstractAction="_NiZY44H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiZ_64H4Ee-eEfHVCpbgfw">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiZ_54H4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_NiZ_6YH4Ee-eEfHVCpbgfw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_NiZY5IH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiZ_5YH4Ee-eEfHVCpbgfw"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_NiZ_5YH4Ee-eEfHVCpbgfw" entityName="If Branch" predecessor_AbstractAction="_NiZY5IH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiZ_5oH4Ee-eEfHVCpbgfw">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiZ_4oH4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_NiZ_5IH4Ee-eEfHVCpbgfw">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_NiZ_4IH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiZ_4YH4Ee-eEfHVCpbgfw"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_NiZ_4YH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiZ_4IH4Ee-eEfHVCpbgfw"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_NiZ_5oH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiZ_5YH4Ee-eEfHVCpbgfw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiZ_64H4Ee-eEfHVCpbgfw" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_NiZ_6oH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiZ_7IH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiZ_7IH4Ee-eEfHVCpbgfw" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_NiZ_64H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiZ_7YH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_NiZ_7YH4Ee-eEfHVCpbgfw" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_NiZ_7IH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiZ_7oH4Ee-eEfHVCpbgfw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiZ_7oH4Ee-eEfHVCpbgfw" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_NiZ_7YH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiZ_74H4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_NiZ_74H4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiZ_7oH4Ee-eEfHVCpbgfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Niam8oH4Ee-eEfHVCpbgfw">
                <branchBehaviour_BranchTransition id="_Niam9IH4Ee-eEfHVCpbgfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_NiZ_84H4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_Niam8IH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Niam8IH4Ee-eEfHVCpbgfw" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_NiZ_84H4Ee-eEfHVCpbgfw" successor_AbstractAction="_Niam8YH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Niam8YH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_Niam8IH4Ee-eEfHVCpbgfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Niam94H4Ee-eEfHVCpbgfw">
                <branchBehaviour_BranchTransition id="_Niam-YH4Ee-eEfHVCpbgfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Niam9YH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_Niam9oH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Niam9oH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_Niam9YH4Ee-eEfHVCpbgfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Niam-4H4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_Niam-oH4Ee-eEfHVCpbgfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_NianAIH4Ee-eEfHVCpbgfw" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_Niam_4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NianAYH4Ee-eEfHVCpbgfw"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_NianAYH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NianAIH4Ee-eEfHVCpbgfw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_NjK07oH4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_NjK07YH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_NjFVVYH4Ee-eEfHVCpbgfw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_NiW8ooH4Ee-eEfHVCpbgfw" describedService__SEFF="_NcMDIIH4Ee-eEfHVCpbgfw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_NiUgUIH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiUgV4H4Ee-eEfHVCpbgfw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_NiUgV4H4Ee-eEfHVCpbgfw" entityName="If Branch" predecessor_AbstractAction="_NiUgUIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiUgWIH4Ee-eEfHVCpbgfw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiUgVIH4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_NiUgVoH4Ee-eEfHVCpbgfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_NiUgUYH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiUgUoH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_NiUgUoH4Ee-eEfHVCpbgfw" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_NiUgUYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiUgU4H4Ee-eEfHVCpbgfw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_NiUgU4H4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiUgUoH4Ee-eEfHVCpbgfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_NiUgWIH4Ee-eEfHVCpbgfw" entityName="stopWatch.start()" predecessor_AbstractAction="_NiUgV4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiW8n4H4Ee-eEfHVCpbgfw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_NiW8n4H4Ee-eEfHVCpbgfw" entityName="If Branch" predecessor_AbstractAction="_NiUgWIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiW8oIH4Ee-eEfHVCpbgfw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiW8nIH4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_NiW8noH4Ee-eEfHVCpbgfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_NiUgWYH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiW8moH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_NiW8moH4Ee-eEfHVCpbgfw" entityName="Switch Branch" predecessor_AbstractAction="_NiUgWYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiW8m4H4Ee-eEfHVCpbgfw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiWVhIH4Ee-eEfHVCpbgfw">
                <branchBehaviour_BranchTransition id="_NiWVhoH4Ee-eEfHVCpbgfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_NiVHYIH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiVHYYH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiVHYYH4Ee-eEfHVCpbgfw" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_NiVHYIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiVudYH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_NiVudYH4Ee-eEfHVCpbgfw" entityName="If Branch" predecessor_AbstractAction="_NiVHYYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiVudoH4Ee-eEfHVCpbgfw">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiVucoH4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_NiVudIH4Ee-eEfHVCpbgfw">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_NiVHYoH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiVucIH4Ee-eEfHVCpbgfw"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_NiVucIH4Ee-eEfHVCpbgfw" entityName="If Branch" predecessor_AbstractAction="_NiVHYoH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiVucYH4Ee-eEfHVCpbgfw">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiVHZYH4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_NiVHZ4H4Ee-eEfHVCpbgfw">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_NiVHY4H4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiVHZIH4Ee-eEfHVCpbgfw"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_NiVHZIH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiVHY4H4Ee-eEfHVCpbgfw"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_NiVucYH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiVucIH4Ee-eEfHVCpbgfw"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiVudoH4Ee-eEfHVCpbgfw" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_NiVudYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiVud4H4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiVud4H4Ee-eEfHVCpbgfw" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_NiVudoH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiVueIH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiVueIH4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_NiVud4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiVueYH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiVueYH4Ee-eEfHVCpbgfw" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_NiVueIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiVueoH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiVueoH4Ee-eEfHVCpbgfw" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_NiVueYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiVue4H4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_NiVue4H4Ee-eEfHVCpbgfw" entityName="deferredResult" predecessor_AbstractAction="_NiVueoH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiVufIH4Ee-eEfHVCpbgfw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiVufIH4Ee-eEfHVCpbgfw" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_NiVue4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiVufYH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiVufYH4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_NiVufIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiVufoH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiVufoH4Ee-eEfHVCpbgfw" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_NiVufYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiWVgIH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiWVgIH4Ee-eEfHVCpbgfw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_NiVufoH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiWVgYH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_NiWVgYH4Ee-eEfHVCpbgfw" entityName="deferredResult" predecessor_AbstractAction="_NiWVgIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiWVgoH4Ee-eEfHVCpbgfw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiWVgoH4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_NiWVgYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiWVg4H4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_NiWVg4H4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiWVgoH4Ee-eEfHVCpbgfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiW8kYH4Ee-eEfHVCpbgfw">
                <branchBehaviour_BranchTransition id="_NiW8k4H4Ee-eEfHVCpbgfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_NiWVh4H4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiWViIH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiWViIH4Ee-eEfHVCpbgfw" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_NiWVh4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiWViYH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiWViYH4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_NiWViIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiWVioH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiWVioH4Ee-eEfHVCpbgfw" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_NiWViYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiWVi4H4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiWVi4H4Ee-eEfHVCpbgfw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_NiWVioH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiWVjIH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_NiWVjIH4Ee-eEfHVCpbgfw" entityName="deferredResult" predecessor_AbstractAction="_NiWVi4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiWVjYH4Ee-eEfHVCpbgfw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiWVjYH4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_NiWVjIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiW8kIH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_NiW8kIH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiWVjYH4Ee-eEfHVCpbgfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiW8l4H4Ee-eEfHVCpbgfw">
                <branchBehaviour_BranchTransition id="_NiW8mYH4Ee-eEfHVCpbgfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_NiW8lIH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiW8lYH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiW8lYH4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_NiW8lIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiW8loH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_NiW8loH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiW8lYH4Ee-eEfHVCpbgfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_NiW8m4H4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiW8moH4Ee-eEfHVCpbgfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_NiW8oIH4Ee-eEfHVCpbgfw" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_NiW8n4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiW8oYH4Ee-eEfHVCpbgfw"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_NiW8oYH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiW8oIH4Ee-eEfHVCpbgfw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_NjNRKoH4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_NjNRKIH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_NjFVUoH4Ee-eEfHVCpbgfw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_NjNRKYH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_NjFVU4H4Ee-eEfHVCpbgfw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_NiT5QoH4Ee-eEfHVCpbgfw" describedService__SEFF="_NcK1BoH4Ee-eEfHVCpbgfw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_NclrwYH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiQO4IH4Ee-eEfHVCpbgfw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_NiQO4IH4Ee-eEfHVCpbgfw" entityName="If Branch" predecessor_AbstractAction="_NclrwYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiT5QIH4Ee-eEfHVCpbgfw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NcovEIH4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_NcpWIIH4Ee-eEfHVCpbgfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Ncng8IH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NcoIAIH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_NcoIAIH4Ee-eEfHVCpbgfw" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_Ncng8IH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NcoIAYH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_NcoIAYH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NcoIAIH4Ee-eEfHVCpbgfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiPn04H4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_NiPn1YH4Ee-eEfHVCpbgfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_NiPn0IH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiPn0YH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_NiPn0YH4Ee-eEfHVCpbgfw" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_NiPn0IH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiPn0oH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_NiPn0oH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiPn0YH4Ee-eEfHVCpbgfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_NiT5QIH4Ee-eEfHVCpbgfw" entityName="If Branch" predecessor_AbstractAction="_NiQO4IH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiT5QYH4Ee-eEfHVCpbgfw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiTSPIH4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_NiTSPoH4Ee-eEfHVCpbgfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_NiQO4YH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiTSOoH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_NiTSOoH4Ee-eEfHVCpbgfw" entityName="If Branch" predecessor_AbstractAction="_NiQO4YH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiTSO4H4Ee-eEfHVCpbgfw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiTSMoH4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_NiTSNIH4Ee-eEfHVCpbgfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_NiQO4oH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiQO44H4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiQO44H4Ee-eEfHVCpbgfw" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_NiQO4oH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiTSMIH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_NiTSMIH4Ee-eEfHVCpbgfw" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_NiQO44H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiTSMYH4Ee-eEfHVCpbgfw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_NiTSMYH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiTSMIH4Ee-eEfHVCpbgfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiTSN4H4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_NiTSOYH4Ee-eEfHVCpbgfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_NiTSNYH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiTSNoH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_NiTSNoH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiTSNYH4Ee-eEfHVCpbgfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_NiTSO4H4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiTSOoH4Ee-eEfHVCpbgfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_NiT5QYH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiT5QIH4Ee-eEfHVCpbgfw"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_NiT5R4H4Ee-eEfHVCpbgfw" describedService__SEFF="_NcKN8YH4Ee-eEfHVCpbgfw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_NiT5RIH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiT5RYH4Ee-eEfHVCpbgfw"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_NiT5RYH4Ee-eEfHVCpbgfw" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_NiT5RIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiT5RoH4Ee-eEfHVCpbgfw">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_NiT5RoH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiT5RYH4Ee-eEfHVCpbgfw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_NjSJp4H4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_NjSJpoH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_NjFVVIH4Ee-eEfHVCpbgfw"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_NiZY34H4Ee-eEfHVCpbgfw" describedService__SEFF="_NcLcE4H4Ee-eEfHVCpbgfw">
      <steps_Behaviour xsi:type="seff:StartAction" id="_NiXjoIH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiXjp4H4Ee-eEfHVCpbgfw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_NiXjp4H4Ee-eEfHVCpbgfw" entityName="If Branch" predecessor_AbstractAction="_NiXjoIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiXjqIH4Ee-eEfHVCpbgfw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiXjpIH4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_NiXjpoH4Ee-eEfHVCpbgfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_NiXjoYH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiXjooH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_NiXjooH4Ee-eEfHVCpbgfw" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_NiXjoYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiXjo4H4Ee-eEfHVCpbgfw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController_generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController_generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_NiXjo4H4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiXjooH4Ee-eEfHVCpbgfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_NiXjqIH4Ee-eEfHVCpbgfw" entityName="stopWatch.start()" predecessor_AbstractAction="_NiXjp4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiZY3YH4Ee-eEfHVCpbgfw"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_NiZY3YH4Ee-eEfHVCpbgfw" entityName="Switch Branch" predecessor_AbstractAction="_NiXjqIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiZY3oH4Ee-eEfHVCpbgfw">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiYxwIH4Ee-eEfHVCpbgfw">
          <branchBehaviour_BranchTransition id="_NiYxwoH4Ee-eEfHVCpbgfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_NiXjqYH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiXjqoH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_NiXjqoH4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_NiXjqYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiXjq4H4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_NiXjq4H4Ee-eEfHVCpbgfw" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_NiXjqoH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiXjrIH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_NiXjrIH4Ee-eEfHVCpbgfw" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_NiXjq4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiXjrYH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_NiXjrYH4Ee-eEfHVCpbgfw" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_NiXjrIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiXjroH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_NiXjroH4Ee-eEfHVCpbgfw" entityName="deferredResult" predecessor_AbstractAction="_NiXjrYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiYKu4H4Ee-eEfHVCpbgfw">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_NiYKu4H4Ee-eEfHVCpbgfw" entityName="If Branch" predecessor_AbstractAction="_NiXjroH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiYKvIH4Ee-eEfHVCpbgfw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiYKuIH4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_NiYKuoH4Ee-eEfHVCpbgfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_NiXjr4H4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiYKsIH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiYKsIH4Ee-eEfHVCpbgfw" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_NiXjr4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiYKsYH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiYKsYH4Ee-eEfHVCpbgfw" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_NiYKsIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiYKsoH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiYKsoH4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_NiYKsYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiYKs4H4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiYKs4H4Ee-eEfHVCpbgfw" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_NiYKsoH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiYKtIH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiYKtIH4Ee-eEfHVCpbgfw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_NiYKs4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiYKtYH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiYKtYH4Ee-eEfHVCpbgfw" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_NiYKtIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiYKtoH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_NiYKtoH4Ee-eEfHVCpbgfw" entityName="deferredResult" predecessor_AbstractAction="_NiYKtYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiYKt4H4Ee-eEfHVCpbgfw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_NiYKt4H4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiYKtoH4Ee-eEfHVCpbgfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_NiYKvIH4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_NiYKu4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiYKvYH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_NiYKvYH4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_NiYKvIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiYKvoH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_NiYKvoH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiYKvYH4Ee-eEfHVCpbgfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiZY1IH4Ee-eEfHVCpbgfw">
          <branchBehaviour_BranchTransition id="_NiZY1oH4Ee-eEfHVCpbgfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_NiYxw4H4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiZY0IH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_NiZY0IH4Ee-eEfHVCpbgfw" entityName="If Branch" predecessor_AbstractAction="_NiYxw4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiZY0YH4Ee-eEfHVCpbgfw">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiYxzYH4Ee-eEfHVCpbgfw" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_NiYxz4H4Ee-eEfHVCpbgfw">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_NiYxxIH4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiYxxYH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiYxxYH4Ee-eEfHVCpbgfw" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_NiYxxIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiYxxoH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiYxxoH4Ee-eEfHVCpbgfw" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_NiYxxYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiYxx4H4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiYxx4H4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_NiYxxoH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiYxyIH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiYxyIH4Ee-eEfHVCpbgfw" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_NiYxx4H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiYxyYH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiYxyYH4Ee-eEfHVCpbgfw" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_NiYxyIH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiYxyoH4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_NiYxyoH4Ee-eEfHVCpbgfw" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_NiYxyYH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiYxy4H4Ee-eEfHVCpbgfw"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_NiYxy4H4Ee-eEfHVCpbgfw" entityName="deferredResult" predecessor_AbstractAction="_NiYxyoH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiYxzIH4Ee-eEfHVCpbgfw">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_NiYxzIH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiYxy4H4Ee-eEfHVCpbgfw"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_NiZY0YH4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_NiZY0IH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiZY0oH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_NiZY0oH4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_NiZY0YH4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiZY04H4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_NiZY04H4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiZY0oH4Ee-eEfHVCpbgfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_NiZY2oH4Ee-eEfHVCpbgfw">
          <branchBehaviour_BranchTransition id="_NiZY3IH4Ee-eEfHVCpbgfw">
            <steps_Behaviour xsi:type="seff:StartAction" id="_NiZY14H4Ee-eEfHVCpbgfw" entityName="Start Action" successor_AbstractAction="_NiZY2IH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_NiZY2IH4Ee-eEfHVCpbgfw" entityName="stopWatch.stop()" predecessor_AbstractAction="_NiZY14H4Ee-eEfHVCpbgfw" successor_AbstractAction="_NiZY2YH4Ee-eEfHVCpbgfw"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_NiZY2YH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiZY2IH4Ee-eEfHVCpbgfw"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_NiZY3oH4Ee-eEfHVCpbgfw" entityName="Stop Action" predecessor_AbstractAction="_NiZY3YH4Ee-eEfHVCpbgfw"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_NjWbEYH4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_NjXpNIH4Ee-eEfHVCpbgfw" encapsulatedComponent__AssemblyContext="_NjK07oH4Ee-eEfHVCpbgfw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_NjYQRIH4Ee-eEfHVCpbgfw" innerProvidedRole_ProvidedDelegationConnector="_NjK07YH4Ee-eEfHVCpbgfw" outerProvidedRole_ProvidedDelegationConnector="_NjWbEIH4Ee-eEfHVCpbgfw" assemblyContext_ProvidedDelegationConnector="_NjXpNIH4Ee-eEfHVCpbgfw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_NjWbEIH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_NjFVVYH4Ee-eEfHVCpbgfw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_NjWbE4H4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_NjXCJIH4Ee-eEfHVCpbgfw" encapsulatedComponent__AssemblyContext="_NjSJp4H4Ee-eEfHVCpbgfw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_NjYQQ4H4Ee-eEfHVCpbgfw" innerProvidedRole_ProvidedDelegationConnector="_NjSJpoH4Ee-eEfHVCpbgfw" outerProvidedRole_ProvidedDelegationConnector="_NjWbEoH4Ee-eEfHVCpbgfw" assemblyContext_ProvidedDelegationConnector="_NjXCJIH4Ee-eEfHVCpbgfw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_NjWbEoH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_NjFVVIH4Ee-eEfHVCpbgfw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_NjWbFoH4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_NjXCIIH4Ee-eEfHVCpbgfw" encapsulatedComponent__AssemblyContext="_NjNRKoH4Ee-eEfHVCpbgfw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_NjYQQoH4Ee-eEfHVCpbgfw" innerProvidedRole_ProvidedDelegationConnector="_NjNRKIH4Ee-eEfHVCpbgfw" outerProvidedRole_ProvidedDelegationConnector="_NjWbFIH4Ee-eEfHVCpbgfw" assemblyContext_ProvidedDelegationConnector="_NjXCIIH4Ee-eEfHVCpbgfw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_NjYQRYH4Ee-eEfHVCpbgfw" innerProvidedRole_ProvidedDelegationConnector="_NjNRKYH4Ee-eEfHVCpbgfw" outerProvidedRole_ProvidedDelegationConnector="_NjWbFYH4Ee-eEfHVCpbgfw" assemblyContext_ProvidedDelegationConnector="_NjXCIIH4Ee-eEfHVCpbgfw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_NjWbFIH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_NjFVUoH4Ee-eEfHVCpbgfw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_NjWbFYH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_NjFVU4H4Ee-eEfHVCpbgfw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_NjWbF4H4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_NjXpMIH4Ee-eEfHVCpbgfw" encapsulatedComponent__AssemblyContext="_NjIYqIH4Ee-eEfHVCpbgfw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_NjWbGYH4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_NjXCIoH4Ee-eEfHVCpbgfw" encapsulatedComponent__AssemblyContext="_NjFVV4H4Ee-eEfHVCpbgfw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_NjYQQYH4Ee-eEfHVCpbgfw" innerProvidedRole_ProvidedDelegationConnector="_NjFVVoH4Ee-eEfHVCpbgfw" outerProvidedRole_ProvidedDelegationConnector="_NjWbGIH4Ee-eEfHVCpbgfw" assemblyContext_ProvidedDelegationConnector="_NjXCIoH4Ee-eEfHVCpbgfw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_NjWbGIH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_NjFVUIH4Ee-eEfHVCpbgfw"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_NjWbG4H4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_NjXpMoH4Ee-eEfHVCpbgfw" encapsulatedComponent__AssemblyContext="_NjIYqoH4Ee-eEfHVCpbgfw"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_NjYQQIH4Ee-eEfHVCpbgfw" innerProvidedRole_ProvidedDelegationConnector="_NjIYqYH4Ee-eEfHVCpbgfw" outerProvidedRole_ProvidedDelegationConnector="_NjWbGoH4Ee-eEfHVCpbgfw" assemblyContext_ProvidedDelegationConnector="_NjXpMoH4Ee-eEfHVCpbgfw"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_NjWbGoH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_NjFVUYH4Ee-eEfHVCpbgfw"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_NjFVUIH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_NcK1AYH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_NcK1AIH4Ee-eEfHVCpbgfw">
      <parameters__OperationSignature dataType__Parameter="_NbXjwIH4Ee-eEfHVCpbgfw" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_NjFVUYH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_NbZY8IH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_NbYx4IH4Ee-eEfHVCpbgfw">
      <parameters__OperationSignature dataType__Parameter="_NbXjwIH4Ee-eEfHVCpbgfw" parameterName="registrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_NjFVUoH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_NcK1BoH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_NbYx4IH4Ee-eEfHVCpbgfw">
      <parameters__OperationSignature dataType__Parameter="_NcK1BIH4Ee-eEfHVCpbgfw" parameterName="authorization" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_NcK1BYH4Ee-eEfHVCpbgfw" parameterName="teleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_NjFVU4H4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_NcKN8YH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_NbYx4IH4Ee-eEfHVCpbgfw">
      <parameters__OperationSignature dataType__Parameter="_NcKN8IH4Ee-eEfHVCpbgfw" parameterName="tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_NjFVVIH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_NcLcE4H4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_NcK1AIH4Ee-eEfHVCpbgfw">
      <parameters__OperationSignature dataType__Parameter="_NcLcEoH4Ee-eEfHVCpbgfw" parameterName="request" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_NjFVVYH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_NcMDIIH4Ee-eEfHVCpbgfw" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_NcK1AIH4Ee-eEfHVCpbgfw">
      <parameters__OperationSignature dataType__Parameter="_NbXjwIH4Ee-eEfHVCpbgfw" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_NbXjwIH4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_NbYx4IH4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_NcKN8IH4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_NcK1AIH4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_NcK1BIH4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_NcK1BYH4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_NcLcEoH4Ee-eEfHVCpbgfw" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
</repository:Repository>
