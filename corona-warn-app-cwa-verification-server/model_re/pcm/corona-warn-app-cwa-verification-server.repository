<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_kE7v0PIoEe6ulvgmIO8ncA">
  <components__Repository xsi:type="repository:BasicComponent" id="_kEpb9_IoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_kEpb9vIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_kEpb8PIoEe6ulvgmIO8ncA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_kD4m__IoEe6ulvgmIO8ncA" describedService__SEFF="_j-CdoPIoEe6ulvgmIO8ncA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_j-cGQfIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD1jofIoEe6ulvgmIO8ncA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_kD1jofIoEe6ulvgmIO8ncA" entityName="If Branch" predecessor_AbstractAction="_j-cGQfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD2KsPIoEe6ulvgmIO8ncA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD08kPIoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_kD1joPIoEe6ulvgmIO8ncA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_j-d7cPIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD0VgPIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_kD0VgPIoEe6ulvgmIO8ncA" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_j-d7cPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD0VgfIoEe6ulvgmIO8ncA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController.generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController.generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_kD0VgfIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD0VgPIoEe6ulvgmIO8ncA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_kD2KsPIoEe6ulvgmIO8ncA" entityName="stopWatch.start()" predecessor_AbstractAction="_kD1jofIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD4m_fIoEe6ulvgmIO8ncA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_kD4m_fIoEe6ulvgmIO8ncA" entityName="Switch Branch" predecessor_AbstractAction="_kD2KsPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD4m_vIoEe6ulvgmIO8ncA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD3Y2_IoEe6ulvgmIO8ncA">
          <branchBehaviour_BranchTransition id="_kD3_4PIoEe6ulvgmIO8ncA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_kD2xwPIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD2xwfIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_kD2xwfIoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD2xwPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD2xwvIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_kD2xwvIoEe6ulvgmIO8ncA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_kD2xwfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD2xw_IoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_kD2xw_IoEe6ulvgmIO8ncA" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_kD2xwvIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD2xxPIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_kD2xxPIoEe6ulvgmIO8ncA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_kD2xw_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD2xxfIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_kD2xxfIoEe6ulvgmIO8ncA" entityName="deferredResult" predecessor_AbstractAction="_kD2xxPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD3Y1_IoEe6ulvgmIO8ncA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_kD3Y1_IoEe6ulvgmIO8ncA" entityName="If Branch" predecessor_AbstractAction="_kD2xxfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD3Y2PIoEe6ulvgmIO8ncA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD3Y1PIoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_kD3Y1vIoEe6ulvgmIO8ncA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_kD2xxvIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD2xx_IoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD2xx_IoEe6ulvgmIO8ncA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_kD2xxvIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD2xyPIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD2xyPIoEe6ulvgmIO8ncA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_kD2xx_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD2xyfIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD2xyfIoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD2xyPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD2xyvIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD2xyvIoEe6ulvgmIO8ncA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_kD2xyfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD3Y0PIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD3Y0PIoEe6ulvgmIO8ncA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_kD2xyvIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD3Y0fIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD3Y0fIoEe6ulvgmIO8ncA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_kD3Y0PIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD3Y0vIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_kD3Y0vIoEe6ulvgmIO8ncA" entityName="deferredResult" predecessor_AbstractAction="_kD3Y0fIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD3Y0_IoEe6ulvgmIO8ncA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_kD3Y0_IoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD3Y0vIoEe6ulvgmIO8ncA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_kD3Y2PIoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD3Y1_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD3Y2fIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_kD3Y2fIoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD3Y2PIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD3Y2vIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_kD3Y2vIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD3Y2fIoEe6ulvgmIO8ncA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD4m9PIoEe6ulvgmIO8ncA">
          <branchBehaviour_BranchTransition id="_kD4m9vIoEe6ulvgmIO8ncA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_kD3_4fIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD4m8PIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_kD4m8PIoEe6ulvgmIO8ncA" entityName="If Branch" predecessor_AbstractAction="_kD3_4fIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD4m8fIoEe6ulvgmIO8ncA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD3_6_IoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_kD3_7fIoEe6ulvgmIO8ncA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_kD3_4vIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD3_4_IoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD3_4_IoEe6ulvgmIO8ncA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_kD3_4vIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD3_5PIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD3_5PIoEe6ulvgmIO8ncA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_kD3_4_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD3_5fIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD3_5fIoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD3_5PIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD3_5vIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD3_5vIoEe6ulvgmIO8ncA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_kD3_5fIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD3_5_IoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD3_5_IoEe6ulvgmIO8ncA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_kD3_5vIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD3_6PIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD3_6PIoEe6ulvgmIO8ncA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_kD3_5_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD3_6fIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_kD3_6fIoEe6ulvgmIO8ncA" entityName="deferredResult" predecessor_AbstractAction="_kD3_6PIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD3_6vIoEe6ulvgmIO8ncA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_kD3_6vIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD3_6fIoEe6ulvgmIO8ncA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_kD4m8fIoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD4m8PIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD4m8vIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_kD4m8vIoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD4m8fIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD4m8_IoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_kD4m8_IoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD4m8vIoEe6ulvgmIO8ncA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD4m-vIoEe6ulvgmIO8ncA">
          <branchBehaviour_BranchTransition id="_kD4m_PIoEe6ulvgmIO8ncA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_kD4m9_IoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD4m-PIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_kD4m-PIoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD4m9_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD4m-fIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_kD4m-fIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD4m-PIoEe6ulvgmIO8ncA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_kD4m_vIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD4m_fIoEe6ulvgmIO8ncA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_kEtGUfIoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_kEtGUPIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_kEpb9fIoEe6ulvgmIO8ncA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_kD_7t_IoEe6ulvgmIO8ncA" describedService__SEFF="_j-B2kfIoEe6ulvgmIO8ncA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_kD-GhPIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD-Gi_IoEe6ulvgmIO8ncA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_kD-Gi_IoEe6ulvgmIO8ncA" entityName="If Branch" predecessor_AbstractAction="_kD-GhPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD-GjPIoEe6ulvgmIO8ncA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD-GiPIoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_kD-GivIoEe6ulvgmIO8ncA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_kD-GhfIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD-GhvIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_kD-GhvIoEe6ulvgmIO8ncA" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_kD-GhfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD-Gh_IoEe6ulvgmIO8ncA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_kD-Gh_IoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD-GhvIoEe6ulvgmIO8ncA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_kD-GjPIoEe6ulvgmIO8ncA" entityName="stopWatch.start()" predecessor_AbstractAction="_kD-Gi_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD_7tfIoEe6ulvgmIO8ncA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_kD_7tfIoEe6ulvgmIO8ncA" entityName="If Branch" predecessor_AbstractAction="_kD-GjPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD_7tvIoEe6ulvgmIO8ncA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD_7svIoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_kD_7tPIoEe6ulvgmIO8ncA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_kD-GjfIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD_7sPIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_kD_7sPIoEe6ulvgmIO8ncA" entityName="If Branch" predecessor_AbstractAction="_kD-GjfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD_7sfIoEe6ulvgmIO8ncA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD_UqvIoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_kD_UrPIoEe6ulvgmIO8ncA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_kD-GjvIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD_UoPIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_kD_UoPIoEe6ulvgmIO8ncA" entityName="Switch Branch" predecessor_AbstractAction="_kD-GjvIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD_UofIoEe6ulvgmIO8ncA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD-tk_IoEe6ulvgmIO8ncA">
                      <branchBehaviour_BranchTransition id="_kD-tlfIoEe6ulvgmIO8ncA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_kD-Gj_IoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD-tkPIoEe6ulvgmIO8ncA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_kD-tkPIoEe6ulvgmIO8ncA" entityName="If Branch" predecessor_AbstractAction="_kD-Gj_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD-tkfIoEe6ulvgmIO8ncA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD-Gk_IoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_kD-GlfIoEe6ulvgmIO8ncA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_kD-GkPIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD-GkfIoEe6ulvgmIO8ncA"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_kD-GkfIoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD-GkPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD-GkvIoEe6ulvgmIO8ncA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_kD-GkvIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD-GkfIoEe6ulvgmIO8ncA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_kD-tkfIoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD-tkPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD-tkvIoEe6ulvgmIO8ncA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_kD-tkvIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD-tkfIoEe6ulvgmIO8ncA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD-tmfIoEe6ulvgmIO8ncA">
                      <branchBehaviour_BranchTransition id="_kD-tm_IoEe6ulvgmIO8ncA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_kD-tlvIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD-tl_IoEe6ulvgmIO8ncA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_kD-tl_IoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD-tlvIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD-tmPIoEe6ulvgmIO8ncA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_kD-tmPIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD-tl_IoEe6ulvgmIO8ncA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD-tn_IoEe6ulvgmIO8ncA">
                      <branchBehaviour_BranchTransition id="_kD-tofIoEe6ulvgmIO8ncA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_kD-tnPIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD-tnfIoEe6ulvgmIO8ncA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_kD-tnfIoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD-tnPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD-tnvIoEe6ulvgmIO8ncA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_kD-tnvIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD-tnfIoEe6ulvgmIO8ncA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD_UofIoEe6ulvgmIO8ncA" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_kD_UoPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD_UovIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD_UovIoEe6ulvgmIO8ncA" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_kD_UofIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD_Uo_IoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD_Uo_IoEe6ulvgmIO8ncA" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_kD_UovIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD_UpPIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD_UpPIoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD_Uo_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD_UpfIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD_UpfIoEe6ulvgmIO8ncA" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_kD_UpPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD_UpvIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD_UpvIoEe6ulvgmIO8ncA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_kD_UpfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD_Up_IoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD_Up_IoEe6ulvgmIO8ncA" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_kD_UpvIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD_UqPIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_kD_UqPIoEe6ulvgmIO8ncA" entityName="deferredResult" predecessor_AbstractAction="_kD_Up_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD_UqfIoEe6ulvgmIO8ncA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_kD_UqfIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD_UqPIoEe6ulvgmIO8ncA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_kD_7sfIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD_7sPIoEe6ulvgmIO8ncA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_kD_7tvIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD_7tfIoEe6ulvgmIO8ncA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_kEvikPIoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_kEu7jfIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_kEpb9PIoEe6ulvgmIO8ncA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_kD8RYvIoEe6ulvgmIO8ncA" describedService__SEFF="_j-BPg_IoEe6ulvgmIO8ncA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_kD7DQPIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD8RX_IoEe6ulvgmIO8ncA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_kD8RX_IoEe6ulvgmIO8ncA" entityName="If Branch" predecessor_AbstractAction="_kD7DQPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD8RYPIoEe6ulvgmIO8ncA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD8RXPIoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_kD8RXvIoEe6ulvgmIO8ncA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_kD7DQfIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD8RWvIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_kD8RWvIoEe6ulvgmIO8ncA" entityName="Switch Branch" predecessor_AbstractAction="_kD7DQfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD8RW_IoEe6ulvgmIO8ncA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD7qTPIoEe6ulvgmIO8ncA">
                <branchBehaviour_BranchTransition id="_kD7qTvIoEe6ulvgmIO8ncA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_kD7DQvIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD7qRvIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_kD7qRvIoEe6ulvgmIO8ncA" entityName="If Branch" predecessor_AbstractAction="_kD7DQvIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD7qR_IoEe6ulvgmIO8ncA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD7qQ_IoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_kD7qRfIoEe6ulvgmIO8ncA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_kD7DQ_IoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD7qQfIoEe6ulvgmIO8ncA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_kD7qQfIoEe6ulvgmIO8ncA" entityName="If Branch" predecessor_AbstractAction="_kD7DQ_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD7qQvIoEe6ulvgmIO8ncA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD7DRvIoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_kD7qQPIoEe6ulvgmIO8ncA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_kD7DRPIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD7DRfIoEe6ulvgmIO8ncA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_kD7DRfIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD7DRPIoEe6ulvgmIO8ncA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_kD7qQvIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD7qQfIoEe6ulvgmIO8ncA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD7qR_IoEe6ulvgmIO8ncA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_kD7qRvIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD7qSPIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD7qSPIoEe6ulvgmIO8ncA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_kD7qR_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD7qSfIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_kD7qSfIoEe6ulvgmIO8ncA" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_kD7qSPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD7qSvIoEe6ulvgmIO8ncA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD7qSvIoEe6ulvgmIO8ncA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_kD7qSfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD7qS_IoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_kD7qS_IoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD7qSvIoEe6ulvgmIO8ncA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD8RUvIoEe6ulvgmIO8ncA">
                <branchBehaviour_BranchTransition id="_kD8RVPIoEe6ulvgmIO8ncA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_kD7qT_IoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD8RUPIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD8RUPIoEe6ulvgmIO8ncA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_kD7qT_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD8RUfIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_kD8RUfIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD8RUPIoEe6ulvgmIO8ncA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD8RV_IoEe6ulvgmIO8ncA">
                <branchBehaviour_BranchTransition id="_kD8RWfIoEe6ulvgmIO8ncA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_kD8RVfIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD8RVvIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_kD8RVvIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD8RVfIoEe6ulvgmIO8ncA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_kD8RW_IoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD8RWvIoEe6ulvgmIO8ncA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_kD8RYPIoEe6ulvgmIO8ncA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_kD8RX_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD8RYfIoEe6ulvgmIO8ncA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_kD8RYfIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD8RYPIoEe6ulvgmIO8ncA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_kExXy_IoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_kExXyvIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_kEpb8_IoEe6ulvgmIO8ncA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_kD7DPvIoEe6ulvgmIO8ncA" describedService__SEFF="_j-Cdo_IoEe6ulvgmIO8ncA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_kD5OAfIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD5OCPIoEe6ulvgmIO8ncA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_kD5OCPIoEe6ulvgmIO8ncA" entityName="If Branch" predecessor_AbstractAction="_kD5OAfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD5OCfIoEe6ulvgmIO8ncA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD5OBfIoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_kD5OB_IoEe6ulvgmIO8ncA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_kD5OAvIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD5OA_IoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_kD5OA_IoEe6ulvgmIO8ncA" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_kD5OAvIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD5OBPIoEe6ulvgmIO8ncA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_kD5OBPIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD5OA_IoEe6ulvgmIO8ncA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_kD5OCfIoEe6ulvgmIO8ncA" entityName="stopWatch.start()" predecessor_AbstractAction="_kD5OCPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD7DO_IoEe6ulvgmIO8ncA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_kD7DO_IoEe6ulvgmIO8ncA" entityName="If Branch" predecessor_AbstractAction="_kD5OCfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD7DPPIoEe6ulvgmIO8ncA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD7DOPIoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_kD7DOvIoEe6ulvgmIO8ncA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_kD5OCvIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD7DNvIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_kD7DNvIoEe6ulvgmIO8ncA" entityName="Switch Branch" predecessor_AbstractAction="_kD5OCvIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD7DN_IoEe6ulvgmIO8ncA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD6cIfIoEe6ulvgmIO8ncA">
                <branchBehaviour_BranchTransition id="_kD6cI_IoEe6ulvgmIO8ncA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_kD5OC_IoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD5ODPIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD5ODPIoEe6ulvgmIO8ncA" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_kD5OC_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD51EvIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_kD51EvIoEe6ulvgmIO8ncA" entityName="If Branch" predecessor_AbstractAction="_kD5ODPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD51E_IoEe6ulvgmIO8ncA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD5OFfIoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_kD51EfIoEe6ulvgmIO8ncA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_kD5ODfIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD5OE_IoEe6ulvgmIO8ncA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_kD5OE_IoEe6ulvgmIO8ncA" entityName="If Branch" predecessor_AbstractAction="_kD5ODfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD5OFPIoEe6ulvgmIO8ncA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD5OEPIoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_kD5OEvIoEe6ulvgmIO8ncA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_kD5ODvIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD5OD_IoEe6ulvgmIO8ncA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_kD5OD_IoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD5ODvIoEe6ulvgmIO8ncA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_kD5OFPIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD5OE_IoEe6ulvgmIO8ncA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD51E_IoEe6ulvgmIO8ncA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_kD51EvIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD51FPIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD51FPIoEe6ulvgmIO8ncA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_kD51E_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD51FfIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD51FfIoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD51FPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD51FvIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD51FvIoEe6ulvgmIO8ncA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_kD51FfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD51F_IoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD51F_IoEe6ulvgmIO8ncA" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_kD51FvIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD51GPIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_kD51GPIoEe6ulvgmIO8ncA" entityName="deferredResult" predecessor_AbstractAction="_kD51F_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD51GfIoEe6ulvgmIO8ncA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD51GfIoEe6ulvgmIO8ncA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_kD51GPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD51GvIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD51GvIoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD51GfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD51G_IoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD51G_IoEe6ulvgmIO8ncA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_kD51GvIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD51HPIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD51HPIoEe6ulvgmIO8ncA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_kD51G_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD51HfIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_kD51HfIoEe6ulvgmIO8ncA" entityName="deferredResult" predecessor_AbstractAction="_kD51HPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD51HvIoEe6ulvgmIO8ncA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD51HvIoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD51HfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD6cIPIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_kD6cIPIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD51HvIoEe6ulvgmIO8ncA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD6cLPIoEe6ulvgmIO8ncA">
                <branchBehaviour_BranchTransition id="_kD6cLvIoEe6ulvgmIO8ncA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_kD6cJPIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD6cJfIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD6cJfIoEe6ulvgmIO8ncA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_kD6cJPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD6cJvIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD6cJvIoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD6cJfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD6cJ_IoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD6cJ_IoEe6ulvgmIO8ncA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_kD6cJvIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD6cKPIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD6cKPIoEe6ulvgmIO8ncA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_kD6cJ_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD6cKfIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_kD6cKfIoEe6ulvgmIO8ncA" entityName="deferredResult" predecessor_AbstractAction="_kD6cKPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD6cKvIoEe6ulvgmIO8ncA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD6cKvIoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD6cKfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD6cK_IoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_kD6cK_IoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD6cKvIoEe6ulvgmIO8ncA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD7DM_IoEe6ulvgmIO8ncA">
                <branchBehaviour_BranchTransition id="_kD7DNfIoEe6ulvgmIO8ncA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_kD7DMPIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD7DMfIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD7DMfIoEe6ulvgmIO8ncA" entityName="stopWatch.stop()" predecessor_AbstractAction="_kD7DMPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD7DMvIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_kD7DMvIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD7DMfIoEe6ulvgmIO8ncA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_kD7DN_IoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD7DNvIoEe6ulvgmIO8ncA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_kD7DPPIoEe6ulvgmIO8ncA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_kD7DO_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD7DPfIoEe6ulvgmIO8ncA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_kD7DPfIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD7DPPIoEe6ulvgmIO8ncA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_kEz0CPIoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_kEz0C_IoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_kEz0CfIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_kEpb8fIoEe6ulvgmIO8ncA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_kEz0CvIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_kEpb8vIoEe6ulvgmIO8ncA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_kD-GgvIoEe6ulvgmIO8ncA" describedService__SEFF="_j9C_IPIoEe6ulvgmIO8ncA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_kD9fefIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD-GgPIoEe6ulvgmIO8ncA"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_kD-GgPIoEe6ulvgmIO8ncA" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_kD9fefIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD-GgfIoEe6ulvgmIO8ncA">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_kD-GgfIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD-GgPIoEe6ulvgmIO8ncA"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_kD9fd_IoEe6ulvgmIO8ncA" describedService__SEFF="_j-AocvIoEe6ulvgmIO8ncA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_kD8RZPIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD84avIoEe6ulvgmIO8ncA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_kD84avIoEe6ulvgmIO8ncA" entityName="If Branch" predecessor_AbstractAction="_kD8RZPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD9fdfIoEe6ulvgmIO8ncA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD84YfIoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_kD84Y_IoEe6ulvgmIO8ncA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_kD8RZfIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD8RZvIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_kD8RZvIoEe6ulvgmIO8ncA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_kD8RZfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD84YPIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_kD84YPIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD8RZvIoEe6ulvgmIO8ncA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD84Z_IoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_kD84afIoEe6ulvgmIO8ncA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_kD84ZPIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD84ZfIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_kD84ZfIoEe6ulvgmIO8ncA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_kD84ZPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD84ZvIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_kD84ZvIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD84ZfIoEe6ulvgmIO8ncA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_kD9fdfIoEe6ulvgmIO8ncA" entityName="If Branch" predecessor_AbstractAction="_kD84avIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD9fdvIoEe6ulvgmIO8ncA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD9fcvIoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_kD9fdPIoEe6ulvgmIO8ncA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_kD84a_IoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD9fcPIoEe6ulvgmIO8ncA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_kD9fcPIoEe6ulvgmIO8ncA" entityName="If Branch" predecessor_AbstractAction="_kD84a_IoEe6ulvgmIO8ncA" successor_AbstractAction="_kD9fcfIoEe6ulvgmIO8ncA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD84cPIoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_kD84cvIoEe6ulvgmIO8ncA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_kD84bPIoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD84bfIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_kD84bfIoEe6ulvgmIO8ncA" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_kD84bPIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD84bvIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_kD84bvIoEe6ulvgmIO8ncA" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_kD84bfIoEe6ulvgmIO8ncA" successor_AbstractAction="_kD84b_IoEe6ulvgmIO8ncA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_kD84b_IoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD84bvIoEe6ulvgmIO8ncA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_kD84dfIoEe6ulvgmIO8ncA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_kD84d_IoEe6ulvgmIO8ncA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_kD84c_IoEe6ulvgmIO8ncA" entityName="Start Action" successor_AbstractAction="_kD84dPIoEe6ulvgmIO8ncA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_kD84dPIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD84c_IoEe6ulvgmIO8ncA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_kD9fcfIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD9fcPIoEe6ulvgmIO8ncA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_kD9fdvIoEe6ulvgmIO8ncA" entityName="Stop Action" predecessor_AbstractAction="_kD9fdfIoEe6ulvgmIO8ncA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_kE6hsfIoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_kE7IyPIoEe6ulvgmIO8ncA" encapsulatedComponent__AssemblyContext="_kEvikPIoEe6ulvgmIO8ncA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_kE8W4fIoEe6ulvgmIO8ncA" innerProvidedRole_ProvidedDelegationConnector="_kEu7jfIoEe6ulvgmIO8ncA" outerProvidedRole_ProvidedDelegationConnector="_kE6hsPIoEe6ulvgmIO8ncA" assemblyContext_ProvidedDelegationConnector="_kE7IyPIoEe6ulvgmIO8ncA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_kE6hsPIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_kEpb9PIoEe6ulvgmIO8ncA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_kE6hs_IoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_kE7IxPIoEe6ulvgmIO8ncA" encapsulatedComponent__AssemblyContext="_kEtGUfIoEe6ulvgmIO8ncA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_kE8W5fIoEe6ulvgmIO8ncA" innerProvidedRole_ProvidedDelegationConnector="_kEtGUPIoEe6ulvgmIO8ncA" outerProvidedRole_ProvidedDelegationConnector="_kE6hsvIoEe6ulvgmIO8ncA" assemblyContext_ProvidedDelegationConnector="_kE7IxPIoEe6ulvgmIO8ncA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_kE6hsvIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_kEpb9fIoEe6ulvgmIO8ncA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_kE6htfIoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_kE7IwvIoEe6ulvgmIO8ncA" encapsulatedComponent__AssemblyContext="_kExXy_IoEe6ulvgmIO8ncA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_kE8W4_IoEe6ulvgmIO8ncA" innerProvidedRole_ProvidedDelegationConnector="_kExXyvIoEe6ulvgmIO8ncA" outerProvidedRole_ProvidedDelegationConnector="_kE6htPIoEe6ulvgmIO8ncA" assemblyContext_ProvidedDelegationConnector="_kE7IwvIoEe6ulvgmIO8ncA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_kE6htPIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_kEpb8_IoEe6ulvgmIO8ncA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_kE6huPIoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_kE7IwPIoEe6ulvgmIO8ncA" encapsulatedComponent__AssemblyContext="_kEz0C_IoEe6ulvgmIO8ncA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_kE8W4PIoEe6ulvgmIO8ncA" innerProvidedRole_ProvidedDelegationConnector="_kEz0CvIoEe6ulvgmIO8ncA" outerProvidedRole_ProvidedDelegationConnector="_kE6htvIoEe6ulvgmIO8ncA" assemblyContext_ProvidedDelegationConnector="_kE7IwPIoEe6ulvgmIO8ncA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_kE8W4vIoEe6ulvgmIO8ncA" innerProvidedRole_ProvidedDelegationConnector="_kEz0CfIoEe6ulvgmIO8ncA" outerProvidedRole_ProvidedDelegationConnector="_kE6ht_IoEe6ulvgmIO8ncA" assemblyContext_ProvidedDelegationConnector="_kE7IwPIoEe6ulvgmIO8ncA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_kE6htvIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_kEpb8vIoEe6ulvgmIO8ncA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_kE6ht_IoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_kEpb8fIoEe6ulvgmIO8ncA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_kE6hufIoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_kE7IxvIoEe6ulvgmIO8ncA" encapsulatedComponent__AssemblyContext="_kEz0CPIoEe6ulvgmIO8ncA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_kE6hu_IoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_kE7IyvIoEe6ulvgmIO8ncA" encapsulatedComponent__AssemblyContext="_kEpb9_IoEe6ulvgmIO8ncA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_kE8W5PIoEe6ulvgmIO8ncA" innerProvidedRole_ProvidedDelegationConnector="_kEpb9vIoEe6ulvgmIO8ncA" outerProvidedRole_ProvidedDelegationConnector="_kE6huvIoEe6ulvgmIO8ncA" assemblyContext_ProvidedDelegationConnector="_kE7IyvIoEe6ulvgmIO8ncA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_kE6huvIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_kEpb8PIoEe6ulvgmIO8ncA"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_kEpb8PIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_j-CdoPIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_j-B2kPIoEe6ulvgmIO8ncA">
      <parameters__OperationSignature dataType__Parameter="_j-B2lPIoEe6ulvgmIO8ncA" parameterName="RegistrationTokenRequest" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_kEpb8fIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_j9C_IPIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_j9CYEPIoEe6ulvgmIO8ncA">
      <parameters__OperationSignature dataType__Parameter="_j9BJ8PIoEe6ulvgmIO8ncA" parameterName="Tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_kEpb8vIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_j-AocvIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_j9CYEPIoEe6ulvgmIO8ncA">
      <parameters__OperationSignature dataType__Parameter="_j-AocPIoEe6ulvgmIO8ncA" parameterName="AuthorizationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_j-AocfIoEe6ulvgmIO8ncA" parameterName="TeleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_kEpb8_IoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_j-Cdo_IoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_j-B2kPIoEe6ulvgmIO8ncA">
      <parameters__OperationSignature dataType__Parameter="_j-BPgvIoEe6ulvgmIO8ncA" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_kEpb9PIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_j-BPg_IoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_j9CYEPIoEe6ulvgmIO8ncA">
      <parameters__OperationSignature dataType__Parameter="_j-BPgvIoEe6ulvgmIO8ncA" parameterName="RegistrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_kEpb9fIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_j-B2kfIoEe6ulvgmIO8ncA" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_j-B2kPIoEe6ulvgmIO8ncA">
      <parameters__OperationSignature dataType__Parameter="_j-BPgvIoEe6ulvgmIO8ncA" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_j9BJ8PIoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_j9CYEPIoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_j-AocPIoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_j-AocfIoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_j-BPgvIoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_j-B2kPIoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_j-B2lPIoEe6ulvgmIO8ncA" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
</repository:Repository>
