<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_a1QcdWjSEe-JZ-FtoWkVMA">
  <components__Repository xsi:type="repository:BasicComponent" id="_a1Ak3WjSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_a1BL4mjSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_a1BL4GjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_a1Ak3GjSEe-JZ-FtoWkVMA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_a1BL4WjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_a1Ak22jSEe-JZ-FtoWkVMA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_a0UoUmjSEe-JZ-FtoWkVMA" describedService__SEFF="_auNZQWjSEe-JZ-FtoWkVMA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_a0UBTWjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0UoUGjSEe-JZ-FtoWkVMA"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_a0UoUGjSEe-JZ-FtoWkVMA" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_a0UBTWjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0UoUWjSEe-JZ-FtoWkVMA">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_a0UoUWjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0UoUGjSEe-JZ-FtoWkVMA"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_a0UBS2jSEe-JZ-FtoWkVMA" describedService__SEFF="_auMLImjSEe-JZ-FtoWkVMA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_auno8WjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0QW4GjSEe-JZ-FtoWkVMA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_a0QW4GjSEe-JZ-FtoWkVMA" entityName="If Branch" predecessor_AbstractAction="_auno8WjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0UBSWjSEe-JZ-FtoWkVMA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_auqsQGjSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_aurTUGjSEe-JZ-FtoWkVMA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_aupeIGjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_auqFMGjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_auqFMGjSEe-JZ-FtoWkVMA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_aupeIGjSEe-JZ-FtoWkVMA" successor_AbstractAction="_auqFMWjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_auqFMWjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_auqFMGjSEe-JZ-FtoWkVMA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0Pv02jSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_a0Pv1WjSEe-JZ-FtoWkVMA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_a0Pv0GjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0Pv0WjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Pv0WjSEe-JZ-FtoWkVMA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_a0Pv0GjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Pv0mjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_a0Pv0mjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0Pv0WjSEe-JZ-FtoWkVMA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_a0UBSWjSEe-JZ-FtoWkVMA" entityName="If Branch" predecessor_AbstractAction="_a0QW4GjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0UBSmjSEe-JZ-FtoWkVMA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0UBRmjSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_a0UBSGjSEe-JZ-FtoWkVMA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_a0QW4WjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0UBRGjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_a0UBRGjSEe-JZ-FtoWkVMA" entityName="If Branch" predecessor_AbstractAction="_a0QW4WjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0UBRWjSEe-JZ-FtoWkVMA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0TaMmjSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_a0TaNGjSEe-JZ-FtoWkVMA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_a0QW4mjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0QW42jSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0QW42jSEe-JZ-FtoWkVMA" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_a0QW4mjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0TaMGjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_a0TaMGjSEe-JZ-FtoWkVMA" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_a0QW42jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0TaMWjSEe-JZ-FtoWkVMA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_a0TaMWjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0TaMGjSEe-JZ-FtoWkVMA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0UBQWjSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_a0UBQ2jSEe-JZ-FtoWkVMA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_a0TaNWjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0UBQGjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_a0UBQGjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0TaNWjSEe-JZ-FtoWkVMA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_a0UBRWjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0UBRGjSEe-JZ-FtoWkVMA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_a0UBSmjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0UBSWjSEe-JZ-FtoWkVMA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_a1GEY2jSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_a1GEYmjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_a1Ak2GjSEe-JZ-FtoWkVMA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_a0b9HGjSEe-JZ-FtoWkVMA" describedService__SEFF="_auOAUGjSEe-JZ-FtoWkVMA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_a0aH8GjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0au9GjSEe-JZ-FtoWkVMA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_a0au9GjSEe-JZ-FtoWkVMA" entityName="If Branch" predecessor_AbstractAction="_a0aH8GjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0au9WjSEe-JZ-FtoWkVMA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0au8WjSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_a0au82jSEe-JZ-FtoWkVMA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_a0aH8WjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0aH8mjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_a0aH8mjSEe-JZ-FtoWkVMA" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_a0aH8WjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0au8GjSEe-JZ-FtoWkVMA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_a0au8GjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0aH8mjSEe-JZ-FtoWkVMA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_a0au9WjSEe-JZ-FtoWkVMA" entityName="stopWatch.start()" predecessor_AbstractAction="_a0au9GjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0b9GmjSEe-JZ-FtoWkVMA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_a0b9GmjSEe-JZ-FtoWkVMA" entityName="If Branch" predecessor_AbstractAction="_a0au9WjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0b9G2jSEe-JZ-FtoWkVMA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0b9F2jSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_a0b9GWjSEe-JZ-FtoWkVMA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_a0au9mjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0b9FWjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_a0b9FWjSEe-JZ-FtoWkVMA" entityName="If Branch" predecessor_AbstractAction="_a0au9mjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0b9FmjSEe-JZ-FtoWkVMA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0b9EmjSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_a0b9FGjSEe-JZ-FtoWkVMA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_a0au92jSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0bWC2jSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_a0bWC2jSEe-JZ-FtoWkVMA" entityName="Switch Branch" predecessor_AbstractAction="_a0au92jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0bWDGjSEe-JZ-FtoWkVMA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0avAmjSEe-JZ-FtoWkVMA">
                      <branchBehaviour_BranchTransition id="_a0avBGjSEe-JZ-FtoWkVMA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_a0au-GjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0au_2jSEe-JZ-FtoWkVMA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_a0au_2jSEe-JZ-FtoWkVMA" entityName="If Branch" predecessor_AbstractAction="_a0au-GjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0avAGjSEe-JZ-FtoWkVMA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0au_GjSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_a0au_mjSEe-JZ-FtoWkVMA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_a0au-WjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0au-mjSEe-JZ-FtoWkVMA"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_a0au-mjSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0au-WjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0au-2jSEe-JZ-FtoWkVMA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_a0au-2jSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0au-mjSEe-JZ-FtoWkVMA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_a0avAGjSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0au_2jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0avAWjSEe-JZ-FtoWkVMA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_a0avAWjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0avAGjSEe-JZ-FtoWkVMA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0bWAmjSEe-JZ-FtoWkVMA">
                      <branchBehaviour_BranchTransition id="_a0bWBGjSEe-JZ-FtoWkVMA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_a0avBWjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0bWAGjSEe-JZ-FtoWkVMA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_a0bWAGjSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0avBWjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0bWAWjSEe-JZ-FtoWkVMA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_a0bWAWjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0bWAGjSEe-JZ-FtoWkVMA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0bWCGjSEe-JZ-FtoWkVMA">
                      <branchBehaviour_BranchTransition id="_a0bWCmjSEe-JZ-FtoWkVMA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_a0bWBWjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0bWBmjSEe-JZ-FtoWkVMA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_a0bWBmjSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0bWBWjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0bWB2jSEe-JZ-FtoWkVMA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_a0bWB2jSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0bWBmjSEe-JZ-FtoWkVMA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0bWDGjSEe-JZ-FtoWkVMA" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_a0bWC2jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0bWDWjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0bWDWjSEe-JZ-FtoWkVMA" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_a0bWDGjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0bWDmjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0bWDmjSEe-JZ-FtoWkVMA" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_a0bWDWjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0bWD2jSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0bWD2jSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0bWDmjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0bWEGjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0bWEGjSEe-JZ-FtoWkVMA" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_a0bWD2jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0bWEWjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0bWEWjSEe-JZ-FtoWkVMA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_a0bWEGjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0bWEmjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0bWEmjSEe-JZ-FtoWkVMA" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_a0bWEWjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0b9EGjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_a0b9EGjSEe-JZ-FtoWkVMA" entityName="deferredResult" predecessor_AbstractAction="_a0bWEmjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0b9EWjSEe-JZ-FtoWkVMA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_a0b9EWjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0b9EGjSEe-JZ-FtoWkVMA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_a0b9FmjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0b9FWjSEe-JZ-FtoWkVMA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_a0b9G2jSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0b9GmjSEe-JZ-FtoWkVMA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_a1H5nWjSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_a1H5nGjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_a1Ak2mjSEe-JZ-FtoWkVMA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_a0aH7mjSEe-JZ-FtoWkVMA" describedService__SEFF="_auMyM2jSEe-JZ-FtoWkVMA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_a0YSumjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0YSwWjSEe-JZ-FtoWkVMA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_a0YSwWjSEe-JZ-FtoWkVMA" entityName="If Branch" predecessor_AbstractAction="_a0YSumjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0YSwmjSEe-JZ-FtoWkVMA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0YSvmjSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_a0YSwGjSEe-JZ-FtoWkVMA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_a0YSu2jSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0YSvGjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_a0YSvGjSEe-JZ-FtoWkVMA" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_a0YSu2jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0YSvWjSEe-JZ-FtoWkVMA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_a0YSvWjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0YSvGjSEe-JZ-FtoWkVMA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_a0YSwmjSEe-JZ-FtoWkVMA" entityName="stopWatch.start()" predecessor_AbstractAction="_a0YSwWjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0aH62jSEe-JZ-FtoWkVMA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_a0aH62jSEe-JZ-FtoWkVMA" entityName="If Branch" predecessor_AbstractAction="_a0YSwmjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0aH7GjSEe-JZ-FtoWkVMA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0aH6GjSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_a0aH6mjSEe-JZ-FtoWkVMA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_a0YSw2jSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0aH5mjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_a0aH5mjSEe-JZ-FtoWkVMA" entityName="Switch Branch" predecessor_AbstractAction="_a0YSw2jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0aH52jSEe-JZ-FtoWkVMA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0Zg0mjSEe-JZ-FtoWkVMA">
                <branchBehaviour_BranchTransition id="_a0Zg1GjSEe-JZ-FtoWkVMA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_a0YSxGjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0YSxWjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0YSxWjSEe-JZ-FtoWkVMA" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_a0YSxGjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Y5ymjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_a0Y5ymjSEe-JZ-FtoWkVMA" entityName="If Branch" predecessor_AbstractAction="_a0YSxWjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Y5y2jSEe-JZ-FtoWkVMA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0Y5x2jSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_a0Y5yWjSEe-JZ-FtoWkVMA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_a0YSxmjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0Y5xWjSEe-JZ-FtoWkVMA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_a0Y5xWjSEe-JZ-FtoWkVMA" entityName="If Branch" predecessor_AbstractAction="_a0YSxmjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Y5xmjSEe-JZ-FtoWkVMA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0Y5wmjSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_a0Y5xGjSEe-JZ-FtoWkVMA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_a0Y5wGjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0Y5wWjSEe-JZ-FtoWkVMA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_a0Y5wWjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0Y5wGjSEe-JZ-FtoWkVMA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_a0Y5xmjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0Y5xWjSEe-JZ-FtoWkVMA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Y5y2jSEe-JZ-FtoWkVMA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_a0Y5ymjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Y5zGjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Y5zGjSEe-JZ-FtoWkVMA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_a0Y5y2jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Y5zWjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Y5zWjSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0Y5zGjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Y5zmjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Y5zmjSEe-JZ-FtoWkVMA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_a0Y5zWjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Y5z2jSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Y5z2jSEe-JZ-FtoWkVMA" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_a0Y5zmjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Y50GjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_a0Y50GjSEe-JZ-FtoWkVMA" entityName="deferredResult" predecessor_AbstractAction="_a0Y5z2jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Y50WjSEe-JZ-FtoWkVMA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Y50WjSEe-JZ-FtoWkVMA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_a0Y50GjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Y50mjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Y50mjSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0Y50WjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Y502jSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Y502jSEe-JZ-FtoWkVMA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_a0Y50mjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Y51GjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Y51GjSEe-JZ-FtoWkVMA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_a0Y502jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Y51WjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_a0Y51WjSEe-JZ-FtoWkVMA" entityName="deferredResult" predecessor_AbstractAction="_a0Y51GjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Zg0GjSEe-JZ-FtoWkVMA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Zg0GjSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0Y51WjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Zg0WjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_a0Zg0WjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0Zg0GjSEe-JZ-FtoWkVMA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0Zg3WjSEe-JZ-FtoWkVMA">
                <branchBehaviour_BranchTransition id="_a0Zg32jSEe-JZ-FtoWkVMA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_a0Zg1WjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0Zg1mjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Zg1mjSEe-JZ-FtoWkVMA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_a0Zg1WjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Zg12jSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Zg12jSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0Zg1mjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Zg2GjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Zg2GjSEe-JZ-FtoWkVMA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_a0Zg12jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Zg2WjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Zg2WjSEe-JZ-FtoWkVMA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_a0Zg2GjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Zg2mjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_a0Zg2mjSEe-JZ-FtoWkVMA" entityName="deferredResult" predecessor_AbstractAction="_a0Zg2WjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Zg22jSEe-JZ-FtoWkVMA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Zg22jSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0Zg2mjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Zg3GjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_a0Zg3GjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0Zg22jSEe-JZ-FtoWkVMA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0aH42jSEe-JZ-FtoWkVMA">
                <branchBehaviour_BranchTransition id="_a0aH5WjSEe-JZ-FtoWkVMA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_a0aH4GjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0aH4WjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0aH4WjSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0aH4GjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0aH4mjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_a0aH4mjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0aH4WjSEe-JZ-FtoWkVMA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_a0aH52jSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0aH5mjSEe-JZ-FtoWkVMA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_a0aH7GjSEe-JZ-FtoWkVMA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_a0aH62jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0aH7WjSEe-JZ-FtoWkVMA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_a0aH7WjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0aH7GjSEe-JZ-FtoWkVMA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_a1JuzmjSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_a1JuzWjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_a1Ak12jSEe-JZ-FtoWkVMA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_a0XEm2jSEe-JZ-FtoWkVMA" describedService__SEFF="_auOAVGjSEe-JZ-FtoWkVMA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_a0UoVGjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0UoW2jSEe-JZ-FtoWkVMA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_a0UoW2jSEe-JZ-FtoWkVMA" entityName="If Branch" predecessor_AbstractAction="_a0UoVGjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0UoXGjSEe-JZ-FtoWkVMA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0UoWGjSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_a0UoWmjSEe-JZ-FtoWkVMA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_a0UoVWjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0UoVmjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_a0UoVmjSEe-JZ-FtoWkVMA" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_a0UoVWjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0UoV2jSEe-JZ-FtoWkVMA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController_generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController_generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_a0UoV2jSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0UoVmjSEe-JZ-FtoWkVMA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_a0UoXGjSEe-JZ-FtoWkVMA" entityName="stopWatch.start()" predecessor_AbstractAction="_a0UoW2jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0XEmWjSEe-JZ-FtoWkVMA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_a0XEmWjSEe-JZ-FtoWkVMA" entityName="Switch Branch" predecessor_AbstractAction="_a0UoXGjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0XEmmjSEe-JZ-FtoWkVMA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0V2f2jSEe-JZ-FtoWkVMA">
          <branchBehaviour_BranchTransition id="_a0WdgGjSEe-JZ-FtoWkVMA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_a0VPYGjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0VPYWjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_a0VPYWjSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0VPYGjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0VPYmjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_a0VPYmjSEe-JZ-FtoWkVMA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_a0VPYWjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0VPY2jSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_a0VPY2jSEe-JZ-FtoWkVMA" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_a0VPYmjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0VPZGjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_a0VPZGjSEe-JZ-FtoWkVMA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_a0VPY2jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0VPZWjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_a0VPZWjSEe-JZ-FtoWkVMA" entityName="deferredResult" predecessor_AbstractAction="_a0VPZGjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0V2e2jSEe-JZ-FtoWkVMA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_a0V2e2jSEe-JZ-FtoWkVMA" entityName="If Branch" predecessor_AbstractAction="_a0VPZWjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0V2fGjSEe-JZ-FtoWkVMA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0V2eGjSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_a0V2emjSEe-JZ-FtoWkVMA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_a0VPZmjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0V2cGjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0V2cGjSEe-JZ-FtoWkVMA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_a0VPZmjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0V2cWjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0V2cWjSEe-JZ-FtoWkVMA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_a0V2cGjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0V2cmjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0V2cmjSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0V2cWjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0V2c2jSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0V2c2jSEe-JZ-FtoWkVMA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_a0V2cmjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0V2dGjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0V2dGjSEe-JZ-FtoWkVMA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_a0V2c2jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0V2dWjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0V2dWjSEe-JZ-FtoWkVMA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_a0V2dGjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0V2dmjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_a0V2dmjSEe-JZ-FtoWkVMA" entityName="deferredResult" predecessor_AbstractAction="_a0V2dWjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0V2d2jSEe-JZ-FtoWkVMA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_a0V2d2jSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0V2dmjSEe-JZ-FtoWkVMA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_a0V2fGjSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0V2e2jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0V2fWjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_a0V2fWjSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0V2fGjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0V2fmjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_a0V2fmjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0V2fWjSEe-JZ-FtoWkVMA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0XEkGjSEe-JZ-FtoWkVMA">
          <branchBehaviour_BranchTransition id="_a0XEkmjSEe-JZ-FtoWkVMA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_a0WdgWjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0WdjmjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_a0WdjmjSEe-JZ-FtoWkVMA" entityName="If Branch" predecessor_AbstractAction="_a0WdgWjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Wdj2jSEe-JZ-FtoWkVMA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0Wdi2jSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_a0WdjWjSEe-JZ-FtoWkVMA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_a0WdgmjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0Wdg2jSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Wdg2jSEe-JZ-FtoWkVMA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_a0WdgmjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0WdhGjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0WdhGjSEe-JZ-FtoWkVMA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_a0Wdg2jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0WdhWjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0WdhWjSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0WdhGjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0WdhmjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0WdhmjSEe-JZ-FtoWkVMA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_a0WdhWjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Wdh2jSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Wdh2jSEe-JZ-FtoWkVMA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_a0WdhmjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0WdiGjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0WdiGjSEe-JZ-FtoWkVMA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_a0Wdh2jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0WdiWjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_a0WdiWjSEe-JZ-FtoWkVMA" entityName="deferredResult" predecessor_AbstractAction="_a0WdiGjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0WdimjSEe-JZ-FtoWkVMA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_a0WdimjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0WdiWjSEe-JZ-FtoWkVMA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Wdj2jSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0WdjmjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0WdkGjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_a0WdkGjSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0Wdj2jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0WdkWjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_a0WdkWjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0WdkGjSEe-JZ-FtoWkVMA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0XElmjSEe-JZ-FtoWkVMA">
          <branchBehaviour_BranchTransition id="_a0XEmGjSEe-JZ-FtoWkVMA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_a0XEk2jSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0XElGjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_a0XElGjSEe-JZ-FtoWkVMA" entityName="stopWatch.stop()" predecessor_AbstractAction="_a0XEk2jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0XElWjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_a0XElWjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0XElGjSEe-JZ-FtoWkVMA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_a0XEmmjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0XEmWjSEe-JZ-FtoWkVMA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_a1MLAWjSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_a1MLAGjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_a1Ak2WjSEe-JZ-FtoWkVMA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_a0YSuGjSEe-JZ-FtoWkVMA" describedService__SEFF="_atdLUGjSEe-JZ-FtoWkVMA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_a0XEnWjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0YStWjSEe-JZ-FtoWkVMA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_a0YStWjSEe-JZ-FtoWkVMA" entityName="If Branch" predecessor_AbstractAction="_a0XEnWjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0YStmjSEe-JZ-FtoWkVMA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0YSsmjSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_a0YStGjSEe-JZ-FtoWkVMA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_a0XEnmjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0YSsGjSEe-JZ-FtoWkVMA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_a0YSsGjSEe-JZ-FtoWkVMA" entityName="Switch Branch" predecessor_AbstractAction="_a0XEnmjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0YSsWjSEe-JZ-FtoWkVMA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0Xrp2jSEe-JZ-FtoWkVMA">
                <branchBehaviour_BranchTransition id="_a0XrqWjSEe-JZ-FtoWkVMA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_a0XEn2jSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0XroWjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_a0XroWjSEe-JZ-FtoWkVMA" entityName="If Branch" predecessor_AbstractAction="_a0XEn2jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0XromjSEe-JZ-FtoWkVMA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0XEqGjSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_a0XroGjSEe-JZ-FtoWkVMA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_a0XEoGjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0XEpmjSEe-JZ-FtoWkVMA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_a0XEpmjSEe-JZ-FtoWkVMA" entityName="If Branch" predecessor_AbstractAction="_a0XEoGjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0XEp2jSEe-JZ-FtoWkVMA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0XEo2jSEe-JZ-FtoWkVMA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_a0XEpWjSEe-JZ-FtoWkVMA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_a0XEoWjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0XEomjSEe-JZ-FtoWkVMA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_a0XEomjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0XEoWjSEe-JZ-FtoWkVMA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_a0XEp2jSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0XEpmjSEe-JZ-FtoWkVMA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0XromjSEe-JZ-FtoWkVMA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_a0XroWjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0Xro2jSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Xro2jSEe-JZ-FtoWkVMA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_a0XromjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0XrpGjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_a0XrpGjSEe-JZ-FtoWkVMA" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_a0Xro2jSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0XrpWjSEe-JZ-FtoWkVMA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0XrpWjSEe-JZ-FtoWkVMA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_a0XrpGjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0XrpmjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_a0XrpmjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0XrpWjSEe-JZ-FtoWkVMA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0XrrWjSEe-JZ-FtoWkVMA">
                <branchBehaviour_BranchTransition id="_a0Xrr2jSEe-JZ-FtoWkVMA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_a0XrqmjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0Xrq2jSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_a0Xrq2jSEe-JZ-FtoWkVMA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_a0XrqmjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0XrrGjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_a0XrrGjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0Xrq2jSEe-JZ-FtoWkVMA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_a0XrsmjSEe-JZ-FtoWkVMA">
                <branchBehaviour_BranchTransition id="_a0XrtGjSEe-JZ-FtoWkVMA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_a0XrsGjSEe-JZ-FtoWkVMA" entityName="Start Action" successor_AbstractAction="_a0XrsWjSEe-JZ-FtoWkVMA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_a0XrsWjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0XrsGjSEe-JZ-FtoWkVMA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_a0YSsWjSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0YSsGjSEe-JZ-FtoWkVMA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_a0YStmjSEe-JZ-FtoWkVMA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_a0YStWjSEe-JZ-FtoWkVMA" successor_AbstractAction="_a0YSt2jSEe-JZ-FtoWkVMA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_a0YSt2jSEe-JZ-FtoWkVMA" entityName="Stop Action" predecessor_AbstractAction="_a0YStmjSEe-JZ-FtoWkVMA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_a1POUWjSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_a1QccWjSEe-JZ-FtoWkVMA" encapsulatedComponent__AssemblyContext="_a1MLAWjSEe-JZ-FtoWkVMA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_a1RDgGjSEe-JZ-FtoWkVMA" innerProvidedRole_ProvidedDelegationConnector="_a1MLAGjSEe-JZ-FtoWkVMA" outerProvidedRole_ProvidedDelegationConnector="_a1POUGjSEe-JZ-FtoWkVMA" assemblyContext_ProvidedDelegationConnector="_a1QccWjSEe-JZ-FtoWkVMA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_a1POUGjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_a1Ak2WjSEe-JZ-FtoWkVMA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_a1POU2jSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_a1Qcc2jSEe-JZ-FtoWkVMA" encapsulatedComponent__AssemblyContext="_a1GEY2jSEe-JZ-FtoWkVMA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_a1RDg2jSEe-JZ-FtoWkVMA" innerProvidedRole_ProvidedDelegationConnector="_a1GEYmjSEe-JZ-FtoWkVMA" outerProvidedRole_ProvidedDelegationConnector="_a1POUmjSEe-JZ-FtoWkVMA" assemblyContext_ProvidedDelegationConnector="_a1Qcc2jSEe-JZ-FtoWkVMA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_a1POUmjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_a1Ak2GjSEe-JZ-FtoWkVMA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_a1POVmjSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_a1P1ZmjSEe-JZ-FtoWkVMA" encapsulatedComponent__AssemblyContext="_a1BL4mjSEe-JZ-FtoWkVMA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_a1RDhGjSEe-JZ-FtoWkVMA" innerProvidedRole_ProvidedDelegationConnector="_a1BL4GjSEe-JZ-FtoWkVMA" outerProvidedRole_ProvidedDelegationConnector="_a1POVGjSEe-JZ-FtoWkVMA" assemblyContext_ProvidedDelegationConnector="_a1P1ZmjSEe-JZ-FtoWkVMA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_a1RDhWjSEe-JZ-FtoWkVMA" innerProvidedRole_ProvidedDelegationConnector="_a1BL4WjSEe-JZ-FtoWkVMA" outerProvidedRole_ProvidedDelegationConnector="_a1POVWjSEe-JZ-FtoWkVMA" assemblyContext_ProvidedDelegationConnector="_a1P1ZmjSEe-JZ-FtoWkVMA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_a1POVGjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_a1Ak3GjSEe-JZ-FtoWkVMA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_a1POVWjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_a1Ak22jSEe-JZ-FtoWkVMA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_a1POWGjSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_a1P1YGjSEe-JZ-FtoWkVMA" encapsulatedComponent__AssemblyContext="_a1H5nWjSEe-JZ-FtoWkVMA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_a1RDgmjSEe-JZ-FtoWkVMA" innerProvidedRole_ProvidedDelegationConnector="_a1H5nGjSEe-JZ-FtoWkVMA" outerProvidedRole_ProvidedDelegationConnector="_a1POV2jSEe-JZ-FtoWkVMA" assemblyContext_ProvidedDelegationConnector="_a1P1YGjSEe-JZ-FtoWkVMA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_a1POV2jSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_a1Ak2mjSEe-JZ-FtoWkVMA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_a1POWmjSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_a1P1ZGjSEe-JZ-FtoWkVMA" encapsulatedComponent__AssemblyContext="_a1JuzmjSEe-JZ-FtoWkVMA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_a1RDgWjSEe-JZ-FtoWkVMA" innerProvidedRole_ProvidedDelegationConnector="_a1JuzWjSEe-JZ-FtoWkVMA" outerProvidedRole_ProvidedDelegationConnector="_a1POWWjSEe-JZ-FtoWkVMA" assemblyContext_ProvidedDelegationConnector="_a1P1ZGjSEe-JZ-FtoWkVMA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_a1POWWjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_a1Ak12jSEe-JZ-FtoWkVMA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_a1POW2jSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_a1P1YmjSEe-JZ-FtoWkVMA" encapsulatedComponent__AssemblyContext="_a1Ak3WjSEe-JZ-FtoWkVMA"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_a1Ak12jSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_auOAVGjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_auMyMmjSEe-JZ-FtoWkVMA">
      <parameters__OperationSignature dataType__Parameter="_auOAU2jSEe-JZ-FtoWkVMA" parameterName="request" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_a1Ak2GjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_auOAUGjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_auMyMmjSEe-JZ-FtoWkVMA">
      <parameters__OperationSignature dataType__Parameter="_atb9MGjSEe-JZ-FtoWkVMA" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_a1Ak2WjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_atdLUGjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_atckQGjSEe-JZ-FtoWkVMA">
      <parameters__OperationSignature dataType__Parameter="_atb9MGjSEe-JZ-FtoWkVMA" parameterName="registrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_a1Ak2mjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_auMyM2jSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_auMyMmjSEe-JZ-FtoWkVMA">
      <parameters__OperationSignature dataType__Parameter="_atb9MGjSEe-JZ-FtoWkVMA" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_a1Ak22jSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_auMLImjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_atckQGjSEe-JZ-FtoWkVMA">
      <parameters__OperationSignature dataType__Parameter="_auMLIGjSEe-JZ-FtoWkVMA" parameterName="authorization" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_auMLIWjSEe-JZ-FtoWkVMA" parameterName="teleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_a1Ak3GjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_auNZQWjSEe-JZ-FtoWkVMA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_atckQGjSEe-JZ-FtoWkVMA">
      <parameters__OperationSignature dataType__Parameter="_auNZQGjSEe-JZ-FtoWkVMA" parameterName="tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_atb9MGjSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_atckQGjSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_auMLIGjSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_auMLIWjSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_auMyMmjSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_auNZQGjSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_auOAU2jSEe-JZ-FtoWkVMA" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
</repository:Repository>
