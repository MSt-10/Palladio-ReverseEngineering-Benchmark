<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_ZV-gbCIYEe-X5tvSWFit2w">
  <components__Repository xsi:type="repository:BasicComponent" id="_ZVtapyIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZVtapiIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_ZVtaoSIYEe-X5tvSWFit2w"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_ZVDTWCIYEe-X5tvSWFit2w" describedService__SEFF="_ZPKtwCIYEe-X5tvSWFit2w">
      <steps_Behaviour xsi:type="seff:StartAction" id="_ZVA3GSIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVBeICIYEe-X5tvSWFit2w"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_ZVBeICIYEe-X5tvSWFit2w" entityName="If Branch" predecessor_AbstractAction="_ZVA3GSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVBeISIYEe-X5tvSWFit2w">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVA3HSIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_ZVA3HyIYEe-X5tvSWFit2w">
            <steps_Behaviour xsi:type="seff:StartAction" id="_ZVA3GiIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVA3GyIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZVA3GyIYEe-X5tvSWFit2w" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_ZVA3GiIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVA3HCIYEe-X5tvSWFit2w">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_ZVA3HCIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVA3GyIYEe-X5tvSWFit2w"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVBeISIYEe-X5tvSWFit2w" entityName="stopWatch.start()" predecessor_AbstractAction="_ZVBeICIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVDTVSIYEe-X5tvSWFit2w"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_ZVDTVSIYEe-X5tvSWFit2w" entityName="If Branch" predecessor_AbstractAction="_ZVBeISIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVDTViIYEe-X5tvSWFit2w">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVDTUiIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_ZVDTVCIYEe-X5tvSWFit2w">
            <steps_Behaviour xsi:type="seff:StartAction" id="_ZVBeIiIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVDTUCIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_ZVDTUCIYEe-X5tvSWFit2w" entityName="Switch Branch" predecessor_AbstractAction="_ZVBeIiIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVDTUSIYEe-X5tvSWFit2w">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVCFOCIYEe-X5tvSWFit2w">
                <branchBehaviour_BranchTransition id="_ZVCFOiIYEe-X5tvSWFit2w">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_ZVBeIyIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVBeJCIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVBeJCIYEe-X5tvSWFit2w" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_ZVBeIyIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVBeMCIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_ZVBeMCIYEe-X5tvSWFit2w" entityName="If Branch" predecessor_AbstractAction="_ZVBeJCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVBeMSIYEe-X5tvSWFit2w">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVBeLSIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_ZVBeLyIYEe-X5tvSWFit2w">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_ZVBeJSIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVBeKyIYEe-X5tvSWFit2w"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_ZVBeKyIYEe-X5tvSWFit2w" entityName="If Branch" predecessor_AbstractAction="_ZVBeJSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVBeLCIYEe-X5tvSWFit2w">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVBeKCIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_ZVBeKiIYEe-X5tvSWFit2w">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_ZVBeJiIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVBeJyIYEe-X5tvSWFit2w"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_ZVBeJyIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVBeJiIYEe-X5tvSWFit2w"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_ZVBeLCIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVBeKyIYEe-X5tvSWFit2w"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVBeMSIYEe-X5tvSWFit2w" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_ZVBeMCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVBeMiIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVBeMiIYEe-X5tvSWFit2w" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_ZVBeMSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVBeMyIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVBeMyIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZVBeMiIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVBeNCIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVBeNCIYEe-X5tvSWFit2w" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_ZVBeMyIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVBeNSIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVBeNSIYEe-X5tvSWFit2w" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_ZVBeNCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVCFMCIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZVCFMCIYEe-X5tvSWFit2w" entityName="deferredResult" predecessor_AbstractAction="_ZVBeNSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVCFMSIYEe-X5tvSWFit2w">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVCFMSIYEe-X5tvSWFit2w" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_ZVCFMCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVCFMiIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVCFMiIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZVCFMSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVCFMyIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVCFMyIYEe-X5tvSWFit2w" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_ZVCFMiIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVCFNCIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVCFNCIYEe-X5tvSWFit2w" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_ZVCFMyIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVCFNSIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZVCFNSIYEe-X5tvSWFit2w" entityName="deferredResult" predecessor_AbstractAction="_ZVCFNCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVCFNiIYEe-X5tvSWFit2w">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVCFNiIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZVCFNSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVCFNyIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_ZVCFNyIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVCFNiIYEe-X5tvSWFit2w"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVCsSCIYEe-X5tvSWFit2w">
                <branchBehaviour_BranchTransition id="_ZVCsSiIYEe-X5tvSWFit2w">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_ZVCsQCIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVCsQSIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVCsQSIYEe-X5tvSWFit2w" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_ZVCsQCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVCsQiIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVCsQiIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZVCsQSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVCsQyIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVCsQyIYEe-X5tvSWFit2w" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_ZVCsQiIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVCsRCIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVCsRCIYEe-X5tvSWFit2w" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_ZVCsQyIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVCsRSIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZVCsRSIYEe-X5tvSWFit2w" entityName="deferredResult" predecessor_AbstractAction="_ZVCsRCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVCsRiIYEe-X5tvSWFit2w">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVCsRiIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZVCsRSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVCsRyIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_ZVCsRyIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVCsRiIYEe-X5tvSWFit2w"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVCsTiIYEe-X5tvSWFit2w">
                <branchBehaviour_BranchTransition id="_ZVCsUCIYEe-X5tvSWFit2w">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_ZVCsSyIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVCsTCIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVCsTCIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZVCsSyIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVCsTSIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_ZVCsTSIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVCsTCIYEe-X5tvSWFit2w"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_ZVDTUSIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVDTUCIYEe-X5tvSWFit2w"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVDTViIYEe-X5tvSWFit2w" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_ZVDTVSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVDTVyIYEe-X5tvSWFit2w"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_ZVDTVyIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVDTViIYEe-X5tvSWFit2w"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_ZVwd8iIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZVwd8CIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_ZVtaoCIYEe-X5tvSWFit2w"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZVwd8SIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_ZVtaoyIYEe-X5tvSWFit2w"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_ZVEhhSIYEe-X5tvSWFit2w" describedService__SEFF="_ZPJfoiIYEe-X5tvSWFit2w">
      <steps_Behaviour xsi:type="seff:StartAction" id="_ZVD6ZCIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVEhcCIYEe-X5tvSWFit2w"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_ZVEhcCIYEe-X5tvSWFit2w" entityName="If Branch" predecessor_AbstractAction="_ZVD6ZCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVEhgyIYEe-X5tvSWFit2w">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVD6aCIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_ZVD6aiIYEe-X5tvSWFit2w">
            <steps_Behaviour xsi:type="seff:StartAction" id="_ZVD6ZSIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVD6ZiIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVD6ZiIYEe-X5tvSWFit2w" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_ZVD6ZSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVD6ZyIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_ZVD6ZyIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVD6ZiIYEe-X5tvSWFit2w"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVD6biIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_ZVD6cCIYEe-X5tvSWFit2w">
            <steps_Behaviour xsi:type="seff:StartAction" id="_ZVD6ayIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVD6bCIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVD6bCIYEe-X5tvSWFit2w" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_ZVD6ayIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVD6bSIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_ZVD6bSIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVD6bCIYEe-X5tvSWFit2w"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_ZVEhgyIYEe-X5tvSWFit2w" entityName="If Branch" predecessor_AbstractAction="_ZVEhcCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVEhhCIYEe-X5tvSWFit2w">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVEhgCIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_ZVEhgiIYEe-X5tvSWFit2w">
            <steps_Behaviour xsi:type="seff:StartAction" id="_ZVEhcSIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVEhfiIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_ZVEhfiIYEe-X5tvSWFit2w" entityName="If Branch" predecessor_AbstractAction="_ZVEhcSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVEhfyIYEe-X5tvSWFit2w">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVEhdiIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_ZVEheCIYEe-X5tvSWFit2w">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_ZVEhciIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVEhcyIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVEhcyIYEe-X5tvSWFit2w" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_ZVEhciIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVEhdCIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZVEhdCIYEe-X5tvSWFit2w" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_ZVEhcyIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVEhdSIYEe-X5tvSWFit2w">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_ZVEhdSIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVEhdCIYEe-X5tvSWFit2w"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVEheyIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_ZVEhfSIYEe-X5tvSWFit2w">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_ZVEheSIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVEheiIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_ZVEheiIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVEheSIYEe-X5tvSWFit2w"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_ZVEhfyIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVEhfiIYEe-X5tvSWFit2w"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_ZVEhhCIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVEhgyIYEe-X5tvSWFit2w"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_ZVD6YiIYEe-X5tvSWFit2w" describedService__SEFF="_ZPKGsyIYEe-X5tvSWFit2w">
      <steps_Behaviour xsi:type="seff:StartAction" id="_ZVDTWiIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVD6YCIYEe-X5tvSWFit2w"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZVD6YCIYEe-X5tvSWFit2w" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_ZVDTWiIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVD6YSIYEe-X5tvSWFit2w">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_ZVD6YSIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVD6YCIYEe-X5tvSWFit2w"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_ZV0vZCIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZV0vYyIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_ZVtapCIYEe-X5tvSWFit2w"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_ZVA3FyIYEe-X5tvSWFit2w" describedService__SEFF="_ZPKtwyIYEe-X5tvSWFit2w">
      <steps_Behaviour xsi:type="seff:StartAction" id="_ZPkWYCIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZU9zwSIYEe-X5tvSWFit2w"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_ZU9zwSIYEe-X5tvSWFit2w" entityName="If Branch" predecessor_AbstractAction="_ZPkWYCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZU-a0CIYEe-X5tvSWFit2w">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZU9MsCIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_ZU9zwCIYEe-X5tvSWFit2w">
            <steps_Behaviour xsi:type="seff:StartAction" id="_ZPlkgCIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZU8loCIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZU8loCIYEe-X5tvSWFit2w" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_ZPlkgCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZU8loSIYEe-X5tvSWFit2w">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_ZU8loSIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZU8loCIYEe-X5tvSWFit2w"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_ZU-a0CIYEe-X5tvSWFit2w" entityName="stopWatch.start()" predecessor_AbstractAction="_ZU9zwSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVA3FSIYEe-X5tvSWFit2w"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_ZVA3FSIYEe-X5tvSWFit2w" entityName="If Branch" predecessor_AbstractAction="_ZU-a0CIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVA3FiIYEe-X5tvSWFit2w">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVA3EiIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_ZVA3FCIYEe-X5tvSWFit2w">
            <steps_Behaviour xsi:type="seff:StartAction" id="_ZU-a0SIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVA3ECIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_ZVA3ECIYEe-X5tvSWFit2w" entityName="If Branch" predecessor_AbstractAction="_ZU-a0SIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVA3ESIYEe-X5tvSWFit2w">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVAQCSIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_ZVAQCyIYEe-X5tvSWFit2w">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_ZU_B4CIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZU_pAiIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_ZU_pAiIYEe-X5tvSWFit2w" entityName="Switch Branch" predecessor_AbstractAction="_ZU_B4CIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVAQACIYEe-X5tvSWFit2w">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZU_o8yIYEe-X5tvSWFit2w">
                      <branchBehaviour_BranchTransition id="_ZU_o9SIYEe-X5tvSWFit2w">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_ZU_B4SIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZU_o8CIYEe-X5tvSWFit2w"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_ZU_o8CIYEe-X5tvSWFit2w" entityName="If Branch" predecessor_AbstractAction="_ZU_B4SIYEe-X5tvSWFit2w" successor_AbstractAction="_ZU_o8SIYEe-X5tvSWFit2w">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZU_B5SIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_ZU_B5yIYEe-X5tvSWFit2w">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_ZU_B4iIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZU_B4yIYEe-X5tvSWFit2w"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_ZU_B4yIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZU_B4iIYEe-X5tvSWFit2w" successor_AbstractAction="_ZU_B5CIYEe-X5tvSWFit2w"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_ZU_B5CIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZU_B4yIYEe-X5tvSWFit2w"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_ZU_o8SIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZU_o8CIYEe-X5tvSWFit2w" successor_AbstractAction="_ZU_o8iIYEe-X5tvSWFit2w"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_ZU_o8iIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZU_o8SIYEe-X5tvSWFit2w"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZU_o-SIYEe-X5tvSWFit2w">
                      <branchBehaviour_BranchTransition id="_ZU_o-yIYEe-X5tvSWFit2w">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_ZU_o9iIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZU_o9yIYEe-X5tvSWFit2w"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_ZU_o9yIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZU_o9iIYEe-X5tvSWFit2w" successor_AbstractAction="_ZU_o-CIYEe-X5tvSWFit2w"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_ZU_o-CIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZU_o9yIYEe-X5tvSWFit2w"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZU_o_yIYEe-X5tvSWFit2w">
                      <branchBehaviour_BranchTransition id="_ZU_pASIYEe-X5tvSWFit2w">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_ZU_o_CIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZU_o_SIYEe-X5tvSWFit2w"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_ZU_o_SIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZU_o_CIYEe-X5tvSWFit2w" successor_AbstractAction="_ZU_o_iIYEe-X5tvSWFit2w"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_ZU_o_iIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZU_o_SIYEe-X5tvSWFit2w"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVAQACIYEe-X5tvSWFit2w" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_ZU_pAiIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVAQASIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVAQASIYEe-X5tvSWFit2w" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_ZVAQACIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVAQAiIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVAQAiIYEe-X5tvSWFit2w" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_ZVAQASIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVAQAyIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVAQAyIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZVAQAiIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVAQBCIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVAQBCIYEe-X5tvSWFit2w" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_ZVAQAyIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVAQBSIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVAQBSIYEe-X5tvSWFit2w" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_ZVAQBCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVAQBiIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVAQBiIYEe-X5tvSWFit2w" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_ZVAQBSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVAQByIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZVAQByIYEe-X5tvSWFit2w" entityName="deferredResult" predecessor_AbstractAction="_ZVAQBiIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVAQCCIYEe-X5tvSWFit2w">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_ZVAQCCIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVAQByIYEe-X5tvSWFit2w"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_ZVA3ESIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVA3ECIYEe-X5tvSWFit2w"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_ZVA3FiIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVA3FSIYEe-X5tvSWFit2w"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_ZV2knSIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_ZV2knyIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZV2kniIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_ZVtaoiIYEe-X5tvSWFit2w"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_ZVIL2CIYEe-X5tvSWFit2w" describedService__SEFF="_ZPJfpiIYEe-X5tvSWFit2w">
      <steps_Behaviour xsi:type="seff:StartAction" id="_ZVG9uyIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVIL1SIYEe-X5tvSWFit2w"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_ZVIL1SIYEe-X5tvSWFit2w" entityName="If Branch" predecessor_AbstractAction="_ZVG9uyIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVIL1iIYEe-X5tvSWFit2w">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVIL0iIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_ZVIL1CIYEe-X5tvSWFit2w">
            <steps_Behaviour xsi:type="seff:StartAction" id="_ZVG9vCIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVIL0CIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_ZVIL0CIYEe-X5tvSWFit2w" entityName="Switch Branch" predecessor_AbstractAction="_ZVG9vCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVIL0SIYEe-X5tvSWFit2w">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVHkxiIYEe-X5tvSWFit2w">
                <branchBehaviour_BranchTransition id="_ZVHkyCIYEe-X5tvSWFit2w">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_ZVG9vSIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVHkwCIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_ZVHkwCIYEe-X5tvSWFit2w" entityName="If Branch" predecessor_AbstractAction="_ZVG9vSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVHkwSIYEe-X5tvSWFit2w">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVG9xiIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_ZVG9yCIYEe-X5tvSWFit2w">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_ZVG9viIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVG9xCIYEe-X5tvSWFit2w"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_ZVG9xCIYEe-X5tvSWFit2w" entityName="If Branch" predecessor_AbstractAction="_ZVG9viIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVG9xSIYEe-X5tvSWFit2w">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVG9wSIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_ZVG9wyIYEe-X5tvSWFit2w">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_ZVG9vyIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVG9wCIYEe-X5tvSWFit2w"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_ZVG9wCIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVG9vyIYEe-X5tvSWFit2w"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_ZVG9xSIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVG9xCIYEe-X5tvSWFit2w"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVHkwSIYEe-X5tvSWFit2w" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_ZVHkwCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVHkwiIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVHkwiIYEe-X5tvSWFit2w" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_ZVHkwSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVHkwyIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZVHkwyIYEe-X5tvSWFit2w" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_ZVHkwiIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVHkxCIYEe-X5tvSWFit2w">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVHkxCIYEe-X5tvSWFit2w" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_ZVHkwyIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVHkxSIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_ZVHkxSIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVHkxCIYEe-X5tvSWFit2w"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVHkzCIYEe-X5tvSWFit2w">
                <branchBehaviour_BranchTransition id="_ZVHkziIYEe-X5tvSWFit2w">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_ZVHkySIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVHkyiIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVHkyiIYEe-X5tvSWFit2w" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_ZVHkySIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVHkyyIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_ZVHkyyIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVHkyiIYEe-X5tvSWFit2w"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVHk0SIYEe-X5tvSWFit2w">
                <branchBehaviour_BranchTransition id="_ZVHk0yIYEe-X5tvSWFit2w">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_ZVHkzyIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVHk0CIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_ZVHk0CIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVHkzyIYEe-X5tvSWFit2w"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_ZVIL0SIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVIL0CIYEe-X5tvSWFit2w"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVIL1iIYEe-X5tvSWFit2w" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_ZVIL1SIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVIL1yIYEe-X5tvSWFit2w"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_ZVIL1yIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVIL1iIYEe-X5tvSWFit2w"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_ZV5A1CIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZV5A0yIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_ZVtapSIYEe-X5tvSWFit2w"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_ZVG9uSIYEe-X5tvSWFit2w" describedService__SEFF="_ZOW1cCIYEe-X5tvSWFit2w">
      <steps_Behaviour xsi:type="seff:StartAction" id="_ZVFIgCIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVFIhyIYEe-X5tvSWFit2w"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_ZVFIhyIYEe-X5tvSWFit2w" entityName="If Branch" predecessor_AbstractAction="_ZVFIgCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVFIiCIYEe-X5tvSWFit2w">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVFIhCIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_ZVFIhiIYEe-X5tvSWFit2w">
            <steps_Behaviour xsi:type="seff:StartAction" id="_ZVFIgSIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVFIgiIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZVFIgiIYEe-X5tvSWFit2w" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_ZVFIgSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVFIgyIYEe-X5tvSWFit2w">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController.generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController.generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_ZVFIgyIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVFIgiIYEe-X5tvSWFit2w"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVFIiCIYEe-X5tvSWFit2w" entityName="stopWatch.start()" predecessor_AbstractAction="_ZVFIhyIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVG9tyIYEe-X5tvSWFit2w"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_ZVG9tyIYEe-X5tvSWFit2w" entityName="Switch Branch" predecessor_AbstractAction="_ZVFIiCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVG9uCIYEe-X5tvSWFit2w">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVFvnCIYEe-X5tvSWFit2w">
          <branchBehaviour_BranchTransition id="_ZVFvniIYEe-X5tvSWFit2w">
            <steps_Behaviour xsi:type="seff:StartAction" id="_ZVFIiSIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVFIiiIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVFIiiIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZVFIiSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVFIiyIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVFIiyIYEe-X5tvSWFit2w" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_ZVFIiiIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVFIjCIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVFIjCIYEe-X5tvSWFit2w" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_ZVFIiyIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVFIjSIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVFIjSIYEe-X5tvSWFit2w" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_ZVFIjCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVFIjiIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZVFIjiIYEe-X5tvSWFit2w" entityName="deferredResult" predecessor_AbstractAction="_ZVFIjSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVFvmCIYEe-X5tvSWFit2w">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_ZVFvmCIYEe-X5tvSWFit2w" entityName="If Branch" predecessor_AbstractAction="_ZVFIjiIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVFvmSIYEe-X5tvSWFit2w">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVFvlSIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_ZVFvlyIYEe-X5tvSWFit2w">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_ZVFIjyIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVFIkCIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVFIkCIYEe-X5tvSWFit2w" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_ZVFIjyIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVFIkSIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVFIkSIYEe-X5tvSWFit2w" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_ZVFIkCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVFIkiIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVFIkiIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZVFIkSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVFvkCIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVFvkCIYEe-X5tvSWFit2w" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_ZVFIkiIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVFvkSIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVFvkSIYEe-X5tvSWFit2w" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_ZVFvkCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVFvkiIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVFvkiIYEe-X5tvSWFit2w" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_ZVFvkSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVFvkyIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZVFvkyIYEe-X5tvSWFit2w" entityName="deferredResult" predecessor_AbstractAction="_ZVFvkiIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVFvlCIYEe-X5tvSWFit2w">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_ZVFvlCIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVFvkyIYEe-X5tvSWFit2w"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVFvmSIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZVFvmCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVFvmiIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVFvmiIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZVFvmSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVFvmyIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_ZVFvmyIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVFvmiIYEe-X5tvSWFit2w"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVGWsCIYEe-X5tvSWFit2w">
          <branchBehaviour_BranchTransition id="_ZVG9sCIYEe-X5tvSWFit2w">
            <steps_Behaviour xsi:type="seff:StartAction" id="_ZVFvnyIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVGWrCIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_ZVGWrCIYEe-X5tvSWFit2w" entityName="If Branch" predecessor_AbstractAction="_ZVFvnyIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVGWrSIYEe-X5tvSWFit2w">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVGWqSIYEe-X5tvSWFit2w" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_ZVGWqyIYEe-X5tvSWFit2w">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_ZVGWoCIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVGWoSIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVGWoSIYEe-X5tvSWFit2w" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_ZVGWoCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVGWoiIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVGWoiIYEe-X5tvSWFit2w" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_ZVGWoSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVGWoyIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVGWoyIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZVGWoiIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVGWpCIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVGWpCIYEe-X5tvSWFit2w" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_ZVGWoyIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVGWpSIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVGWpSIYEe-X5tvSWFit2w" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_ZVGWpCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVGWpiIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVGWpiIYEe-X5tvSWFit2w" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_ZVGWpSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVGWpyIYEe-X5tvSWFit2w"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_ZVGWpyIYEe-X5tvSWFit2w" entityName="deferredResult" predecessor_AbstractAction="_ZVGWpiIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVGWqCIYEe-X5tvSWFit2w">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_ZVGWqCIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVGWpyIYEe-X5tvSWFit2w"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVGWrSIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZVGWrCIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVGWriIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVGWriIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZVGWrSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVGWryIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_ZVGWryIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVGWriIYEe-X5tvSWFit2w"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_ZVG9tCIYEe-X5tvSWFit2w">
          <branchBehaviour_BranchTransition id="_ZVG9tiIYEe-X5tvSWFit2w">
            <steps_Behaviour xsi:type="seff:StartAction" id="_ZVG9sSIYEe-X5tvSWFit2w" entityName="Start Action" successor_AbstractAction="_ZVG9siIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_ZVG9siIYEe-X5tvSWFit2w" entityName="stopWatch.stop()" predecessor_AbstractAction="_ZVG9sSIYEe-X5tvSWFit2w" successor_AbstractAction="_ZVG9syIYEe-X5tvSWFit2w"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_ZVG9syIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVG9siIYEe-X5tvSWFit2w"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_ZVG9uCIYEe-X5tvSWFit2w" entityName="Stop Action" predecessor_AbstractAction="_ZVG9tyIYEe-X5tvSWFit2w"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_ZV9SQSIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_ZV-gZCIYEe-X5tvSWFit2w" encapsulatedComponent__AssemblyContext="_ZV0vZCIYEe-X5tvSWFit2w"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_ZV_HdCIYEe-X5tvSWFit2w" innerProvidedRole_ProvidedDelegationConnector="_ZV0vYyIYEe-X5tvSWFit2w" outerProvidedRole_ProvidedDelegationConnector="_ZV9SQCIYEe-X5tvSWFit2w" assemblyContext_ProvidedDelegationConnector="_ZV-gZCIYEe-X5tvSWFit2w"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZV9SQCIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_ZVtapCIYEe-X5tvSWFit2w"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_ZV9SQiIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_ZV-gYiIYEe-X5tvSWFit2w" encapsulatedComponent__AssemblyContext="_ZV2knSIYEe-X5tvSWFit2w"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_ZV95USIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_ZV-gZiIYEe-X5tvSWFit2w" encapsulatedComponent__AssemblyContext="_ZV2knyIYEe-X5tvSWFit2w"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_ZV_HciIYEe-X5tvSWFit2w" innerProvidedRole_ProvidedDelegationConnector="_ZV2kniIYEe-X5tvSWFit2w" outerProvidedRole_ProvidedDelegationConnector="_ZV95UCIYEe-X5tvSWFit2w" assemblyContext_ProvidedDelegationConnector="_ZV-gZiIYEe-X5tvSWFit2w"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZV95UCIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_ZVtaoiIYEe-X5tvSWFit2w"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_ZV95VCIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_ZV-gaiIYEe-X5tvSWFit2w" encapsulatedComponent__AssemblyContext="_ZVwd8iIYEe-X5tvSWFit2w"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_ZV_HcSIYEe-X5tvSWFit2w" innerProvidedRole_ProvidedDelegationConnector="_ZVwd8CIYEe-X5tvSWFit2w" outerProvidedRole_ProvidedDelegationConnector="_ZV95UyIYEe-X5tvSWFit2w" assemblyContext_ProvidedDelegationConnector="_ZV-gaiIYEe-X5tvSWFit2w"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_ZV_ugCIYEe-X5tvSWFit2w" innerProvidedRole_ProvidedDelegationConnector="_ZVwd8SIYEe-X5tvSWFit2w" outerProvidedRole_ProvidedDelegationConnector="_ZV95UiIYEe-X5tvSWFit2w" assemblyContext_ProvidedDelegationConnector="_ZV-gaiIYEe-X5tvSWFit2w"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZV95UiIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_ZVtaoyIYEe-X5tvSWFit2w"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZV95UyIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_ZVtaoCIYEe-X5tvSWFit2w"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_ZV95ViIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_ZV-gYCIYEe-X5tvSWFit2w" encapsulatedComponent__AssemblyContext="_ZVtapyIYEe-X5tvSWFit2w"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_ZV_HcCIYEe-X5tvSWFit2w" innerProvidedRole_ProvidedDelegationConnector="_ZVtapiIYEe-X5tvSWFit2w" outerProvidedRole_ProvidedDelegationConnector="_ZV95VSIYEe-X5tvSWFit2w" assemblyContext_ProvidedDelegationConnector="_ZV-gYCIYEe-X5tvSWFit2w"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZV95VSIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_ZVtaoSIYEe-X5tvSWFit2w"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_ZV95WCIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_ZV-gaCIYEe-X5tvSWFit2w" encapsulatedComponent__AssemblyContext="_ZV5A1CIYEe-X5tvSWFit2w"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_ZV_HcyIYEe-X5tvSWFit2w" innerProvidedRole_ProvidedDelegationConnector="_ZV5A0yIYEe-X5tvSWFit2w" outerProvidedRole_ProvidedDelegationConnector="_ZV95VyIYEe-X5tvSWFit2w" assemblyContext_ProvidedDelegationConnector="_ZV-gaCIYEe-X5tvSWFit2w"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_ZV95VyIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_ZVtapSIYEe-X5tvSWFit2w"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_ZVtaoCIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_ZPJfoiIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_ZPJfoSIYEe-X5tvSWFit2w">
      <parameters__OperationSignature dataType__Parameter="_ZPI4kCIYEe-X5tvSWFit2w" parameterName="AuthorizationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_ZPJfoCIYEe-X5tvSWFit2w" parameterName="TeleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_ZVtaoSIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_ZPKtwCIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_ZOWOYCIYEe-X5tvSWFit2w">
      <parameters__OperationSignature dataType__Parameter="_ZPJfpSIYEe-X5tvSWFit2w" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_ZVtaoiIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_ZPJfpiIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_ZPJfoSIYEe-X5tvSWFit2w">
      <parameters__OperationSignature dataType__Parameter="_ZPJfpSIYEe-X5tvSWFit2w" parameterName="RegistrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_ZVtaoyIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_ZPKGsyIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_ZPJfoSIYEe-X5tvSWFit2w">
      <parameters__OperationSignature dataType__Parameter="_ZPKGsiIYEe-X5tvSWFit2w" parameterName="Tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_ZVtapCIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_ZPKtwyIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_ZOWOYCIYEe-X5tvSWFit2w">
      <parameters__OperationSignature dataType__Parameter="_ZPJfpSIYEe-X5tvSWFit2w" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_ZVtapSIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_ZOW1cCIYEe-X5tvSWFit2w" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_ZOWOYCIYEe-X5tvSWFit2w">
      <parameters__OperationSignature dataType__Parameter="_ZOVAQCIYEe-X5tvSWFit2w" parameterName="RegistrationTokenRequest" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_ZOVAQCIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_ZOWOYCIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_ZPI4kCIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_ZPJfoCIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_ZPJfoSIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_ZPJfpSIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_ZPKGsiIYEe-X5tvSWFit2w" entityName="app_coronawarn_verification_model_Tan"/>
</repository:Repository>
