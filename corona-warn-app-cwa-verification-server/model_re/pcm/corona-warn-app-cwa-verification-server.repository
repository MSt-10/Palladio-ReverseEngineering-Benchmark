<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_S-Z-_DA9Ee-znMit9inodg">
  <components__Repository xsi:type="repository:BasicComponent" id="_S-JgRzA9Ee-znMit9inodg" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_S-JgSTA9Ee-znMit9inodg" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_S-JgSDA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_S-JgRjA9Ee-znMit9inodg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_S9eK3TA9Ee-znMit9inodg" describedService__SEFF="_S3mzYDA9Ee-znMit9inodg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_S9cVoTA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9cVqDA9Ee-znMit9inodg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_S9cVqDA9Ee-znMit9inodg" entityName="If Branch" predecessor_AbstractAction="_S9cVoTA9Ee-znMit9inodg" successor_AbstractAction="_S9cVqTA9Ee-znMit9inodg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9cVpTA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_S9cVpzA9Ee-znMit9inodg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_S9cVojA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9cVozA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_S9cVozA9Ee-znMit9inodg" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_S9cVojA9Ee-znMit9inodg" successor_AbstractAction="_S9cVpDA9Ee-znMit9inodg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_S9cVpDA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9cVozA9Ee-znMit9inodg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_S9cVqTA9Ee-znMit9inodg" entityName="stopWatch.start()" predecessor_AbstractAction="_S9cVqDA9Ee-znMit9inodg" successor_AbstractAction="_S9eK2jA9Ee-znMit9inodg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_S9eK2jA9Ee-znMit9inodg" entityName="If Branch" predecessor_AbstractAction="_S9cVqTA9Ee-znMit9inodg" successor_AbstractAction="_S9eK2zA9Ee-znMit9inodg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9eK1zA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_S9eK2TA9Ee-znMit9inodg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_S9cVqjA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9eK1TA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_S9eK1TA9Ee-znMit9inodg" entityName="Switch Branch" predecessor_AbstractAction="_S9cVqjA9Ee-znMit9inodg" successor_AbstractAction="_S9eK1jA9Ee-znMit9inodg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9djwDA9Ee-znMit9inodg">
                <branchBehaviour_BranchTransition id="_S9djwjA9Ee-znMit9inodg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_S9cVqzA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9cVrDA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9cVrDA9Ee-znMit9inodg" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_S9cVqzA9Ee-znMit9inodg" successor_AbstractAction="_S9c8szA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_S9c8szA9Ee-znMit9inodg" entityName="If Branch" predecessor_AbstractAction="_S9cVrDA9Ee-znMit9inodg" successor_AbstractAction="_S9c8tDA9Ee-znMit9inodg">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9c8sDA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_S9c8sjA9Ee-znMit9inodg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_S9cVrTA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9cVszA9Ee-znMit9inodg"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_S9cVszA9Ee-znMit9inodg" entityName="If Branch" predecessor_AbstractAction="_S9cVrTA9Ee-znMit9inodg" successor_AbstractAction="_S9cVtDA9Ee-znMit9inodg">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9cVsDA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_S9cVsjA9Ee-znMit9inodg">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_S9cVrjA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9cVrzA9Ee-znMit9inodg"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_S9cVrzA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9cVrjA9Ee-znMit9inodg"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_S9cVtDA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9cVszA9Ee-znMit9inodg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9c8tDA9Ee-znMit9inodg" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_S9c8szA9Ee-znMit9inodg" successor_AbstractAction="_S9c8tTA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9c8tTA9Ee-znMit9inodg" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_S9c8tDA9Ee-znMit9inodg" successor_AbstractAction="_S9c8tjA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9c8tjA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9c8tTA9Ee-znMit9inodg" successor_AbstractAction="_S9c8tzA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9c8tzA9Ee-znMit9inodg" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_S9c8tjA9Ee-znMit9inodg" successor_AbstractAction="_S9c8uDA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9c8uDA9Ee-znMit9inodg" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_S9c8tzA9Ee-znMit9inodg" successor_AbstractAction="_S9c8uTA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_S9c8uTA9Ee-znMit9inodg" entityName="deferredResult" predecessor_AbstractAction="_S9c8uDA9Ee-znMit9inodg" successor_AbstractAction="_S9c8ujA9Ee-znMit9inodg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9c8ujA9Ee-znMit9inodg" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_S9c8uTA9Ee-znMit9inodg" successor_AbstractAction="_S9c8uzA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9c8uzA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9c8ujA9Ee-znMit9inodg" successor_AbstractAction="_S9c8vDA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9c8vDA9Ee-znMit9inodg" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_S9c8uzA9Ee-znMit9inodg" successor_AbstractAction="_S9c8vTA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9c8vTA9Ee-znMit9inodg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_S9c8vDA9Ee-znMit9inodg" successor_AbstractAction="_S9c8vjA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_S9c8vjA9Ee-znMit9inodg" entityName="deferredResult" predecessor_AbstractAction="_S9c8vTA9Ee-znMit9inodg" successor_AbstractAction="_S9c8vzA9Ee-znMit9inodg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9c8vzA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9c8vjA9Ee-znMit9inodg" successor_AbstractAction="_S9c8wDA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_S9c8wDA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9c8vzA9Ee-znMit9inodg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9djyzA9Ee-znMit9inodg">
                <branchBehaviour_BranchTransition id="_S9djzTA9Ee-znMit9inodg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_S9djwzA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9djxDA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9djxDA9Ee-znMit9inodg" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_S9djwzA9Ee-znMit9inodg" successor_AbstractAction="_S9djxTA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9djxTA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9djxDA9Ee-znMit9inodg" successor_AbstractAction="_S9djxjA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9djxjA9Ee-znMit9inodg" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_S9djxTA9Ee-znMit9inodg" successor_AbstractAction="_S9djxzA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9djxzA9Ee-znMit9inodg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_S9djxjA9Ee-znMit9inodg" successor_AbstractAction="_S9djyDA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_S9djyDA9Ee-znMit9inodg" entityName="deferredResult" predecessor_AbstractAction="_S9djxzA9Ee-znMit9inodg" successor_AbstractAction="_S9djyTA9Ee-znMit9inodg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9djyTA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9djyDA9Ee-znMit9inodg" successor_AbstractAction="_S9djyjA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_S9djyjA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9djyTA9Ee-znMit9inodg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9eK0jA9Ee-znMit9inodg">
                <branchBehaviour_BranchTransition id="_S9eK1DA9Ee-znMit9inodg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_S9djzjA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9eK0DA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9eK0DA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9djzjA9Ee-znMit9inodg" successor_AbstractAction="_S9eK0TA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_S9eK0TA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9eK0DA9Ee-znMit9inodg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_S9eK1jA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9eK1TA9Ee-znMit9inodg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_S9eK2zA9Ee-znMit9inodg" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_S9eK2jA9Ee-znMit9inodg" successor_AbstractAction="_S9eK3DA9Ee-znMit9inodg"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_S9eK3DA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9eK2zA9Ee-znMit9inodg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_S-MjmjA9Ee-znMit9inodg" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_S-MjmTA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_S-JgQjA9Ee-znMit9inodg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_S9buozA9Ee-znMit9inodg" describedService__SEFF="_S3oBgjA9Ee-znMit9inodg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_S4BqITA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9buoDA9Ee-znMit9inodg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_S9buoDA9Ee-znMit9inodg" entityName="If Branch" predecessor_AbstractAction="_S4BqITA9Ee-znMit9inodg" successor_AbstractAction="_S9buoTA9Ee-znMit9inodg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9bunTA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_S9bunzA9Ee-znMit9inodg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_S4DfUDA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9bumzA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_S9bumzA9Ee-znMit9inodg" entityName="Switch Branch" predecessor_AbstractAction="_S4DfUDA9Ee-znMit9inodg" successor_AbstractAction="_S9bunDA9Ee-znMit9inodg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9bHgzA9Ee-znMit9inodg">
                <branchBehaviour_BranchTransition id="_S9bHhTA9Ee-znMit9inodg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_S4EGYDA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9XdJTA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_S9XdJTA9Ee-znMit9inodg" entityName="If Branch" predecessor_AbstractAction="_S4EGYDA9Ee-znMit9inodg" successor_AbstractAction="_S9YEMDA9Ee-znMit9inodg">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9XdIjA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_S9XdJDA9Ee-znMit9inodg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_S4EGYTA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9XdIDA9Ee-znMit9inodg"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_S9XdIDA9Ee-znMit9inodg" entityName="If Branch" predecessor_AbstractAction="_S4EGYTA9Ee-znMit9inodg" successor_AbstractAction="_S9XdITA9Ee-znMit9inodg">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S4FUgDA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_S4F7kDA9Ee-znMit9inodg">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_S4EtcDA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S4EtcTA9Ee-znMit9inodg"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_S4EtcTA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S4EtcDA9Ee-znMit9inodg"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_S9XdITA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9XdIDA9Ee-znMit9inodg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9YEMDA9Ee-znMit9inodg" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_S9XdJTA9Ee-znMit9inodg" successor_AbstractAction="_S9YEMTA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9YEMTA9Ee-znMit9inodg" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_S9YEMDA9Ee-znMit9inodg" successor_AbstractAction="_S9bHgDA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_S9bHgDA9Ee-znMit9inodg" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_S9YEMTA9Ee-znMit9inodg" successor_AbstractAction="_S9bHgTA9Ee-znMit9inodg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9bHgTA9Ee-znMit9inodg" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_S9bHgDA9Ee-znMit9inodg" successor_AbstractAction="_S9bHgjA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_S9bHgjA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9bHgTA9Ee-znMit9inodg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9bukzA9Ee-znMit9inodg">
                <branchBehaviour_BranchTransition id="_S9bulTA9Ee-znMit9inodg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_S9bukDA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9bukTA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9bukTA9Ee-znMit9inodg" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_S9bukDA9Ee-znMit9inodg" successor_AbstractAction="_S9bukjA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_S9bukjA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9bukTA9Ee-znMit9inodg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9bumDA9Ee-znMit9inodg">
                <branchBehaviour_BranchTransition id="_S9bumjA9Ee-znMit9inodg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_S9buljA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9bulzA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_S9bulzA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9buljA9Ee-znMit9inodg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_S9bunDA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9bumzA9Ee-znMit9inodg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_S9buoTA9Ee-znMit9inodg" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_S9buoDA9Ee-znMit9inodg" successor_AbstractAction="_S9buojA9Ee-znMit9inodg"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_S9buojA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9buoTA9Ee-znMit9inodg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_S-O_3TA9Ee-znMit9inodg" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_S-O_2zA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_S-JgQTA9Ee-znMit9inodg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_S-O_3DA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_S-JgRTA9Ee-znMit9inodg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_S9h1MzA9Ee-znMit9inodg" describedService__SEFF="_S3ookTA9Ee-znMit9inodg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_S9h1MDA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9h1MTA9Ee-znMit9inodg"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_S9h1MTA9Ee-znMit9inodg" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_S9h1MDA9Ee-znMit9inodg" successor_AbstractAction="_S9h1MjA9Ee-znMit9inodg">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_S9h1MjA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9h1MTA9Ee-znMit9inodg"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_S9icVTA9Ee-znMit9inodg" describedService__SEFF="_S3nacjA9Ee-znMit9inodg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_S9h1NTA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9icQDA9Ee-znMit9inodg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_S9icQDA9Ee-znMit9inodg" entityName="If Branch" predecessor_AbstractAction="_S9h1NTA9Ee-znMit9inodg" successor_AbstractAction="_S9icUzA9Ee-znMit9inodg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9h1OTA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_S9h1OzA9Ee-znMit9inodg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_S9h1NjA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9h1NzA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_S9h1NzA9Ee-znMit9inodg" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_S9h1NjA9Ee-znMit9inodg" successor_AbstractAction="_S9h1ODA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_S9h1ODA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9h1NzA9Ee-znMit9inodg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9h1PzA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_S9h1QTA9Ee-znMit9inodg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_S9h1PDA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9h1PTA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_S9h1PTA9Ee-znMit9inodg" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_S9h1PDA9Ee-znMit9inodg" successor_AbstractAction="_S9h1PjA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_S9h1PjA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9h1PTA9Ee-znMit9inodg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_S9icUzA9Ee-znMit9inodg" entityName="If Branch" predecessor_AbstractAction="_S9icQDA9Ee-znMit9inodg" successor_AbstractAction="_S9icVDA9Ee-znMit9inodg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9icUDA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_S9icUjA9Ee-znMit9inodg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_S9icQTA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9icTjA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_S9icTjA9Ee-znMit9inodg" entityName="If Branch" predecessor_AbstractAction="_S9icQTA9Ee-znMit9inodg" successor_AbstractAction="_S9icTzA9Ee-znMit9inodg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9icRjA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_S9icSDA9Ee-znMit9inodg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_S9icQjA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9icQzA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9icQzA9Ee-znMit9inodg" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_S9icQjA9Ee-znMit9inodg" successor_AbstractAction="_S9icRDA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_S9icRDA9Ee-znMit9inodg" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_S9icQzA9Ee-znMit9inodg" successor_AbstractAction="_S9icRTA9Ee-znMit9inodg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_S9icRTA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9icRDA9Ee-znMit9inodg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9icSzA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_S9icTTA9Ee-znMit9inodg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_S9icSTA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9icSjA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_S9icSjA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9icSTA9Ee-znMit9inodg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_S9icTzA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9icTjA9Ee-znMit9inodg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_S9icVDA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9icUzA9Ee-znMit9inodg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_S-TRTjA9Ee-znMit9inodg" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_S-TRTTA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_S-JgQzA9Ee-znMit9inodg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_S9hOMjA9Ee-znMit9inodg" describedService__SEFF="_S23MgDA9Ee-znMit9inodg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_S9gAATA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9gACDA9Ee-znMit9inodg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_S9gACDA9Ee-znMit9inodg" entityName="If Branch" predecessor_AbstractAction="_S9gAATA9Ee-znMit9inodg" successor_AbstractAction="_S9gACTA9Ee-znMit9inodg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9gABTA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_S9gABzA9Ee-znMit9inodg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_S9gAAjA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9gAAzA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_S9gAAzA9Ee-znMit9inodg" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_S9gAAjA9Ee-znMit9inodg" successor_AbstractAction="_S9gABDA9Ee-znMit9inodg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController.generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController.generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_S9gABDA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9gAAzA9Ee-znMit9inodg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gACTA9Ee-znMit9inodg" entityName="stopWatch.start()" predecessor_AbstractAction="_S9gACDA9Ee-znMit9inodg" successor_AbstractAction="_S9hOMDA9Ee-znMit9inodg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_S9hOMDA9Ee-znMit9inodg" entityName="Switch Branch" predecessor_AbstractAction="_S9gACTA9Ee-znMit9inodg" successor_AbstractAction="_S9hOMTA9Ee-znMit9inodg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9gnGTA9Ee-znMit9inodg">
          <branchBehaviour_BranchTransition id="_S9gnGzA9Ee-znMit9inodg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_S9gACjA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9gACzA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gACzA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9gACjA9Ee-znMit9inodg" successor_AbstractAction="_S9gADDA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gADDA9Ee-znMit9inodg" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_S9gACzA9Ee-znMit9inodg" successor_AbstractAction="_S9gADTA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gADTA9Ee-znMit9inodg" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_S9gADDA9Ee-znMit9inodg" successor_AbstractAction="_S9gADjA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gADjA9Ee-znMit9inodg" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_S9gADTA9Ee-znMit9inodg" successor_AbstractAction="_S9gADzA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_S9gADzA9Ee-znMit9inodg" entityName="deferredResult" predecessor_AbstractAction="_S9gADjA9Ee-znMit9inodg" successor_AbstractAction="_S9gnFTA9Ee-znMit9inodg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_S9gnFTA9Ee-znMit9inodg" entityName="If Branch" predecessor_AbstractAction="_S9gADzA9Ee-znMit9inodg" successor_AbstractAction="_S9gnFjA9Ee-znMit9inodg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9gnEjA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_S9gnFDA9Ee-znMit9inodg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_S9gAEDA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9gAETA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gAETA9Ee-znMit9inodg" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_S9gAEDA9Ee-znMit9inodg" successor_AbstractAction="_S9gAEjA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gAEjA9Ee-znMit9inodg" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_S9gAETA9Ee-znMit9inodg" successor_AbstractAction="_S9gAEzA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gAEzA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9gAEjA9Ee-znMit9inodg" successor_AbstractAction="_S9gAFDA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gAFDA9Ee-znMit9inodg" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_S9gAEzA9Ee-znMit9inodg" successor_AbstractAction="_S9gAFTA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gAFTA9Ee-znMit9inodg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_S9gAFDA9Ee-znMit9inodg" successor_AbstractAction="_S9gAFjA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gAFjA9Ee-znMit9inodg" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_S9gAFTA9Ee-znMit9inodg" successor_AbstractAction="_S9gnEDA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_S9gnEDA9Ee-znMit9inodg" entityName="deferredResult" predecessor_AbstractAction="_S9gAFjA9Ee-znMit9inodg" successor_AbstractAction="_S9gnETA9Ee-znMit9inodg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_S9gnETA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9gnEDA9Ee-znMit9inodg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gnFjA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9gnFTA9Ee-znMit9inodg" successor_AbstractAction="_S9gnFzA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gnFzA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9gnFjA9Ee-znMit9inodg" successor_AbstractAction="_S9gnGDA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_S9gnGDA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9gnFzA9Ee-znMit9inodg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9hOJzA9Ee-znMit9inodg">
          <branchBehaviour_BranchTransition id="_S9hOKTA9Ee-znMit9inodg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_S9gnHDA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9hOIzA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_S9hOIzA9Ee-znMit9inodg" entityName="If Branch" predecessor_AbstractAction="_S9gnHDA9Ee-znMit9inodg" successor_AbstractAction="_S9hOJDA9Ee-znMit9inodg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9hOIDA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_S9hOIjA9Ee-znMit9inodg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_S9gnHTA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9gnHjA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gnHjA9Ee-znMit9inodg" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_S9gnHTA9Ee-znMit9inodg" successor_AbstractAction="_S9gnHzA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gnHzA9Ee-znMit9inodg" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_S9gnHjA9Ee-znMit9inodg" successor_AbstractAction="_S9gnIDA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gnIDA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9gnHzA9Ee-znMit9inodg" successor_AbstractAction="_S9gnITA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gnITA9Ee-znMit9inodg" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_S9gnIDA9Ee-znMit9inodg" successor_AbstractAction="_S9gnIjA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gnIjA9Ee-znMit9inodg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_S9gnITA9Ee-znMit9inodg" successor_AbstractAction="_S9gnIzA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9gnIzA9Ee-znMit9inodg" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_S9gnIjA9Ee-znMit9inodg" successor_AbstractAction="_S9gnJDA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_S9gnJDA9Ee-znMit9inodg" entityName="deferredResult" predecessor_AbstractAction="_S9gnIzA9Ee-znMit9inodg" successor_AbstractAction="_S9gnJTA9Ee-znMit9inodg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_S9gnJTA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9gnJDA9Ee-znMit9inodg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_S9hOJDA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9hOIzA9Ee-znMit9inodg" successor_AbstractAction="_S9hOJTA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_S9hOJTA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9hOJDA9Ee-znMit9inodg" successor_AbstractAction="_S9hOJjA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_S9hOJjA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9hOJTA9Ee-znMit9inodg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9hOLTA9Ee-znMit9inodg">
          <branchBehaviour_BranchTransition id="_S9hOLzA9Ee-znMit9inodg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_S9hOKjA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9hOKzA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_S9hOKzA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9hOKjA9Ee-znMit9inodg" successor_AbstractAction="_S9hOLDA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_S9hOLDA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9hOKzA9Ee-znMit9inodg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_S9hOMTA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9hOMDA9Ee-znMit9inodg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_S-VGfjA9Ee-znMit9inodg" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_S-VGfTA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_S-JgRDA9Ee-znMit9inodg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_S9fZBDA9Ee-znMit9inodg" describedService__SEFF="_S3nadTA9Ee-znMit9inodg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_S9eK3zA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9eK5jA9Ee-znMit9inodg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_S9eK5jA9Ee-znMit9inodg" entityName="If Branch" predecessor_AbstractAction="_S9eK3zA9Ee-znMit9inodg" successor_AbstractAction="_S9eK5zA9Ee-znMit9inodg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9eK4zA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_S9eK5TA9Ee-znMit9inodg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_S9eK4DA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9eK4TA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_S9eK4TA9Ee-znMit9inodg" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_S9eK4DA9Ee-znMit9inodg" successor_AbstractAction="_S9eK4jA9Ee-znMit9inodg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_S9eK4jA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9eK4TA9Ee-znMit9inodg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_S9eK5zA9Ee-znMit9inodg" entityName="stopWatch.start()" predecessor_AbstractAction="_S9eK5jA9Ee-znMit9inodg" successor_AbstractAction="_S9fZAjA9Ee-znMit9inodg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_S9fZAjA9Ee-znMit9inodg" entityName="If Branch" predecessor_AbstractAction="_S9eK5zA9Ee-znMit9inodg" successor_AbstractAction="_S9fZAzA9Ee-znMit9inodg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9fY_zA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_S9fZATA9Ee-znMit9inodg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_S9ex4DA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9fY_TA9Ee-znMit9inodg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_S9fY_TA9Ee-znMit9inodg" entityName="If Branch" predecessor_AbstractAction="_S9ex4DA9Ee-znMit9inodg" successor_AbstractAction="_S9fY_jA9Ee-znMit9inodg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9fY-jA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_S9fY_DA9Ee-znMit9inodg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_S9ex4TA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9fY8DA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_S9fY8DA9Ee-znMit9inodg" entityName="Switch Branch" predecessor_AbstractAction="_S9ex4TA9Ee-znMit9inodg" successor_AbstractAction="_S9fY8TA9Ee-znMit9inodg">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9ex7DA9Ee-znMit9inodg">
                      <branchBehaviour_BranchTransition id="_S9ex7jA9Ee-znMit9inodg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_S9ex4jA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9ex6TA9Ee-znMit9inodg"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_S9ex6TA9Ee-znMit9inodg" entityName="If Branch" predecessor_AbstractAction="_S9ex4jA9Ee-znMit9inodg" successor_AbstractAction="_S9ex6jA9Ee-znMit9inodg">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9ex5jA9Ee-znMit9inodg" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_S9ex6DA9Ee-znMit9inodg">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_S9ex4zA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9ex5DA9Ee-znMit9inodg"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_S9ex5DA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9ex4zA9Ee-znMit9inodg" successor_AbstractAction="_S9ex5TA9Ee-znMit9inodg"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_S9ex5TA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9ex5DA9Ee-znMit9inodg"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_S9ex6jA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9ex6TA9Ee-znMit9inodg" successor_AbstractAction="_S9ex6zA9Ee-znMit9inodg"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_S9ex6zA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9ex6jA9Ee-znMit9inodg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9ex8jA9Ee-znMit9inodg">
                      <branchBehaviour_BranchTransition id="_S9ex9DA9Ee-znMit9inodg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_S9ex7zA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9ex8DA9Ee-znMit9inodg"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_S9ex8DA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9ex7zA9Ee-znMit9inodg" successor_AbstractAction="_S9ex8TA9Ee-znMit9inodg"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_S9ex8TA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9ex8DA9Ee-znMit9inodg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_S9ex-DA9Ee-znMit9inodg">
                      <branchBehaviour_BranchTransition id="_S9ex-jA9Ee-znMit9inodg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_S9ex9TA9Ee-znMit9inodg" entityName="Start Action" successor_AbstractAction="_S9ex9jA9Ee-znMit9inodg"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_S9ex9jA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9ex9TA9Ee-znMit9inodg" successor_AbstractAction="_S9ex9zA9Ee-znMit9inodg"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_S9ex9zA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9ex9jA9Ee-znMit9inodg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9fY8TA9Ee-znMit9inodg" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_S9fY8DA9Ee-znMit9inodg" successor_AbstractAction="_S9fY8jA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9fY8jA9Ee-znMit9inodg" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_S9fY8TA9Ee-znMit9inodg" successor_AbstractAction="_S9fY8zA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9fY8zA9Ee-znMit9inodg" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_S9fY8jA9Ee-znMit9inodg" successor_AbstractAction="_S9fY9DA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9fY9DA9Ee-znMit9inodg" entityName="stopWatch.stop()" predecessor_AbstractAction="_S9fY8zA9Ee-znMit9inodg" successor_AbstractAction="_S9fY9TA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9fY9TA9Ee-znMit9inodg" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_S9fY9DA9Ee-znMit9inodg" successor_AbstractAction="_S9fY9jA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9fY9jA9Ee-znMit9inodg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_S9fY9TA9Ee-znMit9inodg" successor_AbstractAction="_S9fY9zA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_S9fY9zA9Ee-znMit9inodg" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_S9fY9jA9Ee-znMit9inodg" successor_AbstractAction="_S9fY-DA9Ee-znMit9inodg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_S9fY-DA9Ee-znMit9inodg" entityName="deferredResult" predecessor_AbstractAction="_S9fY9zA9Ee-znMit9inodg" successor_AbstractAction="_S9fY-TA9Ee-znMit9inodg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_S9fY-TA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9fY-DA9Ee-znMit9inodg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_S9fY_jA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9fY_TA9Ee-znMit9inodg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_S9fZAzA9Ee-znMit9inodg" entityName="Stop Action" predecessor_AbstractAction="_S9fZAjA9Ee-znMit9inodg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_S-Yw0TA9Ee-znMit9inodg" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_S-Z-9DA9Ee-znMit9inodg" encapsulatedComponent__AssemblyContext="_S-VGfjA9Ee-znMit9inodg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_S-amAzA9Ee-znMit9inodg" innerProvidedRole_ProvidedDelegationConnector="_S-VGfTA9Ee-znMit9inodg" outerProvidedRole_ProvidedDelegationConnector="_S-Yw0DA9Ee-znMit9inodg" assemblyContext_ProvidedDelegationConnector="_S-Z-9DA9Ee-znMit9inodg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_S-Yw0DA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_S-JgRDA9Ee-znMit9inodg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_S-ZX4TA9Ee-znMit9inodg" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_S-Z-9jA9Ee-znMit9inodg" encapsulatedComponent__AssemblyContext="_S-MjmjA9Ee-znMit9inodg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_S-amBTA9Ee-znMit9inodg" innerProvidedRole_ProvidedDelegationConnector="_S-MjmTA9Ee-znMit9inodg" outerProvidedRole_ProvidedDelegationConnector="_S-ZX4DA9Ee-znMit9inodg" assemblyContext_ProvidedDelegationConnector="_S-Z-9jA9Ee-znMit9inodg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_S-ZX4DA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_S-JgQjA9Ee-znMit9inodg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_S-ZX5DA9Ee-znMit9inodg" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_S-Z-8DA9Ee-znMit9inodg" encapsulatedComponent__AssemblyContext="_S-O_3TA9Ee-znMit9inodg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_S-amATA9Ee-znMit9inodg" innerProvidedRole_ProvidedDelegationConnector="_S-O_3DA9Ee-znMit9inodg" outerProvidedRole_ProvidedDelegationConnector="_S-ZX4zA9Ee-znMit9inodg" assemblyContext_ProvidedDelegationConnector="_S-Z-8DA9Ee-znMit9inodg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_S-amAjA9Ee-znMit9inodg" innerProvidedRole_ProvidedDelegationConnector="_S-O_2zA9Ee-znMit9inodg" outerProvidedRole_ProvidedDelegationConnector="_S-ZX4jA9Ee-znMit9inodg" assemblyContext_ProvidedDelegationConnector="_S-Z-8DA9Ee-znMit9inodg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_S-ZX4jA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_S-JgQTA9Ee-znMit9inodg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_S-ZX4zA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_S-JgRTA9Ee-znMit9inodg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_S-ZX5jA9Ee-znMit9inodg" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_S-Z--DA9Ee-znMit9inodg" encapsulatedComponent__AssemblyContext="_S-TRTjA9Ee-znMit9inodg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_S-amBDA9Ee-znMit9inodg" innerProvidedRole_ProvidedDelegationConnector="_S-TRTTA9Ee-znMit9inodg" outerProvidedRole_ProvidedDelegationConnector="_S-ZX5TA9Ee-znMit9inodg" assemblyContext_ProvidedDelegationConnector="_S-Z--DA9Ee-znMit9inodg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_S-ZX5TA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_S-JgQzA9Ee-znMit9inodg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_S-ZX5zA9Ee-znMit9inodg" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_S-Z-8jA9Ee-znMit9inodg" encapsulatedComponent__AssemblyContext="_S-JgRzA9Ee-znMit9inodg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_S-ZX6TA9Ee-znMit9inodg" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_S-Z--jA9Ee-znMit9inodg" encapsulatedComponent__AssemblyContext="_S-JgSTA9Ee-znMit9inodg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_S-amADA9Ee-znMit9inodg" innerProvidedRole_ProvidedDelegationConnector="_S-JgSDA9Ee-znMit9inodg" outerProvidedRole_ProvidedDelegationConnector="_S-ZX6DA9Ee-znMit9inodg" assemblyContext_ProvidedDelegationConnector="_S-Z--jA9Ee-znMit9inodg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_S-ZX6DA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_S-JgRjA9Ee-znMit9inodg"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_S-JgQTA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_S3ookTA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_S3nacTA9Ee-znMit9inodg">
      <parameters__OperationSignature dataType__Parameter="_S3ookDA9Ee-znMit9inodg" parameterName="Tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_S-JgQjA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_S3oBgjA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_S3nacTA9Ee-znMit9inodg">
      <parameters__OperationSignature dataType__Parameter="_S3mMUDA9Ee-znMit9inodg" parameterName="RegistrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_S-JgQzA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_S23MgDA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_S22lcDA9Ee-znMit9inodg">
      <parameters__OperationSignature dataType__Parameter="_S21XUDA9Ee-znMit9inodg" parameterName="RegistrationTokenRequest" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_S-JgRDA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_S3nadTA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_S22lcDA9Ee-znMit9inodg">
      <parameters__OperationSignature dataType__Parameter="_S3mMUDA9Ee-znMit9inodg" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_S-JgRTA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_S3nacjA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_S3nacTA9Ee-znMit9inodg">
      <parameters__OperationSignature dataType__Parameter="_S3mzYzA9Ee-znMit9inodg" parameterName="AuthorizationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_S3nacDA9Ee-znMit9inodg" parameterName="TeleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_S-JgRjA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_S3mzYDA9Ee-znMit9inodg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_S22lcDA9Ee-znMit9inodg">
      <parameters__OperationSignature dataType__Parameter="_S3mMUDA9Ee-znMit9inodg" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_S21XUDA9Ee-znMit9inodg" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_S22lcDA9Ee-znMit9inodg" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_S3mMUDA9Ee-znMit9inodg" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_S3mzYzA9Ee-znMit9inodg" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_S3nacDA9Ee-znMit9inodg" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_S3nacTA9Ee-znMit9inodg" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_S3ookDA9Ee-znMit9inodg" entityName="app_coronawarn_verification_model_Tan"/>
</repository:Repository>
