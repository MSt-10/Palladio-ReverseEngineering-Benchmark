<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_XNRfbJvmEe-ORPhPLlcIrg">
  <components__Repository xsi:type="repository:BasicComponent" id="_XNAZp5vmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_XNAZpZvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_XNAZopvmEe-ORPhPLlcIrg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_XNAZppvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_XM_ymZvmEe-ORPhPLlcIrg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_XMVEQZvmEe-ORPhPLlcIrg" describedService__SEFF="_XGCO9JvmEe-ORPhPLlcIrg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_XMUdJJvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMUdMZvmEe-ORPhPLlcIrg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_XMUdMZvmEe-ORPhPLlcIrg" entityName="If Branch" predecessor_AbstractAction="_XMUdJJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMVEP5vmEe-ORPhPLlcIrg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMUdKJvmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_XMUdKpvmEe-ORPhPLlcIrg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_XMUdJZvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMUdJpvmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_XMUdJpvmEe-ORPhPLlcIrg" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_XMUdJZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMUdJ5vmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_XMUdJ5vmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMUdJpvmEe-ORPhPLlcIrg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMUdLpvmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_XMUdMJvmEe-ORPhPLlcIrg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_XMUdK5vmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMUdLJvmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_XMUdLJvmEe-ORPhPLlcIrg" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_XMUdK5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMUdLZvmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_XMUdLZvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMUdLJvmEe-ORPhPLlcIrg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_XMVEP5vmEe-ORPhPLlcIrg" entityName="If Branch" predecessor_AbstractAction="_XMUdMZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMVEQJvmEe-ORPhPLlcIrg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMVEPJvmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_XMVEPpvmEe-ORPhPLlcIrg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_XMUdMpvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMVEOpvmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_XMVEOpvmEe-ORPhPLlcIrg" entityName="If Branch" predecessor_AbstractAction="_XMUdMpvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMVEO5vmEe-ORPhPLlcIrg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMVEMpvmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_XMVENJvmEe-ORPhPLlcIrg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_XMUdM5vmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMUdNJvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMUdNJvmEe-ORPhPLlcIrg" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_XMUdM5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMVEMJvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_XMVEMJvmEe-ORPhPLlcIrg" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_XMUdNJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMVEMZvmEe-ORPhPLlcIrg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_status(HttpStatus_CREATED)_body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_XMVEMZvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMVEMJvmEe-ORPhPLlcIrg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMVEN5vmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_XMVEOZvmEe-ORPhPLlcIrg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_XMVENZvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMVENpvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_XMVENpvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMVENZvmEe-ORPhPLlcIrg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_XMVEO5vmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMVEOpvmEe-ORPhPLlcIrg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_XMVEQJvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMVEP5vmEe-ORPhPLlcIrg"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_XMUdIpvmEe-ORPhPLlcIrg" describedService__SEFF="_XGBn5JvmEe-ORPhPLlcIrg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_XMT2GZvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMUdIJvmEe-ORPhPLlcIrg"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_XMUdIJvmEe-ORPhPLlcIrg" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_XMT2GZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMUdIZvmEe-ORPhPLlcIrg">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService_getEntityByTan(tan_getTan())_filter(t -> t_canBeRedeemed(LocalDateTime_now()))_map(t -> {&#xA;  tanService_deleteTan(t);&#xA;  log_info(&quot;The Tan is valid_&quot;);&#xA;  return t;&#xA;}&#xA;)_map(t -> {&#xA;  ResponseEntity_BodyBuilder responseBuilder=ResponseEntity_ok();&#xA;  if (t_getTeleTanType() != null) {&#xA;    responseBuilder_header(TELE_TAN_TYPE_HEADER,t_getTeleTanType()_toString());&#xA;  }&#xA;  return responseBuilder_build();&#xA;}&#xA;)_orElseGet(() -> {&#xA;  log_info(&quot;The Tan is invalid_&quot;);&#xA;  throw new VerificationServerException(HttpStatus_NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_XMUdIZvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMUdIJvmEe-ORPhPLlcIrg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_XNF5NpvmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_XNF5NZvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_XNAZoZvmEe-ORPhPLlcIrg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_XMRZ45vmEe-ORPhPLlcIrg" describedService__SEFF="_XFWScJvmEe-ORPhPLlcIrg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_XGb3l5vmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMRZ4JvmEe-ORPhPLlcIrg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_XMRZ4JvmEe-ORPhPLlcIrg" entityName="If Branch" predecessor_AbstractAction="_XGb3l5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMRZ4ZvmEe-ORPhPLlcIrg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMRZ3ZvmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_XMRZ35vmEe-ORPhPLlcIrg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_XGdswJvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMRZ25vmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_XMRZ25vmEe-ORPhPLlcIrg" entityName="Switch Branch" predecessor_AbstractAction="_XGdswJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMRZ3JvmEe-ORPhPLlcIrg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMQyw5vmEe-ORPhPLlcIrg">
                <branchBehaviour_BranchTransition id="_XMQyxZvmEe-ORPhPLlcIrg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_XGeT0JvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMNvdJvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_XMNvdJvmEe-ORPhPLlcIrg" entityName="If Branch" predecessor_AbstractAction="_XGeT0JvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMOWgJvmEe-ORPhPLlcIrg">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMNvcZvmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_XMNvc5vmEe-ORPhPLlcIrg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_XGeT0ZvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMNIYJvmEe-ORPhPLlcIrg"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_XMNIYJvmEe-ORPhPLlcIrg" entityName="If Branch" predecessor_AbstractAction="_XGeT0ZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMNvcJvmEe-ORPhPLlcIrg">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XGeT1JvmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_XGe64JvmEe-ORPhPLlcIrg">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_XGeT0pvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XGeT05vmEe-ORPhPLlcIrg"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_XGeT05vmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XGeT0pvmEe-ORPhPLlcIrg"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_XMNvcJvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMNIYJvmEe-ORPhPLlcIrg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMOWgJvmEe-ORPhPLlcIrg" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_XMNvdJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMOWgZvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMOWgZvmEe-ORPhPLlcIrg" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_XMOWgJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMQywJvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_XMQywJvmEe-ORPhPLlcIrg" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_XMOWgZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMQywZvmEe-ORPhPLlcIrg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity_ok(new InternalTestResult(testResult_getTestResult(),testResult_getSc(),testResult_getLabId(),testResult_getResponsePadding(),appSession_get()_getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMQywZvmEe-ORPhPLlcIrg" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_XMQywJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMQywpvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_XMQywpvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMQywZvmEe-ORPhPLlcIrg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMRZ05vmEe-ORPhPLlcIrg">
                <branchBehaviour_BranchTransition id="_XMRZ1ZvmEe-ORPhPLlcIrg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_XMRZ0JvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMRZ0ZvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMRZ0ZvmEe-ORPhPLlcIrg" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_XMRZ0JvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMRZ0pvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_XMRZ0pvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMRZ0ZvmEe-ORPhPLlcIrg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMRZ2JvmEe-ORPhPLlcIrg">
                <branchBehaviour_BranchTransition id="_XMRZ2pvmEe-ORPhPLlcIrg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_XMRZ1pvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMRZ15vmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_XMRZ15vmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMRZ1pvmEe-ORPhPLlcIrg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_XMRZ3JvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMRZ25vmEe-ORPhPLlcIrg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_XMRZ4ZvmEe-ORPhPLlcIrg" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_XMRZ4JvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMRZ4pvmEe-ORPhPLlcIrg"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_XMRZ4pvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMRZ4ZvmEe-ORPhPLlcIrg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_XNIVdpvmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_XNIVdZvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_XNAZoJvmEe-ORPhPLlcIrg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_XMT2F5vmEe-ORPhPLlcIrg" describedService__SEFF="_XGAZwZvmEe-ORPhPLlcIrg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_XMSA4ZvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMSA6JvmEe-ORPhPLlcIrg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_XMSA6JvmEe-ORPhPLlcIrg" entityName="If Branch" predecessor_AbstractAction="_XMSA4ZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMSA6ZvmEe-ORPhPLlcIrg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMSA5ZvmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_XMSA55vmEe-ORPhPLlcIrg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_XMSA4pvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMSA45vmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_XMSA45vmEe-ORPhPLlcIrg" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_XMSA4pvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMSA5JvmEe-ORPhPLlcIrg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_XMSA5JvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMSA45vmEe-ORPhPLlcIrg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_XMSA6ZvmEe-ORPhPLlcIrg" entityName="stopWatch.start()" predecessor_AbstractAction="_XMSA6JvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMT2FZvmEe-ORPhPLlcIrg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_XMT2FZvmEe-ORPhPLlcIrg" entityName="If Branch" predecessor_AbstractAction="_XMSA6ZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMT2FpvmEe-ORPhPLlcIrg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMT2EpvmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_XMT2FJvmEe-ORPhPLlcIrg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_XMSA6pvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMT2EJvmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_XMT2EJvmEe-ORPhPLlcIrg" entityName="If Branch" predecessor_AbstractAction="_XMSA6pvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMT2EZvmEe-ORPhPLlcIrg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMTPCpvmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_XMTPDJvmEe-ORPhPLlcIrg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_XMSA65vmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMTPAJvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_XMTPAJvmEe-ORPhPLlcIrg" entityName="Switch Branch" predecessor_AbstractAction="_XMSA65vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMTPAZvmEe-ORPhPLlcIrg">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMSn9pvmEe-ORPhPLlcIrg">
                      <branchBehaviour_BranchTransition id="_XMSn-JvmEe-ORPhPLlcIrg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_XMSA7JvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMSn85vmEe-ORPhPLlcIrg"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_XMSn85vmEe-ORPhPLlcIrg" entityName="If Branch" predecessor_AbstractAction="_XMSA7JvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMSn9JvmEe-ORPhPLlcIrg">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMSn8JvmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_XMSn8pvmEe-ORPhPLlcIrg">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_XMSA7ZvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMSA7pvmEe-ORPhPLlcIrg"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_XMSA7pvmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMSA7ZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMSA75vmEe-ORPhPLlcIrg"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_XMSA75vmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMSA7pvmEe-ORPhPLlcIrg"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_XMSn9JvmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMSn85vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMSn9ZvmEe-ORPhPLlcIrg"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_XMSn9ZvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMSn9JvmEe-ORPhPLlcIrg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMSn_JvmEe-ORPhPLlcIrg">
                      <branchBehaviour_BranchTransition id="_XMSn_pvmEe-ORPhPLlcIrg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_XMSn-ZvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMSn-pvmEe-ORPhPLlcIrg"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_XMSn-pvmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMSn-ZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMSn-5vmEe-ORPhPLlcIrg"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_XMSn-5vmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMSn-pvmEe-ORPhPLlcIrg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMSoApvmEe-ORPhPLlcIrg">
                      <branchBehaviour_BranchTransition id="_XMSoBJvmEe-ORPhPLlcIrg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_XMSn_5vmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMSoAJvmEe-ORPhPLlcIrg"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_XMSoAJvmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMSn_5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMSoAZvmEe-ORPhPLlcIrg"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_XMSoAZvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMSoAJvmEe-ORPhPLlcIrg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMTPAZvmEe-ORPhPLlcIrg" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_XMTPAJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMTPApvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMTPApvmEe-ORPhPLlcIrg" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_XMTPAZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMTPA5vmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMTPA5vmEe-ORPhPLlcIrg" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_XMTPApvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMTPBJvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMTPBJvmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMTPA5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMTPBZvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMTPBZvmEe-ORPhPLlcIrg" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_XMTPBJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMTPBpvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMTPBpvmEe-ORPhPLlcIrg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_XMTPBZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMTPB5vmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMTPB5vmEe-ORPhPLlcIrg" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_XMTPBpvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMTPCJvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_XMTPCJvmEe-ORPhPLlcIrg" entityName="deferredResult" predecessor_AbstractAction="_XMTPB5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMTPCZvmEe-ORPhPLlcIrg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_XMTPCZvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMTPCJvmEe-ORPhPLlcIrg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_XMT2EZvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMT2EJvmEe-ORPhPLlcIrg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_XMT2FpvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMT2FZvmEe-ORPhPLlcIrg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_XNKxsJvmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_XNKxspvmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_XNKxsZvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_XNAZpJvmEe-ORPhPLlcIrg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_XMXgcZvmEe-ORPhPLlcIrg" describedService__SEFF="_XGBn4JvmEe-ORPhPLlcIrg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_XMVEQ5vmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMVrQZvmEe-ORPhPLlcIrg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_XMVrQZvmEe-ORPhPLlcIrg" entityName="If Branch" predecessor_AbstractAction="_XMVEQ5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMVrQpvmEe-ORPhPLlcIrg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMVER5vmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_XMVrQJvmEe-ORPhPLlcIrg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_XMVERJvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMVERZvmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_XMVERZvmEe-ORPhPLlcIrg" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_XMVERJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMVERpvmEe-ORPhPLlcIrg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController_generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController_generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_XMVERpvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMVERZvmEe-ORPhPLlcIrg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_XMVrQpvmEe-ORPhPLlcIrg" entityName="stopWatch.start()" predecessor_AbstractAction="_XMVrQZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMW5cpvmEe-ORPhPLlcIrg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_XMW5cpvmEe-ORPhPLlcIrg" entityName="Switch Branch" predecessor_AbstractAction="_XMVrQpvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMXgcJvmEe-ORPhPLlcIrg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMWSV5vmEe-ORPhPLlcIrg">
          <branchBehaviour_BranchTransition id="_XMWSWZvmEe-ORPhPLlcIrg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_XMVrQ5vmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMVrRJvmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_XMVrRJvmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMVrQ5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMVrRZvmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_XMVrRZvmEe-ORPhPLlcIrg" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_XMVrRJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMVrRpvmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_XMVrRpvmEe-ORPhPLlcIrg" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_XMVrRZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMVrR5vmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_XMVrR5vmEe-ORPhPLlcIrg" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_XMVrRpvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMVrSJvmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_XMVrSJvmEe-ORPhPLlcIrg" entityName="deferredResult" predecessor_AbstractAction="_XMVrR5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMWSU5vmEe-ORPhPLlcIrg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_XMWSU5vmEe-ORPhPLlcIrg" entityName="If Branch" predecessor_AbstractAction="_XMVrSJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMWSVJvmEe-ORPhPLlcIrg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMWSUJvmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_XMWSUpvmEe-ORPhPLlcIrg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_XMVrSZvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMVrSpvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMVrSpvmEe-ORPhPLlcIrg" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_XMVrSZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMVrS5vmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMVrS5vmEe-ORPhPLlcIrg" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_XMVrSpvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMVrTJvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMVrTJvmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMVrS5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMVrTZvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMVrTZvmEe-ORPhPLlcIrg" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_XMVrTJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMVrTpvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMVrTpvmEe-ORPhPLlcIrg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_XMVrTZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMVrT5vmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMVrT5vmEe-ORPhPLlcIrg" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_XMVrTpvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMVrUJvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_XMVrUJvmEe-ORPhPLlcIrg" entityName="deferredResult" predecessor_AbstractAction="_XMVrT5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMVrUZvmEe-ORPhPLlcIrg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_XMVrUZvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMVrUJvmEe-ORPhPLlcIrg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_XMWSVJvmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMWSU5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMWSVZvmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_XMWSVZvmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMWSVJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMWSVpvmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_XMWSVpvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMWSVZvmEe-ORPhPLlcIrg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMW5aZvmEe-ORPhPLlcIrg">
          <branchBehaviour_BranchTransition id="_XMW5a5vmEe-ORPhPLlcIrg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_XMWSWpvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMW5ZZvmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_XMW5ZZvmEe-ORPhPLlcIrg" entityName="If Branch" predecessor_AbstractAction="_XMWSWpvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMW5ZpvmEe-ORPhPLlcIrg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMW5YpvmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_XMW5ZJvmEe-ORPhPLlcIrg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_XMWSW5vmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMWSXJvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMWSXJvmEe-ORPhPLlcIrg" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_XMWSW5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMWSXZvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMWSXZvmEe-ORPhPLlcIrg" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_XMWSXJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMWSXpvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMWSXpvmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMWSXZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMWSX5vmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMWSX5vmEe-ORPhPLlcIrg" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_XMWSXpvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMWSYJvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMWSYJvmEe-ORPhPLlcIrg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_XMWSX5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMWSYZvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMWSYZvmEe-ORPhPLlcIrg" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_XMWSYJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMW5YJvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_XMW5YJvmEe-ORPhPLlcIrg" entityName="deferredResult" predecessor_AbstractAction="_XMWSYZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMW5YZvmEe-ORPhPLlcIrg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_XMW5YZvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMW5YJvmEe-ORPhPLlcIrg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_XMW5ZpvmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMW5ZZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMW5Z5vmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_XMW5Z5vmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMW5ZpvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMW5aJvmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_XMW5aJvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMW5Z5vmEe-ORPhPLlcIrg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMW5b5vmEe-ORPhPLlcIrg">
          <branchBehaviour_BranchTransition id="_XMW5cZvmEe-ORPhPLlcIrg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_XMW5bJvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMW5bZvmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_XMW5bZvmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMW5bJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMW5bpvmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_XMW5bpvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMW5bZvmEe-ORPhPLlcIrg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_XMXgcJvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMW5cpvmEe-ORPhPLlcIrg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_XNMm7pvmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_XNMm7ZvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_XNAZo5vmEe-ORPhPLlcIrg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_XMZVrpvmEe-ORPhPLlcIrg" describedService__SEFF="_XGBA0JvmEe-ORPhPLlcIrg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_XMXgc5vmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMXgepvmEe-ORPhPLlcIrg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_XMXgepvmEe-ORPhPLlcIrg" entityName="If Branch" predecessor_AbstractAction="_XMXgc5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMXge5vmEe-ORPhPLlcIrg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMXgd5vmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_XMXgeZvmEe-ORPhPLlcIrg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_XMXgdJvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMXgdZvmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_XMXgdZvmEe-ORPhPLlcIrg" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_XMXgdJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMXgdpvmEe-ORPhPLlcIrg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService_getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService_getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_XMXgdpvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMXgdZvmEe-ORPhPLlcIrg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_XMXge5vmEe-ORPhPLlcIrg" entityName="stopWatch.start()" predecessor_AbstractAction="_XMXgepvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMZVq5vmEe-ORPhPLlcIrg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_XMZVq5vmEe-ORPhPLlcIrg" entityName="If Branch" predecessor_AbstractAction="_XMXge5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMZVrJvmEe-ORPhPLlcIrg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMZVqJvmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_XMZVqpvmEe-ORPhPLlcIrg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_XMXgfJvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMZVppvmEe-ORPhPLlcIrg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_XMZVppvmEe-ORPhPLlcIrg" entityName="Switch Branch" predecessor_AbstractAction="_XMXgfJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMZVp5vmEe-ORPhPLlcIrg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMYHkpvmEe-ORPhPLlcIrg">
                <branchBehaviour_BranchTransition id="_XMYukJvmEe-ORPhPLlcIrg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_XMXgfZvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMXgfpvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMXgfpvmEe-ORPhPLlcIrg" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_XMXgfZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYHhJvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_XMYHhJvmEe-ORPhPLlcIrg" entityName="If Branch" predecessor_AbstractAction="_XMXgfpvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYHhZvmEe-ORPhPLlcIrg">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMYHgZvmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_XMYHg5vmEe-ORPhPLlcIrg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_XMXgf5vmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMXghZvmEe-ORPhPLlcIrg"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_XMXghZvmEe-ORPhPLlcIrg" entityName="If Branch" predecessor_AbstractAction="_XMXgf5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYHgJvmEe-ORPhPLlcIrg">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMXggpvmEe-ORPhPLlcIrg" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_XMXghJvmEe-ORPhPLlcIrg">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_XMXggJvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMXggZvmEe-ORPhPLlcIrg"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_XMXggZvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMXggJvmEe-ORPhPLlcIrg"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_XMYHgJvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMXghZvmEe-ORPhPLlcIrg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMYHhZvmEe-ORPhPLlcIrg" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_XMYHhJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYHhpvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMYHhpvmEe-ORPhPLlcIrg" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_XMYHhZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYHh5vmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMYHh5vmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMYHhpvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYHiJvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMYHiJvmEe-ORPhPLlcIrg" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_XMYHh5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYHiZvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMYHiZvmEe-ORPhPLlcIrg" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_XMYHiJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYHipvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_XMYHipvmEe-ORPhPLlcIrg" entityName="deferredResult" predecessor_AbstractAction="_XMYHiZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYHi5vmEe-ORPhPLlcIrg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMYHi5vmEe-ORPhPLlcIrg" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_XMYHipvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYHjJvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMYHjJvmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMYHi5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYHjZvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMYHjZvmEe-ORPhPLlcIrg" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_XMYHjJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYHjpvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMYHjpvmEe-ORPhPLlcIrg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_XMYHjZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYHj5vmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_XMYHj5vmEe-ORPhPLlcIrg" entityName="deferredResult" predecessor_AbstractAction="_XMYHjpvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYHkJvmEe-ORPhPLlcIrg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMYHkJvmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMYHj5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYHkZvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_XMYHkZvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMYHkJvmEe-ORPhPLlcIrg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMYumZvmEe-ORPhPLlcIrg">
                <branchBehaviour_BranchTransition id="_XMYum5vmEe-ORPhPLlcIrg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_XMYukZvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMYukpvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMYukpvmEe-ORPhPLlcIrg" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_XMYukZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYuk5vmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMYuk5vmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMYukpvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYulJvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMYulJvmEe-ORPhPLlcIrg" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_XMYuk5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYulZvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMYulZvmEe-ORPhPLlcIrg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_XMYulJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYulpvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_XMYulpvmEe-ORPhPLlcIrg" entityName="deferredResult" predecessor_AbstractAction="_XMYulZvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYul5vmEe-ORPhPLlcIrg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMYul5vmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMYulpvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMYumJvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_XMYumJvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMYul5vmEe-ORPhPLlcIrg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_XMZVo5vmEe-ORPhPLlcIrg">
                <branchBehaviour_BranchTransition id="_XMZVpZvmEe-ORPhPLlcIrg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_XMZVoJvmEe-ORPhPLlcIrg" entityName="Start Action" successor_AbstractAction="_XMZVoZvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_XMZVoZvmEe-ORPhPLlcIrg" entityName="stopWatch.stop()" predecessor_AbstractAction="_XMZVoJvmEe-ORPhPLlcIrg" successor_AbstractAction="_XMZVopvmEe-ORPhPLlcIrg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_XMZVopvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMZVoZvmEe-ORPhPLlcIrg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_XMZVp5vmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMZVppvmEe-ORPhPLlcIrg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_XMZVrJvmEe-ORPhPLlcIrg" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_XMZVq5vmEe-ORPhPLlcIrg" successor_AbstractAction="_XMZVrZvmEe-ORPhPLlcIrg"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_XMZVrZvmEe-ORPhPLlcIrg" entityName="Stop Action" predecessor_AbstractAction="_XMZVrJvmEe-ORPhPLlcIrg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_XNQ4UZvmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_XNRfYpvmEe-ORPhPLlcIrg" encapsulatedComponent__AssemblyContext="_XNKxspvmEe-ORPhPLlcIrg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_XNSthJvmEe-ORPhPLlcIrg" innerProvidedRole_ProvidedDelegationConnector="_XNKxsZvmEe-ORPhPLlcIrg" outerProvidedRole_ProvidedDelegationConnector="_XNQ4UJvmEe-ORPhPLlcIrg" assemblyContext_ProvidedDelegationConnector="_XNRfYpvmEe-ORPhPLlcIrg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_XNQ4UJvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_XNAZpJvmEe-ORPhPLlcIrg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_XNQ4U5vmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_XNRfYJvmEe-ORPhPLlcIrg" encapsulatedComponent__AssemblyContext="_XNIVdpvmEe-ORPhPLlcIrg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_XNStgJvmEe-ORPhPLlcIrg" innerProvidedRole_ProvidedDelegationConnector="_XNIVdZvmEe-ORPhPLlcIrg" outerProvidedRole_ProvidedDelegationConnector="_XNQ4UpvmEe-ORPhPLlcIrg" assemblyContext_ProvidedDelegationConnector="_XNRfYJvmEe-ORPhPLlcIrg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_XNQ4UpvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_XNAZoJvmEe-ORPhPLlcIrg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_XNQ4VZvmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_XNRfaJvmEe-ORPhPLlcIrg" encapsulatedComponent__AssemblyContext="_XNMm7pvmEe-ORPhPLlcIrg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_XNSGcJvmEe-ORPhPLlcIrg" innerProvidedRole_ProvidedDelegationConnector="_XNMm7ZvmEe-ORPhPLlcIrg" outerProvidedRole_ProvidedDelegationConnector="_XNQ4VJvmEe-ORPhPLlcIrg" assemblyContext_ProvidedDelegationConnector="_XNRfaJvmEe-ORPhPLlcIrg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_XNQ4VJvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_XNAZo5vmEe-ORPhPLlcIrg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_XNQ4VpvmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_XNRfapvmEe-ORPhPLlcIrg" encapsulatedComponent__AssemblyContext="_XNKxsJvmEe-ORPhPLlcIrg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_XNQ4WZvmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_XNRfZJvmEe-ORPhPLlcIrg" encapsulatedComponent__AssemblyContext="_XNAZp5vmEe-ORPhPLlcIrg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_XNStgpvmEe-ORPhPLlcIrg" innerProvidedRole_ProvidedDelegationConnector="_XNAZpZvmEe-ORPhPLlcIrg" outerProvidedRole_ProvidedDelegationConnector="_XNQ4WJvmEe-ORPhPLlcIrg" assemblyContext_ProvidedDelegationConnector="_XNRfZJvmEe-ORPhPLlcIrg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_XNStg5vmEe-ORPhPLlcIrg" innerProvidedRole_ProvidedDelegationConnector="_XNAZppvmEe-ORPhPLlcIrg" outerProvidedRole_ProvidedDelegationConnector="_XNQ4V5vmEe-ORPhPLlcIrg" assemblyContext_ProvidedDelegationConnector="_XNRfZJvmEe-ORPhPLlcIrg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_XNQ4V5vmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_XM_ymZvmEe-ORPhPLlcIrg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_XNQ4WJvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_XNAZopvmEe-ORPhPLlcIrg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_XNQ4W5vmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_XNRfZpvmEe-ORPhPLlcIrg" encapsulatedComponent__AssemblyContext="_XNF5NpvmEe-ORPhPLlcIrg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_XNStgZvmEe-ORPhPLlcIrg" innerProvidedRole_ProvidedDelegationConnector="_XNF5NZvmEe-ORPhPLlcIrg" outerProvidedRole_ProvidedDelegationConnector="_XNQ4WpvmEe-ORPhPLlcIrg" assemblyContext_ProvidedDelegationConnector="_XNRfZpvmEe-ORPhPLlcIrg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_XNQ4WpvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_XNAZoZvmEe-ORPhPLlcIrg"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_XM_ymZvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_XGBn5JvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_XFVrYJvmEe-ORPhPLlcIrg">
      <parameters__OperationSignature dataType__Parameter="_XGBn45vmEe-ORPhPLlcIrg" parameterName="tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_XNAZoJvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_XGAZwZvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_XGAZwJvmEe-ORPhPLlcIrg">
      <parameters__OperationSignature dataType__Parameter="_XFUdQJvmEe-ORPhPLlcIrg" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_XNAZoZvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_XFWScJvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_XFVrYJvmEe-ORPhPLlcIrg">
      <parameters__OperationSignature dataType__Parameter="_XFUdQJvmEe-ORPhPLlcIrg" parameterName="registrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_XNAZopvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_XGCO9JvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_XFVrYJvmEe-ORPhPLlcIrg">
      <parameters__OperationSignature dataType__Parameter="_XGCO8pvmEe-ORPhPLlcIrg" parameterName="authorization" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_XGCO85vmEe-ORPhPLlcIrg" parameterName="teleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_XNAZo5vmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_XGBA0JvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_XGAZwJvmEe-ORPhPLlcIrg">
      <parameters__OperationSignature dataType__Parameter="_XFUdQJvmEe-ORPhPLlcIrg" parameterName="registrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_XNAZpJvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_XGBn4JvmEe-ORPhPLlcIrg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_XGAZwJvmEe-ORPhPLlcIrg">
      <parameters__OperationSignature dataType__Parameter="_XGBA05vmEe-ORPhPLlcIrg" parameterName="request" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="fake" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_XFUdQJvmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_XFVrYJvmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_XGAZwJvmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_XGBA05vmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_XGBn45vmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_XGCO8pvmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_XGCO85vmEe-ORPhPLlcIrg" entityName="app_coronawarn_verification_model_TeleTanType"/>
</repository:Repository>
