<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_C2eKkRvPEe-LFbmokwZ8DA">
  <components__Repository xsi:type="repository:BasicComponent" id="_C2IMURvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_C2IMUBvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_C2HlRxvPEe-LFbmokwZ8DA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_C1bozxvPEe-LFbmokwZ8DA" describedService__SEFF="_CvVn0xvPEe-LFbmokwZ8DA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_Cvy60BvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1bozBvPEe-LFbmokwZ8DA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_C1bozBvPEe-LFbmokwZ8DA" entityName="If Branch" predecessor_AbstractAction="_Cvy60BvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1bozRvPEe-LFbmokwZ8DA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1boyRvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_C1boyxvPEe-LFbmokwZ8DA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Cv0wABvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1boxxvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_C1boxxvPEe-LFbmokwZ8DA" entityName="Switch Branch" predecessor_AbstractAction="_Cv0wABvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1boyBvPEe-LFbmokwZ8DA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1bBsxvPEe-LFbmokwZ8DA">
                <branchBehaviour_BranchTransition id="_C1bBtRvPEe-LFbmokwZ8DA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Cv0wARvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1XXVRvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_C1XXVRvPEe-LFbmokwZ8DA" entityName="If Branch" predecessor_AbstractAction="_Cv0wARvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1X-YBvPEe-LFbmokwZ8DA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1XXUhvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_C1XXVBvPEe-LFbmokwZ8DA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_Cv0wAhvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1XXUBvPEe-LFbmokwZ8DA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_C1XXUBvPEe-LFbmokwZ8DA" entityName="If Branch" predecessor_AbstractAction="_Cv0wAhvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1XXURvPEe-LFbmokwZ8DA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Cv1XERvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_Cv2lMBvPEe-LFbmokwZ8DA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_Cv0wAxvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_Cv1XEBvPEe-LFbmokwZ8DA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_Cv1XEBvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_Cv0wAxvPEe-LFbmokwZ8DA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_C1XXURvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1XXUBvPEe-LFbmokwZ8DA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1X-YBvPEe-LFbmokwZ8DA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_C1XXVRvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1YlcBvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1YlcBvPEe-LFbmokwZ8DA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_C1X-YBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1bBsBvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_C1bBsBvPEe-LFbmokwZ8DA" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_C1YlcBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1bBsRvPEe-LFbmokwZ8DA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1bBsRvPEe-LFbmokwZ8DA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_C1bBsBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1bBshvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_C1bBshvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1bBsRvPEe-LFbmokwZ8DA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1bBuRvPEe-LFbmokwZ8DA">
                <branchBehaviour_BranchTransition id="_C1bowRvPEe-LFbmokwZ8DA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_C1bBthvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1bBtxvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1bBtxvPEe-LFbmokwZ8DA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_C1bBthvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1bBuBvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_C1bBuBvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1bBtxvPEe-LFbmokwZ8DA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1boxBvPEe-LFbmokwZ8DA">
                <branchBehaviour_BranchTransition id="_C1boxhvPEe-LFbmokwZ8DA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_C1bowhvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1bowxvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_C1bowxvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1bowhvPEe-LFbmokwZ8DA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_C1boyBvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1boxxvPEe-LFbmokwZ8DA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_C1bozRvPEe-LFbmokwZ8DA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_C1bozBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1bozhvPEe-LFbmokwZ8DA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_C1bozhvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1bozRvPEe-LFbmokwZ8DA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_C2LPoBvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_C2LPoxvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_C2LPoRvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_C2HlSxvPEe-LFbmokwZ8DA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_C2LPohvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_C2HlShvPEe-LFbmokwZ8DA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_C1f6PBvPEe-LFbmokwZ8DA" describedService__SEFF="_CvWO4hvPEe-LFbmokwZ8DA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_C1fTJBvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1fTMRvPEe-LFbmokwZ8DA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_C1fTMRvPEe-LFbmokwZ8DA" entityName="If Branch" predecessor_AbstractAction="_C1fTJBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1f6OhvPEe-LFbmokwZ8DA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1fTKBvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_C1fTKhvPEe-LFbmokwZ8DA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_C1fTJRvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1fTJhvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_C1fTJhvPEe-LFbmokwZ8DA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_C1fTJRvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1fTJxvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_C1fTJxvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1fTJhvPEe-LFbmokwZ8DA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1fTLhvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_C1fTMBvPEe-LFbmokwZ8DA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_C1fTKxvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1fTLBvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_C1fTLBvPEe-LFbmokwZ8DA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_C1fTKxvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1fTLRvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_C1fTLRvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1fTLBvPEe-LFbmokwZ8DA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_C1f6OhvPEe-LFbmokwZ8DA" entityName="If Branch" predecessor_AbstractAction="_C1fTMRvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1f6OxvPEe-LFbmokwZ8DA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1f6NxvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_C1f6ORvPEe-LFbmokwZ8DA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_C1fTMhvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1f6NRvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_C1f6NRvPEe-LFbmokwZ8DA" entityName="If Branch" predecessor_AbstractAction="_C1fTMhvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1f6NhvPEe-LFbmokwZ8DA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1fTNxvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_C1fTORvPEe-LFbmokwZ8DA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_C1fTMxvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1fTNBvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1fTNBvPEe-LFbmokwZ8DA" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_C1fTMxvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1fTNRvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_C1fTNRvPEe-LFbmokwZ8DA" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_C1fTNBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1fTNhvPEe-LFbmokwZ8DA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_C1fTNhvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1fTNRvPEe-LFbmokwZ8DA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1f6MhvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_C1f6NBvPEe-LFbmokwZ8DA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_C1f6MBvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1f6MRvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_C1f6MRvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1f6MBvPEe-LFbmokwZ8DA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_C1f6NhvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1f6NRvPEe-LFbmokwZ8DA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_C1f6OxvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1f6OhvPEe-LFbmokwZ8DA"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_C1f6QRvPEe-LFbmokwZ8DA" describedService__SEFF="_CvW18BvPEe-LFbmokwZ8DA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_C1f6PhvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1f6PxvPEe-LFbmokwZ8DA"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_C1f6PxvPEe-LFbmokwZ8DA" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_C1f6PhvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1f6QBvPEe-LFbmokwZ8DA">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_C1f6QBvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1f6PxvPEe-LFbmokwZ8DA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_C2QIJhvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_C2QIJRvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_C2HlSRvPEe-LFbmokwZ8DA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_C1fTIhvPEe-LFbmokwZ8DA" describedService__SEFF="_CvVAwRvPEe-LFbmokwZ8DA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_C1dd-RvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1deABvPEe-LFbmokwZ8DA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_C1deABvPEe-LFbmokwZ8DA" entityName="If Branch" predecessor_AbstractAction="_C1dd-RvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1deARvPEe-LFbmokwZ8DA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1dd_RvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_C1dd_xvPEe-LFbmokwZ8DA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_C1dd-hvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1dd-xvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_C1dd-xvPEe-LFbmokwZ8DA" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_C1dd-hvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1dd_BvPEe-LFbmokwZ8DA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_C1dd_BvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1dd-xvPEe-LFbmokwZ8DA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_C1deARvPEe-LFbmokwZ8DA" entityName="stopWatch.start()" predecessor_AbstractAction="_C1deABvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1esJhvPEe-LFbmokwZ8DA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_C1esJhvPEe-LFbmokwZ8DA" entityName="If Branch" predecessor_AbstractAction="_C1deARvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1fTIBvPEe-LFbmokwZ8DA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1esIxvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_C1esJRvPEe-LFbmokwZ8DA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_C1deAhvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1esIRvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_C1esIRvPEe-LFbmokwZ8DA" entityName="Switch Branch" predecessor_AbstractAction="_C1deAhvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1esIhvPEe-LFbmokwZ8DA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1eFFhvPEe-LFbmokwZ8DA">
                <branchBehaviour_BranchTransition id="_C1eFGBvPEe-LFbmokwZ8DA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_C1deAxvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1deBBvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1deBBvPEe-LFbmokwZ8DA" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_C1deAxvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1eFCBvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_C1eFCBvPEe-LFbmokwZ8DA" entityName="If Branch" predecessor_AbstractAction="_C1deBBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1eFCRvPEe-LFbmokwZ8DA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1eFBRvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_C1eFBxvPEe-LFbmokwZ8DA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_C1deBRvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1eFAxvPEe-LFbmokwZ8DA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_C1eFAxvPEe-LFbmokwZ8DA" entityName="If Branch" predecessor_AbstractAction="_C1deBRvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1eFBBvPEe-LFbmokwZ8DA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1eFABvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_C1eFAhvPEe-LFbmokwZ8DA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_C1deBhvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1deBxvPEe-LFbmokwZ8DA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_C1deBxvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1deBhvPEe-LFbmokwZ8DA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_C1eFBBvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1eFAxvPEe-LFbmokwZ8DA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1eFCRvPEe-LFbmokwZ8DA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_C1eFCBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1eFChvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1eFChvPEe-LFbmokwZ8DA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_C1eFCRvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1eFCxvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1eFCxvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1eFChvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1eFDBvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1eFDBvPEe-LFbmokwZ8DA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_C1eFCxvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1eFDRvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1eFDRvPEe-LFbmokwZ8DA" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_C1eFDBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1eFDhvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_C1eFDhvPEe-LFbmokwZ8DA" entityName="deferredResult" predecessor_AbstractAction="_C1eFDRvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1eFDxvPEe-LFbmokwZ8DA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1eFDxvPEe-LFbmokwZ8DA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_C1eFDhvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1eFEBvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1eFEBvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1eFDxvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1eFERvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1eFERvPEe-LFbmokwZ8DA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_C1eFEBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1eFEhvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1eFEhvPEe-LFbmokwZ8DA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_C1eFERvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1eFExvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_C1eFExvPEe-LFbmokwZ8DA" entityName="deferredResult" predecessor_AbstractAction="_C1eFEhvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1eFFBvPEe-LFbmokwZ8DA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1eFFBvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1eFExvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1eFFRvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_C1eFFRvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1eFFBvPEe-LFbmokwZ8DA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1esGBvPEe-LFbmokwZ8DA">
                <branchBehaviour_BranchTransition id="_C1esGhvPEe-LFbmokwZ8DA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_C1esEBvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1esERvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1esERvPEe-LFbmokwZ8DA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_C1esEBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1esEhvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1esEhvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1esERvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1esExvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1esExvPEe-LFbmokwZ8DA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_C1esEhvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1esFBvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1esFBvPEe-LFbmokwZ8DA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_C1esExvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1esFRvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_C1esFRvPEe-LFbmokwZ8DA" entityName="deferredResult" predecessor_AbstractAction="_C1esFBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1esFhvPEe-LFbmokwZ8DA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1esFhvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1esFRvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1esFxvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_C1esFxvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1esFhvPEe-LFbmokwZ8DA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1esHhvPEe-LFbmokwZ8DA">
                <branchBehaviour_BranchTransition id="_C1esIBvPEe-LFbmokwZ8DA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_C1esGxvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1esHBvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1esHBvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1esGxvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1esHRvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_C1esHRvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1esHBvPEe-LFbmokwZ8DA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_C1esIhvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1esIRvPEe-LFbmokwZ8DA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_C1fTIBvPEe-LFbmokwZ8DA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_C1esJhvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1fTIRvPEe-LFbmokwZ8DA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_C1fTIRvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1fTIBvPEe-LFbmokwZ8DA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_C2SkZhvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_C2SkZRvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_C2HlSBvPEe-LFbmokwZ8DA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_C1dd9xvPEe-LFbmokwZ8DA" describedService__SEFF="_CvW18xvPEe-LFbmokwZ8DA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_C1bo0RvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1cP1BvPEe-LFbmokwZ8DA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_C1cP1BvPEe-LFbmokwZ8DA" entityName="If Branch" predecessor_AbstractAction="_C1bo0RvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1cP1RvPEe-LFbmokwZ8DA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1cP0RvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_C1cP0xvPEe-LFbmokwZ8DA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_C1bo0hvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1bo0xvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_C1bo0xvPEe-LFbmokwZ8DA" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_C1bo0hvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1cP0BvPEe-LFbmokwZ8DA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_C1cP0BvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1bo0xvPEe-LFbmokwZ8DA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_C1cP1RvPEe-LFbmokwZ8DA" entityName="stopWatch.start()" predecessor_AbstractAction="_C1cP1BvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1dd9RvPEe-LFbmokwZ8DA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_C1dd9RvPEe-LFbmokwZ8DA" entityName="If Branch" predecessor_AbstractAction="_C1cP1RvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1dd9hvPEe-LFbmokwZ8DA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1dd8hvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_C1dd9BvPEe-LFbmokwZ8DA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_C1cP1hvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1dd8BvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_C1dd8BvPEe-LFbmokwZ8DA" entityName="If Branch" predecessor_AbstractAction="_C1cP1hvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1dd8RvPEe-LFbmokwZ8DA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1c28RvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_C1c28xvPEe-LFbmokwZ8DA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_C1cP1xvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1c25xvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_C1c25xvPEe-LFbmokwZ8DA" entityName="Switch Branch" predecessor_AbstractAction="_C1cP1xvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1c26BvPEe-LFbmokwZ8DA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1cP4hvPEe-LFbmokwZ8DA">
                      <branchBehaviour_BranchTransition id="_C1cP5BvPEe-LFbmokwZ8DA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_C1cP2BvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1cP3xvPEe-LFbmokwZ8DA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_C1cP3xvPEe-LFbmokwZ8DA" entityName="If Branch" predecessor_AbstractAction="_C1cP2BvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1cP4BvPEe-LFbmokwZ8DA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1cP3BvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_C1cP3hvPEe-LFbmokwZ8DA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_C1cP2RvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1cP2hvPEe-LFbmokwZ8DA"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_C1cP2hvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1cP2RvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1cP2xvPEe-LFbmokwZ8DA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_C1cP2xvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1cP2hvPEe-LFbmokwZ8DA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_C1cP4BvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1cP3xvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1cP4RvPEe-LFbmokwZ8DA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_C1cP4RvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1cP4BvPEe-LFbmokwZ8DA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1cP6BvPEe-LFbmokwZ8DA">
                      <branchBehaviour_BranchTransition id="_C1c24BvPEe-LFbmokwZ8DA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_C1cP5RvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1cP5hvPEe-LFbmokwZ8DA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_C1cP5hvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1cP5RvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1cP5xvPEe-LFbmokwZ8DA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_C1cP5xvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1cP5hvPEe-LFbmokwZ8DA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1c25BvPEe-LFbmokwZ8DA">
                      <branchBehaviour_BranchTransition id="_C1c25hvPEe-LFbmokwZ8DA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_C1c24RvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1c24hvPEe-LFbmokwZ8DA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_C1c24hvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1c24RvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1c24xvPEe-LFbmokwZ8DA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_C1c24xvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1c24hvPEe-LFbmokwZ8DA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1c26BvPEe-LFbmokwZ8DA" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_C1c25xvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1c26RvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1c26RvPEe-LFbmokwZ8DA" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_C1c26BvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1c26hvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1c26hvPEe-LFbmokwZ8DA" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_C1c26RvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1c26xvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1c26xvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1c26hvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1c27BvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1c27BvPEe-LFbmokwZ8DA" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_C1c26xvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1c27RvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1c27RvPEe-LFbmokwZ8DA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_C1c27BvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1c27hvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1c27hvPEe-LFbmokwZ8DA" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_C1c27RvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1c27xvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_C1c27xvPEe-LFbmokwZ8DA" entityName="deferredResult" predecessor_AbstractAction="_C1c27hvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1c28BvPEe-LFbmokwZ8DA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_C1c28BvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1c27xvPEe-LFbmokwZ8DA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_C1dd8RvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1dd8BvPEe-LFbmokwZ8DA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_C1dd9hvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1dd9RvPEe-LFbmokwZ8DA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_C2YD8RvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_C2YD8BvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_C2HlTBvPEe-LFbmokwZ8DA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_C1hvcxvPEe-LFbmokwZ8DA" describedService__SEFF="_CuhIcBvPEe-LFbmokwZ8DA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_C1f6QxvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1ghRhvPEe-LFbmokwZ8DA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_C1ghRhvPEe-LFbmokwZ8DA" entityName="If Branch" predecessor_AbstractAction="_C1f6QxvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1ghRxvPEe-LFbmokwZ8DA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1ghQxvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_C1ghRRvPEe-LFbmokwZ8DA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_C1ghQBvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1ghQRvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_C1ghQRvPEe-LFbmokwZ8DA" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_C1ghQBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1ghQhvPEe-LFbmokwZ8DA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController.generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController.generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_C1ghQhvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1ghQRvPEe-LFbmokwZ8DA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_C1ghRxvPEe-LFbmokwZ8DA" entityName="stopWatch.start()" predecessor_AbstractAction="_C1ghRhvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1hvcRvPEe-LFbmokwZ8DA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_C1hvcRvPEe-LFbmokwZ8DA" entityName="Switch Branch" predecessor_AbstractAction="_C1ghRxvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1hvchvPEe-LFbmokwZ8DA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1hIWBvPEe-LFbmokwZ8DA">
          <branchBehaviour_BranchTransition id="_C1hIWhvPEe-LFbmokwZ8DA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_C1ghSBvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1ghSRvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_C1ghSRvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1ghSBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1ghShvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_C1ghShvPEe-LFbmokwZ8DA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_C1ghSRvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1ghSxvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_C1ghSxvPEe-LFbmokwZ8DA" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_C1ghShvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1ghTBvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_C1ghTBvPEe-LFbmokwZ8DA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_C1ghSxvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1ghTRvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_C1ghTRvPEe-LFbmokwZ8DA" entityName="deferredResult" predecessor_AbstractAction="_C1ghTBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1hIVBvPEe-LFbmokwZ8DA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_C1hIVBvPEe-LFbmokwZ8DA" entityName="If Branch" predecessor_AbstractAction="_C1ghTRvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1hIVRvPEe-LFbmokwZ8DA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1hIURvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_C1hIUxvPEe-LFbmokwZ8DA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_C1ghThvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1ghTxvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1ghTxvPEe-LFbmokwZ8DA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_C1ghThvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1ghUBvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1ghUBvPEe-LFbmokwZ8DA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_C1ghTxvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1ghURvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1ghURvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1ghUBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1ghUhvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1ghUhvPEe-LFbmokwZ8DA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_C1ghURvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1ghUxvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1ghUxvPEe-LFbmokwZ8DA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_C1ghUhvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1ghVBvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1ghVBvPEe-LFbmokwZ8DA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_C1ghUxvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1ghVRvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_C1ghVRvPEe-LFbmokwZ8DA" entityName="deferredResult" predecessor_AbstractAction="_C1ghVBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1hIUBvPEe-LFbmokwZ8DA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_C1hIUBvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1ghVRvPEe-LFbmokwZ8DA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_C1hIVRvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1hIVBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1hIVhvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_C1hIVhvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1hIVRvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1hIVxvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_C1hIVxvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1hIVhvPEe-LFbmokwZ8DA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1hvaBvPEe-LFbmokwZ8DA">
          <branchBehaviour_BranchTransition id="_C1hvahvPEe-LFbmokwZ8DA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_C1hIWxvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1hvZBvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_C1hvZBvPEe-LFbmokwZ8DA" entityName="If Branch" predecessor_AbstractAction="_C1hIWxvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1hvZRvPEe-LFbmokwZ8DA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1hvYRvPEe-LFbmokwZ8DA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_C1hvYxvPEe-LFbmokwZ8DA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_C1hIXBvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1hIXRvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1hIXRvPEe-LFbmokwZ8DA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_C1hIXBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1hIXhvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1hIXhvPEe-LFbmokwZ8DA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_C1hIXRvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1hIXxvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1hIXxvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1hIXhvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1hIYBvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1hIYBvPEe-LFbmokwZ8DA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_C1hIXxvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1hIYRvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1hIYRvPEe-LFbmokwZ8DA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_C1hIYBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1hIYhvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_C1hIYhvPEe-LFbmokwZ8DA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_C1hIYRvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1hIYxvPEe-LFbmokwZ8DA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_C1hIYxvPEe-LFbmokwZ8DA" entityName="deferredResult" predecessor_AbstractAction="_C1hIYhvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1hvYBvPEe-LFbmokwZ8DA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_C1hvYBvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1hIYxvPEe-LFbmokwZ8DA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_C1hvZRvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1hvZBvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1hvZhvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_C1hvZhvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1hvZRvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1hvZxvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_C1hvZxvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1hvZhvPEe-LFbmokwZ8DA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_C1hvbhvPEe-LFbmokwZ8DA">
          <branchBehaviour_BranchTransition id="_C1hvcBvPEe-LFbmokwZ8DA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_C1hvaxvPEe-LFbmokwZ8DA" entityName="Start Action" successor_AbstractAction="_C1hvbBvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_C1hvbBvPEe-LFbmokwZ8DA" entityName="stopWatch.stop()" predecessor_AbstractAction="_C1hvaxvPEe-LFbmokwZ8DA" successor_AbstractAction="_C1hvbRvPEe-LFbmokwZ8DA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_C1hvbRvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1hvbBvPEe-LFbmokwZ8DA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_C1hvchvPEe-LFbmokwZ8DA" entityName="Stop Action" predecessor_AbstractAction="_C1hvcRvPEe-LFbmokwZ8DA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_C2c8cRvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_C2djghvPEe-LFbmokwZ8DA" encapsulatedComponent__AssemblyContext="_C2SkZhvPEe-LFbmokwZ8DA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_C2exoRvPEe-LFbmokwZ8DA" innerProvidedRole_ProvidedDelegationConnector="_C2SkZRvPEe-LFbmokwZ8DA" outerProvidedRole_ProvidedDelegationConnector="_C2c8cBvPEe-LFbmokwZ8DA" assemblyContext_ProvidedDelegationConnector="_C2djghvPEe-LFbmokwZ8DA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_C2c8cBvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_C2HlSBvPEe-LFbmokwZ8DA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_C2c8cxvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_C2djgBvPEe-LFbmokwZ8DA" encapsulatedComponent__AssemblyContext="_C2IMURvPEe-LFbmokwZ8DA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_C2expBvPEe-LFbmokwZ8DA" innerProvidedRole_ProvidedDelegationConnector="_C2IMUBvPEe-LFbmokwZ8DA" outerProvidedRole_ProvidedDelegationConnector="_C2c8chvPEe-LFbmokwZ8DA" assemblyContext_ProvidedDelegationConnector="_C2djgBvPEe-LFbmokwZ8DA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_C2c8chvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_C2HlRxvPEe-LFbmokwZ8DA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_C2c8dRvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_C2djiBvPEe-LFbmokwZ8DA" encapsulatedComponent__AssemblyContext="_C2QIJhvPEe-LFbmokwZ8DA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_C2exoBvPEe-LFbmokwZ8DA" innerProvidedRole_ProvidedDelegationConnector="_C2QIJRvPEe-LFbmokwZ8DA" outerProvidedRole_ProvidedDelegationConnector="_C2c8dBvPEe-LFbmokwZ8DA" assemblyContext_ProvidedDelegationConnector="_C2djiBvPEe-LFbmokwZ8DA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_C2c8dBvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_C2HlSRvPEe-LFbmokwZ8DA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_C2c8dxvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_C2djhBvPEe-LFbmokwZ8DA" encapsulatedComponent__AssemblyContext="_C2YD8RvPEe-LFbmokwZ8DA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_C2expRvPEe-LFbmokwZ8DA" innerProvidedRole_ProvidedDelegationConnector="_C2YD8BvPEe-LFbmokwZ8DA" outerProvidedRole_ProvidedDelegationConnector="_C2c8dhvPEe-LFbmokwZ8DA" assemblyContext_ProvidedDelegationConnector="_C2djhBvPEe-LFbmokwZ8DA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_C2c8dhvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_C2HlTBvPEe-LFbmokwZ8DA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_C2c8eBvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_C2djihvPEe-LFbmokwZ8DA" encapsulatedComponent__AssemblyContext="_C2LPoBvPEe-LFbmokwZ8DA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_C2c8exvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_C2djhhvPEe-LFbmokwZ8DA" encapsulatedComponent__AssemblyContext="_C2LPoxvPEe-LFbmokwZ8DA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_C2exohvPEe-LFbmokwZ8DA" innerProvidedRole_ProvidedDelegationConnector="_C2LPoRvPEe-LFbmokwZ8DA" outerProvidedRole_ProvidedDelegationConnector="_C2c8ehvPEe-LFbmokwZ8DA" assemblyContext_ProvidedDelegationConnector="_C2djhhvPEe-LFbmokwZ8DA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_C2exoxvPEe-LFbmokwZ8DA" innerProvidedRole_ProvidedDelegationConnector="_C2LPohvPEe-LFbmokwZ8DA" outerProvidedRole_ProvidedDelegationConnector="_C2c8eRvPEe-LFbmokwZ8DA" assemblyContext_ProvidedDelegationConnector="_C2djhhvPEe-LFbmokwZ8DA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_C2c8eRvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_C2HlShvPEe-LFbmokwZ8DA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_C2c8ehvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_C2HlSxvPEe-LFbmokwZ8DA"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_C2HlRxvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_CvVn0xvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_CvVn0hvPEe-LFbmokwZ8DA">
      <parameters__OperationSignature dataType__Parameter="_CvVAwBvPEe-LFbmokwZ8DA" parameterName="RegistrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_C2HlSBvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_CvW18xvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_CughYBvPEe-LFbmokwZ8DA">
      <parameters__OperationSignature dataType__Parameter="_CvVAwBvPEe-LFbmokwZ8DA" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_C2HlSRvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_CvVAwRvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_CughYBvPEe-LFbmokwZ8DA">
      <parameters__OperationSignature dataType__Parameter="_CvVAwBvPEe-LFbmokwZ8DA" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_C2HlShvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_CvW18BvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_CvVn0hvPEe-LFbmokwZ8DA">
      <parameters__OperationSignature dataType__Parameter="_CvWO5RvPEe-LFbmokwZ8DA" parameterName="Tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_C2HlSxvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_CvWO4hvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_CvVn0hvPEe-LFbmokwZ8DA">
      <parameters__OperationSignature dataType__Parameter="_CvWO4BvPEe-LFbmokwZ8DA" parameterName="AuthorizationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_CvWO4RvPEe-LFbmokwZ8DA" parameterName="TeleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_C2HlTBvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_CuhIcBvPEe-LFbmokwZ8DA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_CughYBvPEe-LFbmokwZ8DA">
      <parameters__OperationSignature dataType__Parameter="_CufTQBvPEe-LFbmokwZ8DA" parameterName="RegistrationTokenRequest" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_CufTQBvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_CughYBvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_CvVAwBvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_CvVn0hvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_CvWO4BvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_CvWO4RvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_CvWO5RvPEe-LFbmokwZ8DA" entityName="app_coronawarn_verification_model_Tan"/>
</repository:Repository>
