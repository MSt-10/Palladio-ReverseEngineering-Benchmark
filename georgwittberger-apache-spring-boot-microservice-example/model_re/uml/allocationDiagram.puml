@startuml
skinparam fixCircleLabelOverlapping true
skinparam componentStyle uml2
node nodeio_github_georgwittberger_microserviceexample_cartservice {
component io_github_georgwittberger_microserviceexample_cartservice {
[io_github_georgwittberger_microserviceexample_cartservice_cart_CartService] [[georgwittberger-apache-spring-boot-microservice-example.system#_HUCzJ9ODEe6I9-U1Clg_MA]]
[io_github_georgwittberger_microserviceexample_cartservice_web_CartController] [[georgwittberger-apache-spring-boot-microservice-example.system#_HUCzJ9ODEe6I9-U1Clg_MA]]
}
}
node nodeio_github_georgwittberger_microserviceexample_productservice {
component io_github_georgwittberger_microserviceexample_productservice {
[io_github_georgwittberger_microserviceexample_productservice_product_ProductService] [[georgwittberger-apache-spring-boot-microservice-example.system#_HUCzJ9ODEe6I9-U1Clg_MA]]
[io_github_georgwittberger_microserviceexample_productservice_web_ProductController] [[georgwittberger-apache-spring-boot-microservice-example.system#_HUCzJ9ODEe6I9-U1Clg_MA]]
}
}
node nodeio_github_georgwittberger_microserviceexample_cartservice_cart_RestTemplate_Provider {
[io_github_georgwittberger_microserviceexample_cartservice_cart_RestTemplate_Provider] [[georgwittberger-apache-spring-boot-microservice-example.system#_HUCzJ9ODEe6I9-U1Clg_MA]]
}
node nodeio_github_georgwittberger_microserviceexample_contentservice_web_ContentController {
[io_github_georgwittberger_microserviceexample_contentservice_web_ContentController] [[georgwittberger-apache-spring-boot-microservice-example.system#_HUCzJ9ODEe6I9-U1Clg_MA]]
}
[nodeio_github_georgwittberger_microserviceexample_cartservice_cart_RestTemplate_Provider] - [nodeio_github_georgwittberger_microserviceexample_cartservice]

@enduml
